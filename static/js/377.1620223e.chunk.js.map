{"version":3,"file":"static/js/377.1620223e.chunk.js","mappings":"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","sources":["../node_modules/react-hook-form-persist/dist/index.mjs","components/InputField/InputField.styled.jsx","components/InputField/InputField.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","utils/getMessageContent.js","utils/yupSchema.js"],"sourcesContent":["var __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport { useEffect } from \"react\";\nvar useFormPersist = (name, {\n  storage,\n  watch,\n  setValue,\n  exclude = [],\n  onDataRestored,\n  validate = false,\n  dirty = false,\n  onTimeout,\n  timeout\n}) => {\n  const watchedValues = watch();\n  const getStorage = () => storage || window.sessionStorage;\n  const clearStorage = () => getStorage().removeItem(name);\n  useEffect(() => {\n    const str = getStorage().getItem(name);\n    if (str) {\n      const _a = JSON.parse(str), { _timestamp = null } = _a, values = __objRest(_a, [\"_timestamp\"]);\n      const dataRestored = {};\n      const currTimestamp = Date.now();\n      if (timeout && currTimestamp - _timestamp > timeout) {\n        onTimeout && onTimeout();\n        clearStorage();\n        return;\n      }\n      Object.keys(values).forEach((key) => {\n        const shouldSet = !exclude.includes(key);\n        if (shouldSet) {\n          dataRestored[key] = values[key];\n          setValue(key, values[key], {\n            shouldValidate: validate,\n            shouldDirty: dirty\n          });\n        }\n      });\n      if (onDataRestored) {\n        onDataRestored(dataRestored);\n      }\n    }\n  }, [\n    storage,\n    name,\n    onDataRestored,\n    setValue\n  ]);\n  useEffect(() => {\n    const values = exclude.length ? Object.entries(watchedValues).filter(([key]) => !exclude.includes(key)).reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {}) : Object.assign({}, watchedValues);\n    if (Object.entries(values).length) {\n      if (timeout !== void 0) {\n        values._timestamp = Date.now();\n      }\n      getStorage().setItem(name, JSON.stringify(values));\n    }\n  }, [watchedValues, timeout]);\n  return {\n    clear: () => getStorage().removeItem(name)\n  };\n};\nvar src_default = useFormPersist;\nexport {\n  src_default as default\n};\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  padding: 12px 16px;\r\n  border: 1px solid #000000;\r\n  width: -webkit-fill-available;\r\n  border-color: ${p => p.$errors && 'red'};\r\n  @media (min-width: 768px) {\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    padding: 16px;\r\n  }\r\n`;\r\nexport const Textarea = styled.textarea`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  padding: 19px 16px;\r\n  border: 1px solid #000000;\r\n  height: 156px;\r\n  resize: none;\r\n  width: -webkit-fill-available;\r\n  border-color: ${p => p.$errors && 'red'};\r\n  @media (min-width: 768px) {\r\n    font-size: 14px;\r\n    line-height: 16px;\r\n    padding: 18px 16px;\r\n  }\r\n`;\r\nexport const ErrorMessage = styled.p`\r\n  color: red;\r\n  position: absolute;\r\n  bottom: -13px;\r\n  font-size: 12px;\r\n  left: 0;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    bottom: -17px;\r\n  }\r\n`;\r\nexport const Counter = styled.div`\r\n  color: #888;\r\n  font-size: 12px;\r\n  position: absolute;\r\n  bottom: -15px;\r\n  right: 0;\r\n`;\r\n","import { Counter, ErrorMessage, Input, Textarea } from './InputField.styled';\r\n\r\nexport const InputField = ({\r\n  type,\r\n  name,\r\n  register,\r\n  errors,\r\n  placeholder,\r\n  maxLength,\r\n  handleInputChange,\r\n  isApproachingMax,\r\n  charCount,\r\n}) => {\r\n  return (\r\n    <>\r\n      {type === 'textarea' ? (\r\n        <div style={{ position: 'relative' }}>\r\n          <Textarea\r\n            id={name}\r\n            {...register(name)}\r\n            placeholder={placeholder}\r\n            onKeyUp={handleInputChange}\r\n            maxLength={maxLength}\r\n            $errors={errors[name]}\r\n          ></Textarea>\r\n          <Counter style={{ color: isApproachingMax ? 'red' : '' }}>\r\n            {charCount}/{maxLength}\r\n          </Counter>\r\n          {errors[name] && <ErrorMessage>{errors[name].message}</ErrorMessage>}\r\n        </div>\r\n      ) : (\r\n        <div style={{ position: 'relative' }}>\r\n          <Input\r\n            id={name}\r\n            {...register(name)}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            autoComplete=\"true\"\r\n            $errors={errors[name]}\r\n          />\r\n          {errors[name] && <ErrorMessage>{errors[name].message}</ErrorMessage>}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ContactsForm = styled.form`\r\n  width: 100%;\r\n  max-width: 303px;\r\n  @media (min-width: 768px) {\r\n    max-width: 438px;\r\n  }\r\n`;\r\nexport const ContactsFormWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n  margin-bottom: 12px;\r\n  @media (min-width: 768px) {\r\n    margin-bottom: 18px;\r\n    gap: 18px;\r\n    max-width: 438px;\r\n  }\r\n`;\r\nexport const FormTitle = styled.h3`\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  line-height: 21px;\r\n  margin-bottom: 16px;\r\n  @media (min-width: 768px) {\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    line-height: 29px;\r\n    margin-bottom: 22px;\r\n  }\r\n`;\r\nexport const FormButton = styled.button`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  line-height: 18px;\r\n  padding: 10px 0;\r\n  background: #686868;\r\n  color: #fff;\r\n  border: none;\r\n  width: 186px;\r\n  @media (min-width: 768px) {\r\n    width: 253px;\r\n    font-size: 22px;\r\n    line-height: 25px;\r\n    margin-bottom: 22px;\r\n  }\r\n`;\r\nexport const SuccessMessageWrapper = styled.div`\r\n  width: 100%;\r\n  background-color: #c9c9c9;\r\n  padding: 27px 30px;\r\n  height: max-content;\r\n  text-align: center;\r\n  max-width: 688px;\r\n`;\r\nexport const SuccessContainer = styled.p`\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n  text-align: center;\r\n  @media (min-width: 768px) {\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n  }\r\n`;\r\n\r\n// SubscriptionForm\r\n\r\nexport const SubscriptionFormSection = styled.section`\r\n  width: 100%;\r\n  padding: 30px 0;\r\n  @media (min-width: 768px) {\r\n    padding: 60px 0;\r\n  }\r\n`;\r\n\r\nexport const SubscriptionFormWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  padding-left: 28px;\r\n  padding-right: 28px;\r\n  @media (min-width: 768px) {\r\n    gap: 20px;\r\n    max-width: 1360px;\r\n    padding-left: 40px;\r\n    padding-right: 40px;\r\n  }\r\n`;\r\nexport const SubscriptionFormImage = styled.div`\r\n  width: 330px;\r\n  height: 315px;\r\n  background-color: #ececec;\r\n  display: none;\r\n  @media screen and (min-width: 768px) {\r\n    display: block;\r\n  }\r\n  @media (min-width: 768px) {\r\n    width: 418px;\r\n    height: 400px;\r\n  }\r\n`;\r\nexport const SubscriptionFormContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 33px;\r\n  @media (min-width: 768px) {\r\n    gap: 43px;\r\n  }\r\n`;\r\nexport const SubscriptionFormTitle = styled.h3`\r\n  width: 192px;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n  @media (min-width: 768px) {\r\n    width: 459px;\r\n    font-size: 36px;\r\n    font-weight: 400;\r\n    line-height: 50px;\r\n  }\r\n`;\r\nexport const SubForm = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  width: 304px;\r\n  @media (min-width: 768px) {\r\n    width: 534px;\r\n  }\r\n`;\r\nexport const SubscriptionFormInput = styled.input`\r\n  width: 100%;\r\n  padding: 10px 16px 10px 16px;\r\n  border: 1px solid #000000;\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n  color: #696969;\r\n  @media (min-width: 768px) {\r\n    padding: 14px 16px 14px 16px;\r\n    font-size: 20px;\r\n    line-height: 28px;\r\n  }\r\n`;\r\nexport const SubscriptionFormButton = styled.button`\r\n  border: none;\r\n  padding: 11px 27px;\r\n  background: #191919;\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n  color: #fff;\r\n  @media (min-width: 768px) {\r\n    padding: 15px;\r\n    font-size: 20px;\r\n    line-height: 28px;\r\n    border: none;\r\n  }\r\n`;\r\nexport const SubscriptionFormContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\nexport const ErrorMessage = styled.p`\r\n  color: red;\r\n`;\r\n\r\nexport const SuccessMessage = styled.p`\r\n  color: green;\r\n`;\r\n","import { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport useFormPersist from 'react-hook-form-persist';\r\nimport { useDispatch } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport getButtonContent from 'utils/getMessageContent';\r\nimport { emailSchema, formSchema } from '../../utils/yupSchema';\r\nimport { contactUs, subscription } from '../../redux/subscription/operations';\r\n\r\nimport { InputField } from 'components/InputField/InputField';\r\n\r\nimport {\r\n  ErrorMessage,\r\n  SubscriptionFormButton,\r\n  SubscriptionFormContainer,\r\n  SubscriptionFormContent,\r\n  SubscriptionFormImage,\r\n  SubscriptionFormInput,\r\n  SubscriptionFormSection,\r\n  SubscriptionFormTitle,\r\n  SubscriptionFormWrapper,\r\n  SuccessMessage,\r\n  ContactsFormWrapper,\r\n  ContactsForm,\r\n  FormTitle,\r\n  FormButton,\r\n  SuccessMessageWrapper,\r\n  SubForm,\r\n} from './Form.styled';\r\n\r\nexport const Form = ({ formType }) => {\r\n  const [formStatus, setFormStatus] = useState(null);\r\n  const [isSubscribed, setIsSubscribed] = useState(false);\r\n  const [isValid, setIsValid] = useState(true);\r\n  const [charCount, setCharCount] = useState(0);\r\n  const [isApproachingMax, setIsApproachingMax] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const storedData = localStorage.getItem('contact_us_form');\r\n    if (storedData) {\r\n      const messageValue = JSON.parse(storedData).message || '';\r\n      setCharCount(messageValue.length);\r\n      setIsApproachingMax(messageValue.length >= 1000 - 10);\r\n    }\r\n  }, []);\r\n\r\n  const handleInputChange = event => {\r\n    const length = event.target.value.length;\r\n    setCharCount(length);\r\n    setIsApproachingMax(length >= 100 - 10);\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    setValue,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n    resolver:\r\n      formType === 'subscription'\r\n        ? yupResolver(emailSchema)\r\n        : yupResolver(formSchema),\r\n  });\r\n\r\n  const messageContent = getButtonContent(\r\n    isValid,\r\n    errors,\r\n    isSubscribed,\r\n    ErrorMessage,\r\n    SuccessMessage\r\n  );\r\n\r\n  const handleChange = () => {\r\n    setIsSubscribed(false);\r\n  };\r\n\r\n  const onSubmitSubscription = async email => {\r\n    try {\r\n      await emailSchema.validate({ email: email.email });\r\n      dispatch(subscription({ subscriptionId: 1, email: email.email }));\r\n      reset();\r\n      setIsSubscribed(true);\r\n      setIsValid(true);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setIsValid(false);\r\n      setIsSubscribed(false);\r\n    }\r\n  };\r\n\r\n  const onSubmitContactUs = async formData => {\r\n    try {\r\n      setFormStatus('success');\r\n      setTimeout(() => {\r\n        setFormStatus(null);\r\n      }, 5000);\r\n      dispatch(contactUs(formData));\r\n      setCharCount(0);\r\n      reset();\r\n    } catch (error) {\r\n      console.error(error);\r\n      setFormStatus('error');\r\n      setTimeout(() => {\r\n        setFormStatus(null);\r\n      }, 5000);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  const STORAGE_KEY = formType === 'subscription' ? null : 'contact_us_form';\r\n\r\n  useFormPersist(STORAGE_KEY, {\r\n    watch,\r\n    storage: typeof window !== 'undefined' ? window.localStorage : undefined,\r\n    setValue,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {formType === 'subscription' ? (\r\n        <SubscriptionFormSection>\r\n          <SubscriptionFormWrapper>\r\n            <SubscriptionFormImage />\r\n            <SubscriptionFormContent>\r\n              <SubscriptionFormTitle>\r\n                Підписуйся та будь в курсі усіх новинок та знижок!\r\n              </SubscriptionFormTitle>\r\n              <SubForm onSubmit={handleSubmit(onSubmitSubscription)}>\r\n                <SubscriptionFormContainer>\r\n                  <SubscriptionFormInput\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"Email\"\r\n                    {...register('email')}\r\n                    autoComplete=\"true\"\r\n                    onChange={handleChange}\r\n                  ></SubscriptionFormInput>\r\n                  <SubscriptionFormButton type=\"submit\">\r\n                    Надіслати\r\n                  </SubscriptionFormButton>\r\n                </SubscriptionFormContainer>\r\n                {messageContent}\r\n              </SubForm>\r\n            </SubscriptionFormContent>\r\n          </SubscriptionFormWrapper>\r\n        </SubscriptionFormSection>\r\n      ) : formType === 'contact_us' ? (\r\n        <>\r\n          {formStatus === 'success' ? (\r\n            <SuccessMessageWrapper>\r\n              <p>\r\n                Дякуємо, ми переглянемо ваш лист і зв'яжемось з вами найближчим\r\n                часом!\r\n              </p>\r\n            </SuccessMessageWrapper>\r\n          ) : (\r\n            <ContactsForm onSubmit={handleSubmit(onSubmitContactUs)}>\r\n              <FormTitle>Зв’язатись з нами</FormTitle>\r\n              <ContactsFormWrapper>\r\n                <InputField\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  register={register}\r\n                  errors={errors}\r\n                  placeholder={'Імʼя'}\r\n                />\r\n                <InputField\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  register={register}\r\n                  errors={errors}\r\n                  placeholder={'E-mail'}\r\n                />\r\n                <InputField\r\n                  type=\"textarea\"\r\n                  name=\"message\"\r\n                  register={register}\r\n                  errors={errors}\r\n                  placeholder={'Повідомлення'}\r\n                  maxLength={1000}\r\n                  handleInputChange={handleInputChange}\r\n                  isApproachingMax={isApproachingMax}\r\n                  charCount={charCount}\r\n                />\r\n              </ContactsFormWrapper>\r\n              <FormButton\r\n                type=\"submit\"\r\n                disabled={formStatus === 'error' || formStatus === 'success'}\r\n              >\r\n                {formStatus === 'error'\r\n                  ? 'Помилка'\r\n                  : formStatus === 'success'\r\n                  ? 'Відправлено'\r\n                  : 'Відправити'}\r\n              </FormButton>\r\n            </ContactsForm>\r\n          )}\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","export default function getButtonContent(\r\n  isValid,\r\n  errors,\r\n  isSubscribed,\r\n  ErrorMessage,\r\n  SuccessMessage\r\n) {\r\n  if (isSubscribed) {\r\n    return (\r\n      <SuccessMessage>Ви успішно підписалися на сповіщення!</SuccessMessage>\r\n    );\r\n  }\r\n  if (!isValid) {\r\n    return (\r\n      <ErrorMessage>\r\n        Будь ласка, введіть дійсну адресу електронної пошти!\r\n      </ErrorMessage>\r\n    );\r\n  }\r\n\r\n  if (errors['email']) {\r\n    return <ErrorMessage>{errors['email'].message}</ErrorMessage>;\r\n  }\r\n\r\n  return '';\r\n}\r\n","import * as Yup from 'yup';\r\n\r\nexport const emailSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .required('Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .min(6, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .max(63, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .matches(\r\n      /^[a-zA-Z0-9_][a-zA-Z0-9_.-]*@[a-zA-Z0-9.-]+[a-zA-Z0-9-]*\\.[a-zA-Z]{2,4}$/,\r\n      'Будь ласка, введіть дійсну адресу електронної пошти.'\r\n    ),\r\n});\r\n\r\nexport const formSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .trim()\r\n    .required('Поле обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(70, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^(?!.*(\\s-|-\\s)|.*--|.*——|.*––|.*–\\s|.*\\s–|.*—\\s|.*\\s—)[а-яА-Яa-zA-Z\\s'’\\-–—ЇїІіЄєҐґ]*$/,\r\n      'Невірне імʼя'\r\n    ),\r\n  email: Yup.string()\r\n    .required('Поле обовʼязкове до заповнення')\r\n    .min(6, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .max(63, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .matches(\r\n      /^[a-zA-Z0-9_][a-zA-Z0-9_.-]*@[a-zA-Z0-9.-]+[a-zA-Z0-9-]*\\.[a-zA-Z]{2,4}$/,\r\n      'Будь ласка, введіть дійсну адресу електронної пошти.'\r\n    ),\r\n  message: Yup.string()\r\n    .trim()\r\n    .required('Поле обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(1000, 'Перевищена максимальна кількість'),\r\n});\r\n\r\nexport const orderFormSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .trim()\r\n    .required('Поле імʼя обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(70, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^(?!.*(\\s-|-\\s)|.*--|.*——|.*––|.*–\\s|.*\\s–|.*—\\s|.*\\s—)[а-яА-Яa-zA-Z\\s'’\\-–—ЇїІіЄєҐґ]*$/,\r\n      'Невірне імʼя.'\r\n    ),\r\n  secondName: Yup.string()\r\n    .trim()\r\n    .required('Поле імʼя обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(70, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^(?!.*(\\s-|-\\s)|.*--|.*——|.*––|.*–\\s|.*\\s–|.*—\\s|.*\\s—)[а-яА-Яa-zA-Z\\s'’\\-–—ЇїІіЄєҐґ]*$/,\r\n      'Невірне прізвище.'\r\n    ),\r\n  orderEmail: Yup.string()\r\n    .required('Поле пошта обовʼязкове до заповнення')\r\n    .min(6, 'Поле має містити як мінімум 6 символів')\r\n    .max(63, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^[a-zA-Z0-9_][a-zA-Z0-9_.-]*@[a-zA-Z0-9.-]+[a-zA-Z0-9-]*\\.[a-zA-Z]{2,4}$/,\r\n      'Будь ласка, введіть дійсну адресу електронної пошти.'\r\n    ),\r\n  phoneNumber: Yup.string()\r\n    .trim()\r\n    .required('Поле телефону обовʼязкове до заповнення')\r\n    .min(10, 'Поле має містити як мінімум 10 символів')\r\n    .max(17, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^\\+\\d{2}\\(\\d{3}\\)\\d{3}-\\d{2}-\\d{2}$/,\r\n      'Будь ласка, введіть дійсний номер телефону.'\r\n    ),\r\n  city: Yup.string().trim().required('Поле обовʼязкове до заповнення'),\r\n  warehouse: Yup.string().trim().required('Поле обовʼязкове до заповнення'),\r\n  agreement: Yup.boolean().oneOf([true], 'Поле обовʼязкове'),\r\n});\r\n"],"names":["__getOwnPropSymbols","Object","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","src_default","name","_ref","storage","watch","setValue","_ref$exclude","exclude","onDataRestored","_ref$validate","validate","_ref$dirty","dirty","onTimeout","timeout","watchedValues","getStorage","window","sessionStorage","useEffect","str","getItem","_a","JSON","parse","_a$_timestamp","_timestamp","values","source","target","prop","call","indexOf","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","err","e","f","__objRest","dataRestored","currTimestamp","Date","now","removeItem","keys","forEach","key","includes","shouldValidate","shouldDirty","length","entries","filter","_ref2","_slicedToArray","reduce","obj","_ref4","_ref5","val","assign","_defineProperty","setItem","stringify","clear","Input","styled","input","_templateObject","_taggedTemplateLiteral","p","$errors","Textarea","textarea","_templateObject2","ErrorMessage","_templateObject3","Counter","div","_templateObject4","InputField","type","register","errors","placeholder","maxLength","handleInputChange","isApproachingMax","charCount","_jsx","_Fragment","children","_jsxs","style","position","_objectSpread","id","onKeyUp","color","message","autoComplete","ContactsForm","form","ContactsFormWrapper","FormTitle","h3","FormButton","button","SuccessMessageWrapper","_templateObject5","SubscriptionFormSection","_templateObject6","section","_templateObject7","SubscriptionFormWrapper","_templateObject8","SubscriptionFormImage","_templateObject9","SubscriptionFormContent","_templateObject10","SubscriptionFormTitle","_templateObject11","SubForm","_templateObject12","SubscriptionFormInput","_templateObject13","SubscriptionFormButton","_templateObject14","SubscriptionFormContainer","_templateObject15","_templateObject16","SuccessMessage","_templateObject17","Form","formType","_useState","useState","_useState2","formStatus","setFormStatus","_useState3","_useState4","isSubscribed","setIsSubscribed","_useState5","_useState6","isValid","setIsValid","_useState7","_useState8","setCharCount","_useState9","_useState10","setIsApproachingMax","dispatch","useDispatch","storedData","localStorage","messageValue","_useForm","useForm","mode","resolver","yupResolver","emailSchema","formSchema","handleSubmit","formState","reset","messageContent","getButtonContent","onSubmitSubscription","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","wrap","_context","prev","next","subscription","subscriptionId","t0","console","error","stop","_x","apply","arguments","onSubmitContactUs","_ref3","_callee2","formData","_context2","setTimeout","contactUs","_x2","useFormPersist","undefined","onSubmit","onChange","event","disabled","Yup","shape","required","min","max","matches","trim","orderFormSchema","firstName","secondName","orderEmail","phoneNumber","city","warehouse","agreement","oneOf"],"sourceRoot":""}