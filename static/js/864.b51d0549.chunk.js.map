{"version":3,"file":"static/js/864.b51d0549.chunk.js","mappings":"uSAEaA,E,QAAUC,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iC,SCYpBC,EAAkB,WAC7B,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAExBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjBC,GAA+BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAIF,EAAA,GAAEG,EAAcH,EAAA,GACrBI,GAAmBZ,EAAAA,EAAAA,IAAYa,EAAAA,KAA+B,GAE9DC,EADe,IAAIC,gBAAgBX,EAASY,QACjBC,IAAI,KAkBrC,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChB,IACE1B,GAAS2B,EAAAA,EAAAA,IAAwB,CAAEf,YAAAA,EAAaJ,KAAAA,IAClD,CAAE,MAAOoB,GACPC,QAAQC,MAAM,uBAAwBF,EACxC,CACC,wBAAAJ,EAAAO,OAAA,GAAAT,EAAA,KACF,kBAPc,OAAAJ,EAAAc,MAAA,KAAAC,UAAA,KASf,OADAhB,IACO,WACLjB,GAASkC,EAAAA,EAAAA,MACX,CAEF,GAAG,CAAClC,EAAUY,EAAaJ,IAEpBX,GACLsC,EAAAA,EAAAA,KAAC5C,EAAO,CAAA6C,UACND,EAAAA,EAAAA,KAACE,EAAAA,EAAM,OAGTF,EAAAA,EAAAA,KAACG,EAAAA,EAAc,CACbC,KAAK,aACLC,KAAM9B,EACND,eAAgBA,EAChBD,KAAMA,GAIZ,EC5CA,EAR4B,WAC1B,OACE2B,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACvC,EAAe,KAGtB,C","sources":["components/SearchedProduct/SearchedProduct.styled.jsx","components/SearchedProduct/SearchedProduct.jsx","pages/SearchedProductPage/SearchedProductPage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding-top: 300px;\r\n`;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { ProductCatalog } from 'components/ProductCatalog/ProductCatalog';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { selectSearchedProductsPage } from 'redux/products/selectors';\r\nimport { resetSearchedProducts } from 'redux/products/productsSlice';\r\nimport { getSearchedProductsPage } from 'redux/products/operations';\r\nimport { selectIsRefreshing } from 'redux/products/selectors';\r\n\r\nimport { Wrapper } from './SearchedProduct.styled';\r\n\r\nexport const SearchedProduct = () => {\r\n  const isLoading = useSelector(selectIsRefreshing);\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const [page, setCurrentPage] = useState(0);\r\n  const searchedProducts = useSelector(selectSearchedProductsPage) || [];\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const searchQuery = searchParams.get('s');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        dispatch(getSearchedProductsPage({ searchQuery, page }));\r\n      } catch (e) {\r\n        console.error('Error fetching data:', e);\r\n      } finally {\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      dispatch(resetSearchedProducts());\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [dispatch, searchQuery, page]);\r\n\r\n  return isLoading ? (\r\n    <Wrapper>\r\n      <Loader />\r\n    </Wrapper>\r\n  ) : (\r\n    <ProductCatalog\r\n      type=\"searchpage\"\r\n      data={searchedProducts}\r\n      setCurrentPage={setCurrentPage}\r\n      page={page}\r\n      // isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n","import { SearchedProduct } from 'components/SearchedProduct/SearchedProduct';\r\n\r\nconst SearchedProductPage = () => {\r\n  return (\r\n    <div>\r\n      <SearchedProduct />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchedProductPage;\r\n"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","SearchedProduct","isLoading","useSelector","selectIsRefreshing","dispatch","useDispatch","location","useLocation","_useState","useState","_useState2","_slicedToArray","page","setCurrentPage","searchedProducts","selectSearchedProductsPage","searchQuery","URLSearchParams","search","get","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getSearchedProductsPage","e","console","error","stop","apply","arguments","resetSearchedProducts","_jsx","children","Loader","ProductCatalog","type","data"],"sourceRoot":""}