{"version":3,"file":"static/js/864.4ea58375.chunk.js","mappings":"wLAEMA,GAAOC,EAAAA,EAAAA,IAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oGASTC,EAAaC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yMAOrBH,G,SChBFQ,EAAS,WACpB,OAAOC,EAAAA,EAAAA,KAACL,EAAU,GACpB,C,4LCFaM,EAASL,EAAAA,GAAOM,OAAMT,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kP,SCItBS,EAAc,SAAHC,GAAoC,IAA9BC,EAAID,EAAJC,KAAMC,EAAgBF,EAAhBE,iBAC5BC,GAAWC,EAAAA,EAAAA,MAEXC,GAAmBC,EAAAA,EAAAA,cACvB,SAAAC,GACEJ,GACEK,EAAAA,EAAAA,IAAuB,CACrBP,KAAAA,EACAQ,KACY,oBAAVF,EACI,kBACA,mBACNL,iBAAAA,IAGN,GACA,CAACC,EAAUF,EAAMC,IAEnB,OACEN,EAAAA,EAAAA,KAAA,OAAAc,UACEC,EAAAA,EAAAA,MAACd,EAAM,CAACe,GAAG,aAAaC,SAAU,SAAAC,GAAC,OAAIT,EAAiBS,EAAEC,OAAOC,MAAM,EAACN,SAAA,EACtEd,EAAAA,EAAAA,KAAA,UAAQoB,MAAM,kBAAiBN,SAAC,mNAGhCd,EAAAA,EAAAA,KAAA,UAAQoB,MAAM,kBAAiBN,SAAC,sNAMxC,EClCaO,EAAUzB,EAAAA,GAAO0B,QAAO7B,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kHAOxB6B,EAAU3B,EAAAA,GAAOC,IAAGC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8UAgBpB8B,EAAoB5B,EAAAA,GAAO6B,GAAEC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,yHAS7BiC,EAAgB/B,EAAAA,GAAOgC,OAAMC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,uQAgB7BoC,EAAwBlC,EAAAA,GAAOgC,OAAMG,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,uPChCrCsC,EAAmB,SAAH5B,GAAgD,IAA1CC,EAAID,EAAJC,KAAM4B,EAAU7B,EAAV6B,WAAYC,EAAgB9B,EAAhB8B,iBAC7C3B,GAAWC,EAAAA,EAAAA,MACjB2B,GAAgDC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvD7B,EAAgB+B,EAAA,GAAEE,EAAmBF,EAAA,GACtCG,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAAmB,IAClDC,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,KACX,GAAG,CAACrC,KAEJoC,EAAAA,EAAAA,YAAU,WAEe,OAArBrC,QACqBuC,IAArBvC,GACqB,IAArBA,EAEAC,GACEuC,EAAAA,EAAAA,IAA4B,CAAEzC,KAAAA,EAAM4B,WAAY3B,KAEpB,IAArBA,EACTC,GAASwC,EAAAA,EAAAA,IAAsB,CAAE1C,KAAMA,KAExB,OAAf4B,QACeY,IAAfZ,GACe,IAAfA,GAEAM,EAAoBN,GACpB1B,GAASuC,EAAAA,EAAAA,IAA4B,CAAEzC,KAAAA,EAAM4B,WAAAA,OAE7CM,EAAoB,GACpBhC,GAASwC,EAAAA,EAAAA,IAAsB,CAAE1C,KAAAA,KAErC,GAAG,CAACE,EAAUF,EAAM4B,EAAY3B,IAWhC,OACEN,EAAAA,EAAAA,KAACqB,EAAO,CAAAP,UACNC,EAAAA,EAAAA,MAACQ,EAAO,CAAAT,SAAA,EACNC,EAAAA,EAAAA,MAACS,EAAiB,CAAAV,SAAA,CACM,IAArBR,GACCN,EAAAA,EAAAA,KAAC8B,EAAqB,CAAAhB,SAAC,wBAEvBd,EAAAA,EAAAA,KAAC2B,EAAa,CACZqB,QAAS,WACPT,EAAoB,GACpBL,EAAiB,EACnB,EAAEpB,SACH,uBAIF0B,EAAWS,OAAS,GACnBT,EAAWU,KAAI,SAAAC,GAAQ,OACrBnD,EAAAA,EAAAA,KAAA,MAAAc,SACGR,IAAqB6C,EAASnC,IAC7BhB,EAAAA,EAAAA,KAAC8B,EAAqB,CAAAhB,SACnBqC,EAASC,OADgBD,EAASnC,KAIrChB,EAAAA,EAAAA,KAAC2B,EAAa,CACZqB,QAAS,WAlCE,IAAAK,KAmCYF,EAASnC,MAlC1BV,IACpB4B,EAAiB,GACjB3B,GACEuC,EAAAA,EAAAA,IAA4B,CAAEzC,KAAAA,EAAM4B,WAAYoB,MAgClCd,EAAoBY,EAASnC,GAC/B,EAAEF,SAGDqC,EAASC,OAFLD,EAASnC,KAXXmC,EAASnC,GAgBb,QAGXhB,EAAAA,EAAAA,KAACG,EAAW,CAACE,KAAMA,EAAMC,iBAAkBA,QAInD,E,oBClGagD,EAAgB1D,EAAAA,GAAO6B,GAAEhC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0HASzB6D,EAAa3D,EAAAA,GAAOgC,OAAM9B,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2OAc1B8D,EAAS5D,EAAAA,GAAOgC,OAAMF,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,2OActB+D,EAAS7D,EAAAA,GAAO8D,KAAI7B,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,6BCtCpBiE,EAAa,SAAHvD,GAA+C,IAAzCwD,EAASxD,EAATwD,UAAWvD,EAAID,EAAJC,KAAM6B,EAAgB9B,EAAhB8B,iBAC5C,OACElC,EAAAA,EAAAA,KAACsD,EAAa,CAAAxC,SACX+C,MAAMC,KAAK,CAAEb,OAAQW,IAAaV,KAAI,SAACa,EAAGC,GACzC,IACMC,EAAQC,KAAKC,IAAI,EAAG9D,EADZ,GAER+D,EAAMF,KAAKG,IAAIT,EAAY,EAAGvD,EAFtB,GAId,OAAI2D,IAAUC,GAASA,EAAQ,GACtBjE,EAAAA,EAAAA,KAACyD,EAAM,CAAA3C,SAAqB,OAAhB,iBAGjBkD,GAASC,GAASD,GAASI,GAE3BpE,EAAAA,EAAAA,KAAA,MAAAc,SACGT,IAAS2D,GACRhE,EAAAA,EAAAA,KAACwD,EAAM,CAACR,QAAS,kBAAMd,EAAiB8B,EAAM,EAAClD,SAC5CkD,EAAQ,KAGXhE,EAAAA,EAAAA,KAACuD,EAAU,CAACP,QAAS,kBAAMd,EAAiB8B,EAAM,EAAClD,SAChDkD,EAAQ,KAPNA,GAcTA,IAAUI,EAAM,GAAKA,EAAMR,EAAY,GAClC5D,EAAAA,EAAAA,KAACyD,EAAM,CAAA3C,SAAmB,OAAd,eAGjBkD,EAAQJ,EAAY,GAEpB5D,EAAAA,EAAAA,KAAA,MAAAc,SACGT,IAAS2D,GACRhE,EAAAA,EAAAA,KAACwD,EAAM,CAACR,QAAS,kBAAMd,EAAiB8B,EAAM,EAAClD,SAC5CkD,EAAQ,KAGXhE,EAAAA,EAAAA,KAACuD,EAAU,CAACP,QAAS,kBAAMd,EAAiB8B,EAAM,EAAClD,SAChDkD,EAAQ,KAPNA,GAcN,IACT,KAGN,E,oBClDa3C,EAAUzB,EAAAA,GAAO0B,QAAO7B,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kHAQxB4E,EAAa1E,EAAAA,GAAOC,IAAGC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gOAYvB6B,EAAU3B,EAAAA,GAAOC,IAAG6B,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,uQAcpB6E,GAAS3E,EAAAA,EAAAA,IAAO4E,EAAAA,GAAP5E,CAAYiC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,sLAWrB+E,GAAO7E,EAAAA,GAAO6B,GAAEM,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,0JAUhBgF,GAAiB9E,EAAAA,GAAOC,IAAG8E,IAAAA,GAAAjF,EAAAA,EAAAA,GAAA,0HAQ3B8D,GAAS5D,EAAAA,GAAOgC,OAAMgD,IAAAA,GAAAlF,EAAAA,EAAAA,GAAA,2OActBmF,GAAOjF,EAAAA,GAAOkF,IAAGC,IAAAA,GAAArF,EAAAA,EAAAA,GAAA,2CAIjBsF,GAAUpF,EAAAA,GAAOqF,EAACC,IAAAA,GAAAxF,EAAAA,EAAAA,GAAA,qDAKlByF,GAAavF,EAAAA,GAAO8D,KAAI0B,IAAAA,GAAA1F,EAAAA,EAAAA,GAAA,+CCzExB2F,GAA0B,SAAHjF,GAO7B,IANLkF,EAAIlF,EAAJkF,KACAC,EAAInF,EAAJmF,KACAC,EAAcpF,EAAdoF,eACAnF,EAAID,EAAJC,KACAuD,EAASxD,EAATwD,UACA1B,EAAgB9B,EAAhB8B,iBAEMuD,GAAWC,EAAAA,EAAAA,MAEXC,EADe,IAAIC,gBAAgBH,EAASI,QACjBC,IAAI,KAMrC,OAJAnD,EAAAA,EAAAA,YAAU,WACRoD,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,UACtC,GAAG,CAAC7F,IAEmB,IAAhBiF,EAAKrC,QACVlC,EAAAA,EAAAA,MAAAoF,EAAAA,SAAA,CAAArF,SAAA,EACEd,EAAAA,EAAAA,KAACyE,GAAI,CAAA3D,SACFwE,EAAKpC,KAAI,SAAAkD,GAAO,OACfpG,EAAAA,EAAAA,KAAA,MAAAc,UACEd,EAAAA,EAAAA,KAACqG,EAAAA,EAAgB,CAACC,KAAMF,KADjBA,EAAQpF,GAEZ,MAGR4C,EAAY,GACX7C,EAAAA,EAAAA,MAAC2D,GAAc,CAAA5D,SAAA,EACbd,EAAAA,EAAAA,KAAC2D,EAAU,CACTC,UAAWA,EACXvD,KAAMA,EACN6B,iBAAkBA,KAEpBlC,EAAAA,EAAAA,KAACwD,GAAM,CACLR,QAASwC,EACTe,SAAwB,IAAd3C,EAA+B9C,UAEzCd,EAAAA,EAAAA,KAAC6E,GAAI,CAAA/D,UACHd,EAAAA,EAAAA,KAAA,OAAKwG,KAAI,GAAAC,OAAKC,EAAAA,EAAM,6BAK1B1G,EAAAA,EAAAA,KAAAmG,EAAAA,SAAA,OAGO,eAATZ,GACFvF,EAAAA,EAAAA,KAACgF,GAAO,CAAAlE,SAAC,kDAEA,eAATyE,GACgB,IAAhBD,EAAKrC,SACHlC,EAAAA,EAAAA,MAACiE,GAAO,CAAAlE,SAAA,CAAC,4DACIC,EAAAA,EAAAA,MAACoE,GAAU,CAAArE,SAAA,CAAC,IAAE6E,EAAY,OAAc,wGAI3D,EC/DagB,GAAiB,SAAHvG,GAAoC,IAA9BmF,EAAInF,EAAJmF,KAAMD,EAAIlF,EAAJkF,KAAMrD,EAAU7B,EAAV6B,WAC3CE,GAA+BC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnC9B,EAAIgC,EAAA,GAAEuE,EAAcvE,EAAA,GACrBuB,GAAYnB,EAAAA,EAAAA,IAAYoE,EAAAA,KAAqB,EAE7C3E,GAAmBxB,EAAAA,EAAAA,cAAY,SAAAL,GACnCuG,EAAevG,EACjB,GAAG,IAOH,OACEU,EAAAA,EAAAA,MAAAoF,EAAAA,SAAA,CAAArF,SAAA,EACEC,EAAAA,EAAAA,MAACuD,EAAU,CAAAxD,SAAA,EACTd,EAAAA,EAAAA,KAACuE,EAAM,CAACuC,GAAI,IAAIhG,SAAC,gDACjBd,EAAAA,EAAAA,KAAA,QAAAc,SAAM,MACI,eAATyE,GACCvF,EAAAA,EAAAA,KAACuE,EAAM,CAACuC,GAAI,WAAWhG,SAAC,gDAExBd,EAAAA,EAAAA,KAAA,KAAAc,SAAG,sCAGG,eAATyE,IACCvF,EAAAA,EAAAA,KAACgC,EAAgB,CACf3B,KAAMA,EACN4B,WAAYA,EACZC,iBAAkBA,KAGtBlC,EAAAA,EAAAA,KAACqB,EAAO,CAAAP,UACNd,EAAAA,EAAAA,KAACuB,EAAO,CAAAT,UACNd,EAAAA,EAAAA,KAACqF,GAAuB,CACtBC,KAAMA,EACNC,KAAMA,EACNC,eA5Ba,WACjBnF,EAAOuD,EAAY,GACrB1B,EAAiB7B,EAAO,EAE5B,EAyBUA,KAAMA,EACNuD,UAAWA,EACX1B,iBAAkBA,UAM9B,C,uLCnDaX,E,QAAU3B,GAAOC,IAAGJ,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iC,SCYpBqH,EAAkB,WAC7B,IAAMC,GAAYvE,EAAAA,EAAAA,IAAYwE,EAAAA,IAExB1G,GAAWC,EAAAA,EAAAA,MACXiF,GAAWC,EAAAA,EAAAA,MAEXwB,GAAmBzE,EAAAA,EAAAA,IAAY0E,EAAAA,IAE/BxB,EADe,IAAIC,gBAAgBH,EAASI,QACjBC,IAAI,KAkBrC,OAhBAnD,EAAAA,EAAAA,YAAU,WACR,IAAMyE,EAAS,eAAAhH,GAAAiH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChB,IACErH,GAASsH,EAAAA,EAAAA,IAAwBlC,GACnC,CAAE,MAAOzE,GACP4G,QAAQC,MAAM,uBAAwB7G,EACxC,CACC,wBAAAwG,EAAAM,OAAA,GAAAR,EAAA,KACF,kBAPc,OAAApH,EAAA6H,MAAA,KAAAC,UAAA,KASf,OADAd,IACO,WACL7G,GAAS4H,EAAAA,EAAAA,MACX,CAEF,GAAG,CAAC5H,EAAUoF,IAEPqB,GACLhH,EAAAA,EAAAA,KAACuB,EAAO,CAAAT,UACNd,EAAAA,EAAAA,KAACD,EAAAA,EAAM,OAGTC,EAAAA,EAAAA,KAAC2G,EAAAA,EAAc,CACbpB,KAAK,aACLD,KAAM4B,GAIZ,ECzCA,EAR4B,WAC1B,OACElH,EAAAA,EAAAA,KAAA,OAAAc,UACEd,EAAAA,EAAAA,KAAC+G,EAAe,KAGtB,C,sDCRO,IAAMrE,EAAiB,SAAA0F,GAAK,OAAIA,EAAM5F,WAAWA,UAAW,C","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/SortByPrice/SortByPrice.styled.jsx","components/SortByPrice/SortByPrice.jsx","components/FilterByCategory/FilterByCategory.styled.jsx","components/FilterByCategory/FilterByCategory.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/ProductCatalog/ProductCatalog.styled.jsx","components/ProductCatalog/ProductCatalogComponent.jsx","components/ProductCatalog/ProductCatalog.jsx","components/SearchedProduct/SearchedProduct.styled.jsx","components/SearchedProduct/SearchedProduct.jsx","pages/SearchedProductPage/SearchedProductPage.jsx","redux/category/selectors.js"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\r\n\r\nconst spin = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const LoaderSpin = styled.div`\r\n  margin: 0 auto;\r\n  width: 80px;\r\n  height: 80px;\r\n  border: 5px solid #fff;\r\n  border-top: 5px solid #000;\r\n  border-radius: 50%;\r\n  animation: ${spin} 1s infinite linear;\r\n  margin-top: 15px;\r\n`;\r\n","import { LoaderSpin } from './Loader.styled';\r\n\r\nexport const Loader = () => {\r\n  return <LoaderSpin></LoaderSpin>;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Select = styled.select`\r\n  width: 100%;\r\n  background: #ececec;\r\n  border: none;\r\n  padding: 10px 5px 10px 18px;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  @media (min-width: 768px) {\r\n    width: 365px;\r\n    font-size: 16px;\r\n    line-height: 18px;\r\n  }\r\n`;\r\n","import { useDispatch } from 'react-redux';\r\nimport { getProductsSortByPrice } from 'redux/products/operations';\r\n\r\nimport { Select } from './SortByPrice.styled';\r\nimport { useCallback } from 'react';\r\n\r\nexport const SortByPrice = ({ page, selectedCategory }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSortChange = useCallback(\r\n    order => {\r\n      dispatch(\r\n        getProductsSortByPrice({\r\n          page,\r\n          sort:\r\n            order === 'lowestToHighest'\r\n              ? 'price.value,asc'\r\n              : 'price.value,desc',\r\n          selectedCategory,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, page, selectedCategory]\r\n  );\r\n  return (\r\n    <div>\r\n      <Select id=\"sortOption\" onChange={e => handleSortChange(e.target.value)}>\r\n        <option value=\"lowestToHighest\">\r\n          Сортування за ціною: від нижчої до вищої\r\n        </option>\r\n        <option value=\"highestToLowest\">\r\n          Сортування за ціною: від вищої до нижчої\r\n        </option>\r\n      </Select>\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n  width: 100%;\r\n  padding: 13px 0 32px;\r\n  @media (min-width: 768px) {\r\n    padding: 69px 0 40px;\r\n  }\r\n`;\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  gap: 26px;\r\n  padding-left: 28px;\r\n  padding-right: 28px;\r\n  margin: 0 auto;\r\n  @media (min-width: 768px) {\r\n    flex-direction: row;\r\n    gap: 112px;\r\n    justify-content: space-between;\r\n    max-width: 1360px;\r\n    padding-left: 40px;\r\n    padding-right: 40px;\r\n  }\r\n`;\r\nexport const CatalogButtonList = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 16px 14px;\r\n\r\n  @media (min-width: 768px) {\r\n    gap: 14px;\r\n  }\r\n`;\r\nexport const CatalogButton = styled.button`\r\n  padding: 6px 18px;\r\n  background: transparent;\r\n  border: 1px solid #000000;\r\n\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  color: #000000;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 8px 24px;\r\n\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n  }\r\n`;\r\nexport const SelectedCatalogButton = styled.button`\r\n  padding: 7px 18px;\r\n  background: #000000;\r\n  border: none;\r\n\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  color: #ffffff;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 10px 24px;\r\n\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n  }\r\n`;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCategories } from 'redux/category/operations';\r\nimport { selectCategory } from 'redux/category/selectors';\r\nimport {\r\n  getProductsFilterByCategory,\r\n  getProductsPagination,\r\n} from 'redux/products/operations';\r\n\r\nimport { SortByPrice } from 'components/SortByPrice/SortByPrice';\r\nimport {\r\n  CatalogButton,\r\n  CatalogButtonList,\r\n  Section,\r\n  SelectedCatalogButton,\r\n  Wrapper,\r\n} from './FilterByCategory.styled';\r\n\r\nexport const FilterByCategory = ({ page, categoryId, handlePageChange }) => {\r\n  const dispatch = useDispatch();\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const categories = useSelector(selectCategory) || [];\r\n  useEffect(() => {\r\n    dispatch(getCategories());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      selectedCategory !== null &&\r\n      selectedCategory !== undefined &&\r\n      selectedCategory !== 0\r\n    ) {\r\n      dispatch(\r\n        getProductsFilterByCategory({ page, categoryId: selectedCategory })\r\n      );\r\n    } else if (selectedCategory === 0) {\r\n      dispatch(getProductsPagination({ page: page }));\r\n    } else if (\r\n      categoryId !== null &&\r\n      categoryId !== undefined &&\r\n      categoryId !== 0\r\n    ) {\r\n      setSelectedCategory(categoryId);\r\n      dispatch(getProductsFilterByCategory({ page, categoryId }));\r\n    } else {\r\n      setSelectedCategory(0);\r\n      dispatch(getProductsPagination({ page }));\r\n    }\r\n  }, [dispatch, page, categoryId, selectedCategory]);\r\n\r\n  const handleCategoryChange = newCategoryId => {\r\n    if (newCategoryId !== selectedCategory) {\r\n      handlePageChange(0);\r\n      dispatch(\r\n        getProductsFilterByCategory({ page, categoryId: newCategoryId })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      <Wrapper>\r\n        <CatalogButtonList>\r\n          {selectedCategory === 0 ? (\r\n            <SelectedCatalogButton>Всі</SelectedCatalogButton>\r\n          ) : (\r\n            <CatalogButton\r\n              onClick={() => {\r\n                setSelectedCategory(0);\r\n                handlePageChange(0);\r\n              }}\r\n            >\r\n              Всі\r\n            </CatalogButton>\r\n          )}\r\n          {categories.length > 0 &&\r\n            categories.map(category => (\r\n              <li key={category.id}>\r\n                {selectedCategory === category.id ? (\r\n                  <SelectedCatalogButton key={category.id}>\r\n                    {category.title}\r\n                  </SelectedCatalogButton>\r\n                ) : (\r\n                  <CatalogButton\r\n                    onClick={() => {\r\n                      handleCategoryChange(category.id);\r\n                      setSelectedCategory(category.id);\r\n                    }}\r\n                    key={category.id}\r\n                  >\r\n                    {category.title}\r\n                  </CatalogButton>\r\n                )}\r\n              </li>\r\n            ))}\r\n        </CatalogButtonList>\r\n        <SortByPrice page={page} selectedCategory={selectedCategory} />\r\n      </Wrapper>\r\n    </Section>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ListOfButtons = styled.ul`\r\n  display: flex;\r\n  gap: 24px;\r\n  justify-content: center;\r\n  @media (min-width: 768px) {\r\n    gap: 34px;\r\n  }\r\n`;\r\n\r\nexport const ButtonGray = styled.button`\r\n  font-family: Gill Sans;\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  color: #939393;\r\n\r\n  border: none;\r\n  background-color: transparent;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  font-family: Gill Sans;\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  color: #4c4b4b;\r\n\r\n  border: none;\r\n  background-color: transparent;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n  }\r\n`;\r\nexport const Ellips = styled.span`\r\n  color: #b4b4b4;\r\n`;\r\n","import { ListOfButtons, ButtonGray, Button, Ellips } from './Pagination.styled';\r\nexport const Pagination = ({ totalPage, page, handlePageChange }) => {\r\n  return (\r\n    <ListOfButtons>\r\n      {Array.from({ length: totalPage }).map((_, index) => {\r\n        const range = 4;\r\n        const start = Math.max(0, page - range);\r\n        const end = Math.min(totalPage - 1, page + range);\r\n\r\n        if (index === start && start > 0) {\r\n          return <Ellips key=\"startEllipsis\">...</Ellips>;\r\n        }\r\n\r\n        if (index >= start && index <= end) {\r\n          return (\r\n            <li key={index}>\r\n              {page === index ? (\r\n                <Button onClick={() => handlePageChange(index)}>\r\n                  {index + 1}\r\n                </Button>\r\n              ) : (\r\n                <ButtonGray onClick={() => handlePageChange(index)}>\r\n                  {index + 1}\r\n                </ButtonGray>\r\n              )}\r\n            </li>\r\n          );\r\n        }\r\n\r\n        if (index === end + 1 && end < totalPage - 4) {\r\n          return <Ellips key=\"endEllipsis\">...</Ellips>;\r\n        }\r\n\r\n        if (index > totalPage - 4) {\r\n          return (\r\n            <li key={index}>\r\n              {page === index ? (\r\n                <Button onClick={() => handlePageChange(index)}>\r\n                  {index + 1}\r\n                </Button>\r\n              ) : (\r\n                <ButtonGray onClick={() => handlePageChange(index)}>\r\n                  {index + 1}\r\n                </ButtonGray>\r\n              )}\r\n            </li>\r\n          );\r\n        }\r\n\r\n        return null;\r\n      })}\r\n    </ListOfButtons>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Section = styled.section`\r\n  width: 100%;\r\n  padding: 32px 0 65px;\r\n  @media (min-width: 768px) {\r\n    padding: 40px 0 81px;\r\n  }\r\n`;\r\n\r\nexport const NavWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  gap: 31px;\r\n  padding: 105px 28px 28px;\r\n  margin: 0;\r\n  @media (min-width: 768px) {\r\n    max-width: 1360px;\r\n    padding: 155px 40px 69px;\r\n  }\r\n`;\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 78px;\r\n  padding-left: 28px;\r\n  padding-right: 28px;\r\n  margin: 0 auto;\r\n  @media (min-width: 768px) {\r\n    gap: 112px;\r\n    max-width: 1360px;\r\n    padding-left: 40px;\r\n    padding-right: 40px;\r\n  }\r\n`;\r\nexport const LinkTo = styled(Link)`\r\n  font-family: Gill Sans;\r\n  font-size: 18px;\r\n  line-height: 21px;\r\n  color: #000000;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 22px;\r\n    line-height: 25px;\r\n  }\r\n`;\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 26px 15px;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 768px) {\r\n    gap: 58px 24px;\r\n  }\r\n`;\r\nexport const ButtonsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 18px;\r\n  @media (min-width: 768px) {\r\n    gap: 24px;\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  font-family: Gill Sans;\r\n  font-size: 14px;\r\n  line-height: 16px;\r\n  color: #4c4b4b;\r\n\r\n  border: none;\r\n  background-color: transparent;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n  }\r\n`;\r\nexport const Icon = styled.svg`\r\n  width: 11px;\r\n  height: 10px;\r\n`;\r\nexport const Message = styled.p`\r\n  text-align: center;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const SearchWord = styled.span`\r\n  color: grey;\r\n  font-weight: 600;\r\n`;\r\n","import { useLocation } from 'react-router-dom';\r\n\r\nimport { ProductComponent } from 'components/ProductComponent/ProductComponent';\r\nimport { Pagination } from 'components/Pagination/Pagination';\r\nimport Sprite from '../../images/sprite.svg';\r\n\r\nimport {\r\n  List,\r\n  Button,\r\n  ButtonsWrapper,\r\n  Icon,\r\n  Message,\r\n  SearchWord,\r\n} from './ProductCatalog.styled';\r\nimport { useEffect } from 'react';\r\n\r\nexport const ProductCatalogComponent = ({\r\n  data,\r\n  type,\r\n  handleNextPage,\r\n  page,\r\n  totalPage,\r\n  handlePageChange,\r\n}) => {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const searchQuery = searchParams.get('s');\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }, [page]);\r\n\r\n  return data.length !== 0 ? (\r\n    <>\r\n      <List>\r\n        {data.map(product => (\r\n          <li key={product.id}>\r\n            <ProductComponent item={product} />\r\n          </li>\r\n        ))}\r\n      </List>\r\n      {totalPage > 1 ? (\r\n        <ButtonsWrapper>\r\n          <Pagination\r\n            totalPage={totalPage}\r\n            page={page}\r\n            handlePageChange={handlePageChange}\r\n          />\r\n          <Button\r\n            onClick={handleNextPage}\r\n            disabled={totalPage === 1 ? true : false}\r\n          >\r\n            <Icon>\r\n              <use href={`${Sprite}#icon-next-page`}></use>\r\n            </Icon>\r\n          </Button>\r\n        </ButtonsWrapper>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  ) : type !== 'searchpage' ? (\r\n    <Message>Sorry, but this category is not available yet</Message>\r\n  ) : (\r\n    type === 'searchpage' &&\r\n    data.length === 0 && (\r\n      <Message>\r\n        За запитом <SearchWord>\"{searchQuery}\"</SearchWord> нічого не знайдено\r\n      </Message>\r\n    )\r\n  );\r\n};\r\n","import { useCallback, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectTotalPages } from 'redux/products/selectors';\r\nimport { FilterByCategory } from 'components/FilterByCategory/FilterByCategory';\r\nimport { ProductCatalogComponent } from './ProductCatalogComponent';\r\n\r\nimport { LinkTo, Wrapper, Section, NavWrapper } from './ProductCatalog.styled';\r\n\r\nexport const ProductCatalog = ({ type, data, categoryId }) => {\r\n  const [page, setCurrentPage] = useState(0);\r\n  const totalPage = useSelector(selectTotalPages) || 1;\r\n\r\n  const handlePageChange = useCallback(page => {\r\n    setCurrentPage(page);\r\n  }, []);\r\n\r\n  const handleNextPage = () => {\r\n    if (page < totalPage - 1) {\r\n      handlePageChange(page + 1);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <NavWrapper>\r\n        <LinkTo to={'/'}>Головна</LinkTo>\r\n        <span>|</span>\r\n        {type !== 'searchpage' ? (\r\n          <LinkTo to={'/catalog'}>Каталог</LinkTo>\r\n        ) : (\r\n          <p>Пошук</p>\r\n        )}\r\n      </NavWrapper>\r\n      {type !== 'searchpage' && (\r\n        <FilterByCategory\r\n          page={page}\r\n          categoryId={categoryId}\r\n          handlePageChange={handlePageChange}\r\n        />\r\n      )}\r\n      <Section>\r\n        <Wrapper>\r\n          <ProductCatalogComponent\r\n            data={data}\r\n            type={type}\r\n            handleNextPage={handleNextPage}\r\n            page={page}\r\n            totalPage={totalPage}\r\n            handlePageChange={handlePageChange}\r\n          />\r\n        </Wrapper>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding-top: 300px;\r\n`;\r\n","import { useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { ProductCatalog } from 'components/ProductCatalog/ProductCatalog';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { selectSearchedProductsPage } from 'redux/products/selectors';\r\nimport { resetSearchedProducts } from 'redux/products/productsSlice';\r\nimport { getSearchedProductsPage } from 'redux/products/operations';\r\nimport { selectIsRefreshing } from 'redux/products/selectors';\r\n\r\nimport { Wrapper } from './SearchedProduct.styled';\r\n\r\nexport const SearchedProduct = () => {\r\n  const isLoading = useSelector(selectIsRefreshing);\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const searchedProducts = useSelector(selectSearchedProductsPage);\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const searchQuery = searchParams.get('s');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        dispatch(getSearchedProductsPage(searchQuery));\r\n      } catch (e) {\r\n        console.error('Error fetching data:', e);\r\n      } finally {\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      dispatch(resetSearchedProducts());\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [dispatch, searchQuery]);\r\n\r\n  return isLoading ? (\r\n    <Wrapper>\r\n      <Loader />\r\n    </Wrapper>\r\n  ) : (\r\n    <ProductCatalog\r\n      type=\"searchpage\"\r\n      data={searchedProducts}\r\n      // isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n","import { SearchedProduct } from 'components/SearchedProduct/SearchedProduct';\r\n\r\nconst SearchedProductPage = () => {\r\n  return (\r\n    <div>\r\n      <SearchedProduct />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchedProductPage;\r\n","export const selectCategory = state => state.categories.categories;\r\n"],"names":["spin","keyframes","_templateObject","_taggedTemplateLiteral","LoaderSpin","styled","div","_templateObject2","Loader","_jsx","Select","select","SortByPrice","_ref","page","selectedCategory","dispatch","useDispatch","handleSortChange","useCallback","order","getProductsSortByPrice","sort","children","_jsxs","id","onChange","e","target","value","Section","section","Wrapper","CatalogButtonList","ul","_templateObject3","CatalogButton","button","_templateObject4","SelectedCatalogButton","_templateObject5","FilterByCategory","categoryId","handlePageChange","_useState","useState","_useState2","_slicedToArray","setSelectedCategory","categories","useSelector","selectCategory","useEffect","getCategories","undefined","getProductsFilterByCategory","getProductsPagination","onClick","length","map","category","title","newCategoryId","ListOfButtons","ButtonGray","Button","Ellips","span","Pagination","totalPage","Array","from","_","index","start","Math","max","end","min","NavWrapper","LinkTo","Link","List","ButtonsWrapper","_templateObject6","_templateObject7","Icon","svg","_templateObject8","Message","p","_templateObject9","SearchWord","_templateObject10","ProductCatalogComponent","data","type","handleNextPage","location","useLocation","searchQuery","URLSearchParams","search","get","window","scrollTo","top","behavior","_Fragment","product","ProductComponent","item","disabled","href","concat","Sprite","ProductCatalog","setCurrentPage","selectTotalPages","to","SearchedProduct","isLoading","selectIsRefreshing","searchedProducts","selectSearchedProductsPage","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getSearchedProductsPage","console","error","stop","apply","arguments","resetSearchedProducts","state"],"sourceRoot":""}