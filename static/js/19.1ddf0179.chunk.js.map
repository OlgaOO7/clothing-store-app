{"version":3,"file":"static/js/19.1ddf0179.chunk.js","mappings":"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","sources":["redux/order/selectors.js","components/OrderItem/OrderItem.styled.jsx","components/OrderItem/OrderItem.jsx","components/Delivery/Delivery.styled.jsx","components/OrderForm/OrderForm.styled.jsx","components/Delivery/Delivery.jsx","components/OrderInput/OrderInput.styled.jsx","components/OrderInput/OrderInput.jsx","components/OrderPaymentForm/OrderPaymentForm.styled.jsx","components/OrderPaymentForm/OrderPaymentForm.jsx","components/OrderCustomerForm/OrderCustomerForm.styled.jsx","components/OrderCustomerForm/OrderCustomerForm.jsx","components/OrderForm/OrderForm.jsx","components/Order/Order.styled.jsx","components/Order/Order.jsx","pages/OrderPage/OrderPage.jsx","utils/yupSchema.js"],"sourcesContent":["export const selectOrderSuccess = state => state.order?.orderSuccessful;\r\nexport const selectOrder = state => state.order?.order;\r\nexport const selectOrderItems = state => state.order.order?.items;\r\nexport const selectIsRefreshing = state => state.order?.isRefreshing;\r\n","import styled from 'styled-components';\r\n\r\nexport const ItemWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  gap: 15px;\r\n  &:not(:last-child) {\r\n    padding-bottom: 18px;\r\n    border-bottom: 1px solid #e1e1e1;\r\n  }\r\n  @media (min-width: 768px) {\r\n    padding: 0;\r\n    &:not(:last-child) {\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nexport const OrderImage = styled.img`\r\n  width: 44px;\r\n  max-height: 50px;\r\n  margin-right: 10px;\r\n  @media (min-width: 768px) {\r\n    width: 161px;\r\n    max-height: 208px;\r\n    margin-right: 42px;\r\n  }\r\n`;\r\nexport const OrderContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (min-width: 768px) {\r\n    gap: 6px;\r\n    flex-direction: column;\r\n  }\r\n`;\r\nexport const OrderTitle = styled.h3`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  line-height: 20px;\r\n  @media (min-width: 768px) {\r\n    margin-bottom: 6px;\r\n    font-size: 26px;\r\n    line-height: 36px;\r\n  }\r\n`;\r\nexport const OrderDescription = styled.div`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 23px;\r\n  }\r\n`;\r\nexport const OrderText = styled.p`\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 25px;\r\n    color: #4c4b4b;\r\n  }\r\n`;\r\nexport const OrderPrice = styled.p`\r\nz\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 23px;\r\n  }\r\n`;\r\nexport const OrderError = styled.div`\r\n  background: #f4efeb;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nexport const OrderErrorText = styled.p`\r\n  font-size: 12px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  color: #000000;\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 25px;\r\n  }\r\n`;\r\n","import { useEffect } from 'react';\r\n\r\nimport { formatPrice } from 'utils/formatPrice';\r\n\r\nimport noImage from '../../images/no-image.jpg';\r\n\r\nimport {\r\n  ItemWrapper,\r\n  Container,\r\n  OrderContentWrapper,\r\n  OrderDescription,\r\n  OrderImage,\r\n  OrderPrice,\r\n  OrderText,\r\n  OrderTitle,\r\n  OrderError,\r\n  OrderErrorText,\r\n} from './OrderItem.styled';\r\n\r\nexport const OrderItem = ({ item, setOrderSuccess, availableQuantity }) => {\r\n  const { photoUrl, productTitle, sku, amount, currencyCode, quantity } = item;\r\n  const color = sku.characteristics[1].name;\r\n  const size = sku.characteristics[0].name;\r\n\r\n  useEffect(() => {\r\n    if (quantity > availableQuantity) {\r\n      setOrderSuccess(false);\r\n    } else {\r\n      setOrderSuccess(true);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ItemWrapper>\r\n        {quantity > availableQuantity && (\r\n          <OrderError>\r\n            <OrderErrorText>\r\n              Вибачте, цей товар тимчасово недоступний або його кількість\r\n              перевищує наявність.\r\n            </OrderErrorText>\r\n          </OrderError>\r\n        )}\r\n        <Container>\r\n          <OrderImage src={`${photoUrl ? photoUrl : noImage}`}></OrderImage>\r\n          <OrderContentWrapper>\r\n            <OrderTitle>{productTitle.slice(0, 10)}...</OrderTitle>\r\n            <OrderText>{color}</OrderText>\r\n            <OrderText>{size}</OrderText>\r\n          </OrderContentWrapper>\r\n        </Container>\r\n        <OrderDescription>x {quantity}</OrderDescription>\r\n        <OrderPrice>\r\n          {formatPrice(amount)} {currencyCode}\r\n        </OrderPrice>\r\n      </ItemWrapper>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const WrapTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 14px;\r\n  margin-bottom: 24px;\r\n  @media (min-width: 768px) {\r\n    gap: 24px;\r\n    margin-bottom: 26px;\r\n  }\r\n`;\r\n\r\nexport const WrapRadio = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-bottom: 16px;\r\n  @media (min-width: 768px) {\r\n    margin-bottom: 26px;\r\n  }\r\n`;\r\n\r\nexport const ElipsRadio = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  background: #160b03;\r\n  border-radius: 4px;\r\n  border: none;\r\n  @media (min-width: 768px) {\r\n    background: #3f3831;\r\n  }\r\n`;\r\nexport const NameRadio = styled.p`\r\n  color: #000;\r\n  text-align: center;\r\n  font-family: 'Mulish', sans-serif;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 140%;\r\n`;\r\n\r\nexport const WrapForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  max-width: 408px;\r\n  @media (min-width: 768px) {\r\n    gap: 16px;\r\n  }\r\n`;\r\n\r\nexport const WrapInput = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const LabelStyle = styled.label`\r\n  color: #000;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  margin-bottom: 6px;\r\n  @media (min-width: 768px) {\r\n    color: #160b03;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\n\r\nexport const InputStyle = styled.input`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 10px 16px;\r\n  border: 1px solid ${p => (p.$error ? '#F24040' : '#000')};\r\n  color: #000;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border: 2px solid #7c7d80;\r\n  }\r\n  &::placeholder {\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    color: ${p => (p.$error ? '#F24040' : '#9D9A97')};\r\n  }\r\n  @media (min-width: 768px) {\r\n    color: #160b03;\r\n    border: 1px solid ${p => (p.$error ? '#F24040' : '#160b03')};\r\n    max-width: 408px;\r\n    padding: 12px 16px;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const WrapList = styled.div`\r\n  position: absolute;\r\n  top: 79px;\r\n  background: #fff;\r\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 7px 10px 3px;\r\n  z-index: 1;\r\n  width: 100%;\r\n  @media (min-width: 768px) {\r\n    top: 89px;\r\n    max-width: 408px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  max-height: 336px;\r\n\r\n  border: 1px solid #000;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  font-family: 'Mulish', sans-serif;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 140%;\r\n  border-bottom: 1px solid #160b03;\r\n\r\n  width: 100%;\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: normal;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-family: 'Mulish', sans-serif;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 140%;\r\n  cursor: pointer;\r\n  padding: 10px 16px;\r\n  &:hover {\r\n    background: #3f3831;\r\n    color: #fff;\r\n  }\r\n  @media (min-width: 768px) {\r\n  }\r\n`;\r\nexport const Message = styled.p`\r\n  padding: 10px 16px;\r\n  color: ${p => (p.$error ? '#F24040' : 'black')};\r\n`;\r\n\r\nexport const Icon = styled.svg`\r\n  display: none;\r\n  @media (min-width: 768px) {\r\n    position: absolute;\r\n    right: 24px;\r\n    top: 21px;\r\n    display: inline-block;\r\n    fill: transparent;\r\n    stroke-width: 1px;\r\n    stroke: #160b03;\r\n    flex-shrink: 0;\r\n    width: 12px;\r\n    height: 6px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const OrderFormSection = styled.section`\r\n  width: 100%;\r\n  padding: 52px 0 63px;\r\n  @media (min-width: 768px) {\r\n    padding: 64px 0 142px;\r\n  }\r\n`;\r\nexport const Wrapper = styled.div`\r\n  padding-left: 28px;\r\n  padding-right: 28px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (min-width: 768px) {\r\n    max-width: 1360px;\r\n    padding-left: 40px;\r\n    padding-right: 40px;\r\n  }\r\n`;\r\nexport const Title = styled.h3`\r\n  color: #000;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  line-height: 18px;\r\n  text-transform: uppercase;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: 21px;\r\n  }\r\n`;\r\nexport const ElipsTitle = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 26px;\r\n  height: 26px;\r\n  background: #f4efeb;\r\n  border-radius: 13px;\r\n  border: none;\r\n  color: #000;\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 18px;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 16px;\r\n    font-size: 18px;\r\n    line-height: 23px;\r\n  }\r\n`;\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 32px;\r\n  @media (min-width: 768px) {\r\n    gap: 34px;\r\n  }\r\n`;\r\nexport const OrderBtn = styled.button`\r\n  font-size: 16px;\r\n  line-height: 21px;\r\n  padding: 7px 16px;\r\n  transition: all 0.5s ease-out;\r\n  background: #160b03;\r\n  color: #ffffff;\r\n  border: none;\r\n  border-radius: 1px;\r\n  &:hover,\r\n  &:focus {\r\n    background: #3f3831;\r\n  }\r\n  @media (min-width: 768px) {\r\n    max-width: 271px;\r\n    padding: 9px 46px;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const SuccessMessage = styled.div`\r\n  width: 100%;\r\n  max-width: 628px;\r\n  padding: 11.5px 0;\r\n  background: #000000;\r\n  font-size: 16px;\r\n  line-height: 21px;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  margin-bottom: 42px;\r\n  @media (min-width: 768px) {\r\n    padding: 18px 0;\r\n    font-size: 22px;\r\n    line-height: 29px;\r\n    margin-bottom: 26px;\r\n  }\r\n`;\r\nexport const SuccessIcon = styled.svg`\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-bottom: 16px;\r\n  @media (min-width: 768px) {\r\n    width: 48px;\r\n    height: 48px;\r\n    margin-bottom: 22px;\r\n  }\r\n`;\r\nexport const SuccessText = styled.p`\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  text-align: center;\r\n  &:first-of-type {\r\n    margin-bottom: 16px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    font-size: 24px;\r\n    line-height: 31px;\r\n    &:first-of-type {\r\n      margin-bottom: 0px;\r\n    }\r\n  }\r\n`;\r\nexport const OrderSuccessSection = styled.section`\r\n  width: 100%;\r\n  padding: 28px 0 80px;\r\n  @media (min-width: 768px) {\r\n    padding: 60px 0 142px;\r\n  }\r\n`;\r\nexport const OrderSuccessContainer = styled.div`\r\n  padding-left: 28px;\r\n  padding-right: 28px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (min-width: 768px) {\r\n    max-width: 1360px;\r\n    padding-left: 40px;\r\n    padding-right: 40px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { throttle } from 'lodash';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\n\r\nimport Sprite from '../../images/sprite.svg';\r\n\r\nimport {\r\n  ElipsRadio,\r\n  InputStyle,\r\n  Item,\r\n  LabelStyle,\r\n  List,\r\n  Message,\r\n  NameRadio,\r\n  WrapForm,\r\n  WrapInput,\r\n  WrapList,\r\n  WrapRadio,\r\n  WrapTitle,\r\n  Text,\r\n  Icon,\r\n} from './Delivery.styled';\r\nimport { Title, ElipsTitle } from 'components/OrderForm/OrderForm.styled';\r\n\r\nconst APIKEY = '4cfd344a4e40e9fab712995825eeaef4';\r\n\r\nexport const Delivery = ({ register, setValue, errors, formStatus }) => {\r\n  const [searchCityName, setSearchCityName] = useState('');\r\n  const [searchCities, setSearchCities] = useState([]);\r\n  const [dropdownCityVisible, setDropdownCityVisible] = useState(false);\r\n  const [dropdownWarehouseVisible, setDropdownWarehouseVisible] =\r\n    useState(false);\r\n\r\n  const [searchWarehouses, setSearchWarehouses] = useState('');\r\n  const [warehouseSearchType, setWarehouseSearchType] = useState(false);\r\n  const [warehouses, setWarehouses] = useState([]);\r\n  const [massegeCity, setMassegeCity] = useState({\r\n    messege: 'Loading...',\r\n    error: false,\r\n  });\r\n  const [massegeWarehous, setMassegeWarehous] = useState({\r\n    messege: 'Loading...',\r\n    error: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (formStatus === 'success') {\r\n      setSearchCityName('');\r\n      setSearchWarehouses('');\r\n    }\r\n  }, [formStatus]);\r\n\r\n  const handleСityName = async () => {\r\n    try {\r\n      const requestData = {\r\n        apiKey: APIKEY,\r\n        modelName: 'Address',\r\n        calledMethod: 'searchSettlements',\r\n        methodProperties: {\r\n          Page: '1',\r\n          CityName: searchCityName,\r\n          Limit: '120',\r\n        },\r\n      };\r\n\r\n      const response = await fetch('https://api.novaposhta.ua/v2.0/json/', {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json, text/plain, */*',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        const addresses = data.data[0].Addresses;\r\n\r\n        setSearchCities(addresses);\r\n      } else {\r\n        setSearchCities([]);\r\n        throw new Error(data.errors[0]);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMassegeCity({\r\n        messege: 'Місто не знайдено! Перевірте правильність написання',\r\n        error: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchCityName.length === 0) {\r\n      setWarehouseSearchType('');\r\n      setWarehouses([]);\r\n      setSearchWarehouses('');\r\n      setMassegeWarehous({\r\n        messege: 'Виберіть місто для перегляду відділень',\r\n        error: true,\r\n      });\r\n      setMassegeCity({\r\n        messege: 'Місто не знайдено! Перевірте правильність написання',\r\n        error: true,\r\n      });\r\n    } else {\r\n      handleСityName();\r\n      setMassegeWarehous({\r\n        messege: 'Loading...',\r\n        error: false,\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchCityName]);\r\n\r\n  const handleSearchTextChange = throttle(e => {\r\n    const value = e.target.value;\r\n    setSearchCityName(value.trim());\r\n\r\n    if (value.length > 0) {\r\n      setDropdownCityVisible(true);\r\n    } else {\r\n      setDropdownCityVisible(false);\r\n    }\r\n  }, 300);\r\n\r\n  const handleWarehousesChange = async () => {\r\n    try {\r\n      const requestData = {\r\n        apiKey: APIKEY,\r\n        modelName: 'Address',\r\n        calledMethod: 'getWarehouses',\r\n        methodProperties: {\r\n          CityRef: warehouseSearchType,\r\n          Limit: '500',\r\n          TypeOfWarehouseRef: '841339c7-591a-42e2-8233-7a0a00f0ed6f',\r\n        },\r\n      };\r\n\r\n      if (searchWarehouses) {\r\n        requestData.methodProperties.WarehouseRef = searchWarehouses;\r\n      }\r\n\r\n      const response = await fetch(\r\n        'https://api.novaposhta.ua/v2.0/json/Address',\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            Accept: 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(requestData),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setWarehouses(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        'Помилка запиту до API Нової Пошти для населених пунктів',\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleCitySelect = (city, deliveryCity) => {\r\n    setDropdownCityVisible(false);\r\n    setSearchWarehouses('');\r\n    setSearchCityName(`${city}`);\r\n    setWarehouseSearchType(deliveryCity);\r\n    setValue('city', city);\r\n\r\n    if (deliveryCity && city) {\r\n      handleWarehousesChange();\r\n    }\r\n  };\r\n\r\n  const handleSearchTextChangeWarehose = throttle(e => {\r\n    const value = e.target.value;\r\n    setSearchWarehouses(value);\r\n    setDropdownWarehouseVisible(true);\r\n\r\n    if (searchCityName.length === 0 || value.length === 0) {\r\n      setDropdownWarehouseVisible(false);\r\n      setWarehouses([]);\r\n      setMassegeWarehous({\r\n        messege: 'Виберіть місто для перегляду відділень',\r\n        error: true,\r\n      });\r\n    }\r\n  }, 300);\r\n\r\n  const handleWarehouseSelect = warehouse => {\r\n    setSearchWarehouses(`${warehouse}`);\r\n    setDropdownWarehouseVisible(false);\r\n    setValue('warehouse', warehouse);\r\n  };\r\n  useEffect(() => {\r\n    if (warehouseSearchType) {\r\n      // handleСityName();\r\n      handleWarehousesChange();\r\n    } else if (searchCities.length === 0) {\r\n      setTimeout(() => {\r\n        setMassegeWarehous({\r\n          messege: 'Виберіть назву міста!',\r\n          error: true,\r\n        });\r\n      }, 2000);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchWarehouses, searchCities.length]);\r\n\r\n  // const handleFormSubmit = async e => {\r\n  //   e.preventDefault();\r\n\r\n  //   setIsSubmitting(true);\r\n  //   if (!searchCityName || !searchWarehouses) {\r\n  //     setPlaceholder(true);\r\n\r\n  //     setIsSubmitting(false);\r\n  //     return;\r\n  //   } else if (searchWarehouses !== nameWarehous) {\r\n  //     setPlaceholder(true);\r\n  //     setSearchWarehouses('');\r\n  //     setIsSubmitting(false);\r\n  //     return;\r\n  //   }\r\n  //   const dataToSendWarehouse = `${searchCityName}, ${searchWarehouses}`;\r\n  //   console.log(dataToSendWarehouse);\r\n\r\n  //   // setIsSubmitting(false);\r\n  // };\r\n  return (\r\n    <>\r\n      <WrapTitle>\r\n        <ElipsTitle>2</ElipsTitle>\r\n        <Title>Інформація про доставку</Title>\r\n      </WrapTitle>\r\n      <WrapRadio>\r\n        <ElipsRadio />\r\n        <NameRadio>Доставка Новою поштою</NameRadio>\r\n      </WrapRadio>\r\n      <div>\r\n        <WrapForm>\r\n          <WrapInput>\r\n            <LabelStyle htmlFor=\"city\">Оберіть місто доставки *</LabelStyle>\r\n            <div style={{ position: 'relative' }}>\r\n              <InputStyle\r\n                type=\"text\"\r\n                id=\"city\"\r\n                name=\"city\"\r\n                {...register('city')}\r\n                autoComplete=\"off\"\r\n                placeholder=\"Оберіть місто доставки\"\r\n                $error={errors['city']}\r\n                value={searchCityName}\r\n                onChange={handleSearchTextChange}\r\n                onClick={() => {\r\n                  !searchCityName === '' && setDropdownCityVisible(true);\r\n                }}\r\n                onBlur={() => {\r\n                  setTimeout(() => {\r\n                    setDropdownCityVisible(false);\r\n                  }, 200);\r\n                }}\r\n              />\r\n              {dropdownCityVisible ? (\r\n                <Icon>\r\n                  <use href={`${Sprite}#icon-vector-14`} />\r\n                </Icon>\r\n              ) : (\r\n                <Icon>\r\n                  <use href={`${Sprite}#icon-vector-13`} />\r\n                </Icon>\r\n              )}\r\n            </div>\r\n            {dropdownCityVisible && (\r\n              <WrapList>\r\n                <List $error={massegeCity.error}>\r\n                  {searchCities.length === 0 ? (\r\n                    <Item>\r\n                      <Message $error={massegeCity.error}>\r\n                        {massegeCity.messege}\r\n                      </Message>\r\n                    </Item>\r\n                  ) : (\r\n                    searchCities.map(searchCity => (\r\n                      <Item\r\n                        key={nanoid()}\r\n                        onClick={() => {\r\n                          handleCitySelect(\r\n                            searchCity.Present,\r\n                            searchCity.DeliveryCity\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text>{searchCity.Present},</Text>\r\n                      </Item>\r\n                    ))\r\n                  )}\r\n                </List>\r\n              </WrapList>\r\n            )}\r\n          </WrapInput>\r\n          <WrapInput>\r\n            <LabelStyle htmlFor=\"warehouse\">Оберіть відділення *</LabelStyle>\r\n            <div style={{ position: 'relative' }}>\r\n              <InputStyle\r\n                type=\"text\"\r\n                id=\"warehouse\"\r\n                name=\"warehouse\"\r\n                {...register('warehouse')}\r\n                value={searchWarehouses}\r\n                autoComplete=\"off\"\r\n                placeholder=\"Оберіть відділення\"\r\n                $error={errors['warehouse']}\r\n                onChange={handleSearchTextChangeWarehose}\r\n                onClick={() => {\r\n                  setDropdownWarehouseVisible(true);\r\n                }}\r\n                onBlur={() => {\r\n                  setTimeout(() => {\r\n                    setDropdownWarehouseVisible(false);\r\n                  }, 200);\r\n                }}\r\n              />\r\n              {dropdownWarehouseVisible ? (\r\n                <Icon>\r\n                  <use href={`${Sprite}#icon-vector-14`} />\r\n                </Icon>\r\n              ) : (\r\n                <Icon>\r\n                  <use href={`${Sprite}#icon-vector-13`} />\r\n                </Icon>\r\n              )}\r\n            </div>\r\n            {dropdownWarehouseVisible && (\r\n              <WrapList>\r\n                <List>\r\n                  {warehouses.length === 0 ? (\r\n                    <Item>\r\n                      <Message $error={massegeWarehous.error}>\r\n                        {massegeWarehous.messege}\r\n                      </Message>\r\n                    </Item>\r\n                  ) : (\r\n                    warehouses\r\n                      .filter(warehouse =>\r\n                        warehouse.Description.toLowerCase().includes(\r\n                          searchWarehouses.toLowerCase()\r\n                        )\r\n                      )\r\n                      .map(warehouse => (\r\n                        <Item\r\n                          key={nanoid()}\r\n                          onClick={() =>\r\n                            handleWarehouseSelect(warehouse.Description)\r\n                          }\r\n                        >\r\n                          <Text>{warehouse.Description}</Text>\r\n                        </Item>\r\n                      ))\r\n                  )}\r\n                </List>\r\n              </WrapList>\r\n            )}\r\n          </WrapInput>\r\n        </WrapForm>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import styled, { css } from 'styled-components';\r\nimport { InputMask } from 'primereact/inputmask';\r\n\r\nexport const WrapInput = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 6px;\r\n`;\r\nexport const WrapRadioInput = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  @media (min-width: 768px) {\r\n    gap: 8px;\r\n  }\r\n`;\r\nexport const WrapCheckboxInput = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 3px;\r\n  @media (min-width: 768px) {\r\n    gap: 6px;\r\n  }\r\n`;\r\nexport const LabelStyle = styled.label`\r\n  color: #160b03;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\n\r\nexport const InputStyle = styled.input`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 7.5px 16px;\r\n  border: 1px solid #160b03;\r\n  border-radius: 1px;\r\n  color: #160b03;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  border-color: ${p => p.$errors && 'red'};\r\n  &:focus {\r\n    outline: none;\r\n    border: 2px solid #7c7d80;\r\n  }\r\n  &::placeholder {\r\n    color: #9d9a97;\r\n    color: ${p => p.$errors && 'red'};\r\n  }\r\n  @media (min-width: 768px) {\r\n    max-width: 408px;\r\n    padding: 13px 16px;\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n  }\r\n`;\r\nexport const Input = styled.input`\r\n  ${props =>\r\n    (props.type === 'radio' || props.type === 'checkbox') &&\r\n    css`\r\n      accent-color: #160b03;\r\n    `}\r\n`;\r\nexport const InputMaskStyle = styled(InputMask)`\r\nbox-sizing: border-box;\r\ndisplay: flex;\r\nwidth: 100%;\r\npadding: 8.5px 16px;\r\nborder: 1px solid #000;\r\nborder-radius: 1px;\r\ncolor: #000;\r\nfont-size: 14px;\r\nline-height: 140%;\r\nborder-color: ${p => p.$errors && 'red'};\r\n&:focus {\r\n  outline: none;\r\n  border: 2px solid #7c7d80;\r\n}\r\n&::placeholder {\r\n  color: ${p => p.$errors && 'red'};\r\n}\r\n@media (min-width: 768px) {\r\n  max-width: 408px;\r\n  padding: 13px 16px;\r\n  &::placeholder {\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n  }\r\n`;\r\nexport const RadioLabel = styled.label`\r\n  display: flex;\r\n  gap: 10px;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: ${p => p.$errors && 'red'};\r\n  @media (min-width: 768px) {\r\n    gap: 12px;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const CheckboxLabel = styled.label`\r\n  display: flex;\r\n  gap: 10px;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: #9d9a97;\r\n  color: ${p => p.$errors && 'red'};\r\n  @media (min-width: 768px) {\r\n    gap: 12px;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const ErrorMessage = styled.p`\r\n  color: red;\r\n  font-size: 12px;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n","import {\r\n  CheckboxLabel,\r\n  ErrorMessage,\r\n  InputMaskStyle,\r\n  Input,\r\n  InputStyle,\r\n  LabelStyle,\r\n  RadioLabel,\r\n  WrapCheckboxInput,\r\n  WrapInput,\r\n  WrapRadioInput,\r\n} from './OrderInput.styled';\r\n\r\nexport const OrderInput = ({\r\n  label,\r\n  type,\r\n  name,\r\n  register,\r\n  placeholder,\r\n  defaultChecked,\r\n  disabled,\r\n  errors,\r\n}) => {\r\n  const errorMessage = errors[name]?.message;\r\n\r\n  const showMatchesError = errors[name]?.type === 'matches';\r\n  return (\r\n    <>\r\n      {type === 'radio' ? (\r\n        <WrapRadioInput>\r\n          <RadioLabel htmlFor={name} $errors={errors[name]}>\r\n            <Input\r\n              type={type}\r\n              id={name}\r\n              {...register(name)}\r\n              defaultChecked={defaultChecked}\r\n              disabled={disabled}\r\n            />\r\n            {label}\r\n          </RadioLabel>\r\n        </WrapRadioInput>\r\n      ) : type === 'checkbox' ? (\r\n        <WrapCheckboxInput>\r\n          <CheckboxLabel htmlFor={name} $errors={errors[name]}>\r\n            <Input\r\n              type={type}\r\n              id={name}\r\n              {...register(name)}\r\n              defaultChecked={defaultChecked}\r\n              disabled={disabled}\r\n            />\r\n            {label}\r\n          </CheckboxLabel>\r\n        </WrapCheckboxInput>\r\n      ) : name === 'phoneNumber' ? (\r\n        <WrapInput>\r\n          <LabelStyle htmlFor={name}>{label}</LabelStyle>\r\n          <InputMaskStyle\r\n            {...register(name)}\r\n            mask=\"+38(099)999-99-99\"\r\n            id={name}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            autoComplete=\"true\"\r\n            $errors={errors[name]}\r\n            autoClear={false}\r\n          />\r\n        </WrapInput>\r\n      ) : (\r\n        <WrapInput>\r\n          <LabelStyle htmlFor={name}>{label}</LabelStyle>\r\n          <InputStyle\r\n            id={name}\r\n            {...register(name)}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            $errors={errors[name]}\r\n            autoComplete=\"true\"\r\n          ></InputStyle>\r\n          {showMatchesError && errorMessage && (\r\n            <ErrorMessage>{errorMessage}</ErrorMessage>\r\n          )}\r\n        </WrapInput>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const WrapTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 14px;\r\n  margin-bottom: 24px;\r\n  @media (min-width: 768px) {\r\n    gap: 24px;\r\n    margin-bottom: 22px;\r\n  }\r\n`;\r\nexport const RadioForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  &:not(:last-child) {\r\n    margin-bottom: 16px;\r\n  }\r\n  &:last-child {\r\n    margin-bottom: 10px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    &:not(:last-child) {\r\n      margin-bottom: 32px;\r\n    }\r\n  }\r\n`;\r\n","import { OrderInput } from 'components/OrderInput/OrderInput';\r\n\r\nimport { RadioForm, WrapTitle } from './OrderPaymentForm.styled';\r\nimport { Title, ElipsTitle } from 'components/OrderForm/OrderForm.styled';\r\n\r\nexport const OrderPaymentForm = ({ register, errors }) => {\r\n  return (\r\n    <>\r\n      <WrapTitle>\r\n        <ElipsTitle>3</ElipsTitle>\r\n        <Title>Оплата</Title>\r\n      </WrapTitle>\r\n      <RadioForm>\r\n        <OrderInput\r\n          label={'Оплата за реквізитами'}\r\n          type=\"radio\"\r\n          name=\"payment online\"\r\n          register={register}\r\n          errors={errors}\r\n          disabled\r\n        />\r\n        <OrderInput\r\n          label={'Оплата при отриманні'}\r\n          type=\"radio\"\r\n          name=\"payment\"\r\n          register={register}\r\n          errors={errors}\r\n          defaultChecked\r\n        />\r\n      </RadioForm>\r\n      <RadioForm>\r\n        <OrderInput\r\n          label={\r\n            'Я погоджуюсь з договором оферти і політикою конфіденційності *'\r\n          }\r\n          type=\"checkbox\"\r\n          name=\"agreement\"\r\n          errors={errors}\r\n          register={register}\r\n        />\r\n        <OrderInput\r\n          label={'Зателефонуйте мені для уточнення деталей замовлення'}\r\n          type=\"checkbox\"\r\n          name=\"phone call\"\r\n          errors={errors}\r\n          register={register}\r\n        />\r\n      </RadioForm>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  @media (min-width: 768px) {\r\n    gap: 16px;\r\n  }\r\n`;\r\nexport const WrapTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 14px;\r\n  margin-bottom: 24px;\r\n  @media (min-width: 768px) {\r\n    gap: 22px;\r\n    margin-bottom: 28px;\r\n  }\r\n`;\r\n","import { OrderInput } from 'components/OrderInput/OrderInput';\r\n\r\nimport { Container, WrapTitle } from './OrderCustomerForm.styled';\r\nimport { Title, ElipsTitle } from 'components/OrderForm/OrderForm.styled';\r\n\r\nexport const OrderCustomerForm = ({ register, errors }) => {\r\n  return (\r\n    <>\r\n      <WrapTitle>\r\n        <ElipsTitle>1</ElipsTitle>\r\n        <Title>Особисті дані</Title>\r\n      </WrapTitle>\r\n      <Container>\r\n        <OrderInput\r\n          label={'Прізвище *'}\r\n          type=\"text\"\r\n          name=\"secondName\"\r\n          register={register}\r\n          placeholder={'Прізвище'}\r\n          errors={errors}\r\n        />\r\n        <OrderInput\r\n          label={'Ім’я *'}\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          register={register}\r\n          placeholder={'Ім’я'}\r\n          errors={errors}\r\n        />\r\n        <OrderInput\r\n          label={'Номер телефону *'}\r\n          name=\"phoneNumber\"\r\n          type=\"tel\"\r\n          register={register}\r\n          placeholder={'+38(0__)___-__-__'}\r\n          errors={errors}\r\n        />\r\n        <OrderInput\r\n          label={'E-Mail *'}\r\n          type=\"email\"\r\n          name=\"orderEmail\"\r\n          register={register}\r\n          placeholder={'E-mail'}\r\n          errors={errors}\r\n        />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { orderFormSchema } from 'utils/yupSchema';\r\nimport { placeAnOrder } from 'redux/order/operations';\r\nimport { selectOrderSuccess } from 'redux/order/selectors';\r\n\r\nimport { Delivery } from 'components/Delivery/Delivery';\r\nimport { OrderPaymentForm } from 'components/OrderPaymentForm/OrderPaymentForm';\r\nimport { OrderCustomerForm } from 'components/OrderCustomerForm/OrderCustomerForm';\r\n\r\nimport Sprite from '../../images/sprite.svg';\r\nimport {\r\n  OrderFormSection,\r\n  Wrapper,\r\n  OrderBtn,\r\n  Form,\r\n  SuccessMessage,\r\n  SuccessIcon,\r\n  SuccessText,\r\n  OrderSuccessSection,\r\n  OrderSuccessContainer,\r\n} from './OrderForm.styled';\r\nimport { selectIsRefreshing } from '../../redux/order/selectors';\r\nimport { Loader } from 'components/Loader/Loader';\r\n\r\nexport const OrderForm = ({ sessionId, setFormStatus, formStatus }) => {\r\n  const dispatch = useDispatch();\r\n  const orderSuccessful = useSelector(selectOrderSuccess);\r\n  const isLoading = useSelector(selectIsRefreshing);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n    resolver: yupResolver(orderFormSchema),\r\n    defaultValues: {\r\n      agreement: false,\r\n      'payment online': false,\r\n    },\r\n  });\r\n\r\n  const onSubmitSubscription = async formData => {\r\n    try {\r\n      dispatch(\r\n        placeAnOrder({\r\n          sessionId: sessionId,\r\n          id: parseInt(uuidv4(), 16),\r\n          email: formData.orderEmail,\r\n          firstName: formData.firstName,\r\n          lastName: formData.secondName,\r\n          customerPhoneNumber: formData.phoneNumber,\r\n          address: formData.city + '' + formData.warehouse,\r\n        })\r\n      );\r\n      setFormStatus('success');\r\n      reset();\r\n    } catch (error) {\r\n      console.error(error);\r\n      setFormStatus('error');\r\n      setTimeout(() => {\r\n        setFormStatus(null);\r\n      }, 5000);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {formStatus === 'success' ? (\r\n        isLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <OrderSuccessSection>\r\n            <OrderSuccessContainer>\r\n              <SuccessIcon>\r\n                <use href={`${Sprite}#icon-success-order`}></use>\r\n              </SuccessIcon>\r\n              <SuccessMessage>\r\n                Ваше замовлення №{orderSuccessful?.id} оформлено\r\n              </SuccessMessage>\r\n              <SuccessText>\r\n                Очікуйте листа з деталями замовлення на вашу електронну адресу.\r\n              </SuccessText>\r\n              <SuccessText>Дякуємо, що обираєте Zatyshna.</SuccessText>\r\n            </OrderSuccessContainer>\r\n          </OrderSuccessSection>\r\n        )\r\n      ) : formStatus === 'error' ? (\r\n        <OrderSuccessSection>\r\n          <OrderSuccessContainer>\r\n            <SuccessMessage>\r\n              Вибачте, наразі неможливо оформити замовлення.\r\n            </SuccessMessage>\r\n          </OrderSuccessContainer>\r\n        </OrderSuccessSection>\r\n      ) : (\r\n        <OrderFormSection>\r\n          <Wrapper>\r\n            <Form onSubmit={handleSubmit(onSubmitSubscription)}>\r\n              <div>\r\n                <OrderCustomerForm register={register} errors={errors} />\r\n              </div>\r\n              <div>\r\n                <Delivery\r\n                  register={register}\r\n                  setValue={setValue}\r\n                  errors={errors}\r\n                  formStatus={formStatus}\r\n                />\r\n              </div>\r\n              <div>\r\n                <OrderPaymentForm register={register} errors={errors} />\r\n              </div>\r\n              <OrderBtn\r\n                type=\"submit\"\r\n                onClick={() =>\r\n                  formStatus === 'success'\r\n                    ? window.scrollTo({ top: 0, behavior: 'smooth' })\r\n                    : null\r\n                }\r\n              >\r\n                Оформити замовлення\r\n              </OrderBtn>\r\n            </Form>\r\n          </Wrapper>\r\n        </OrderFormSection>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n  width: 100%;\r\n  padding: 0 0 32px;\r\n  @media (min-width: 768px) {\r\n    padding: 0 0 28px;\r\n  }\r\n`;\r\nexport const NavSection = styled.section`\r\n  width: 100%;\r\n  padding: 124px 0 52px;\r\n  @media (min-width: 768px) {\r\n    padding: 170px 0 64px;\r\n  }\r\n`;\r\nexport const NavWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  gap: 18px;\r\n  padding: 0 43px 0 30px;\r\n  margin: 0 auto;\r\n  flex-wrap: wrap;\r\n  @media (min-width: 768px) {\r\n    gap: 24px;\r\n    max-width: 1360px;\r\n    padding: 0 40px;\r\n  }\r\n`;\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 28px;\r\n  padding-right: 28px;\r\n  margin: 0 auto;\r\n  @media (min-width: 768px) {\r\n    max-width: 1360px;\r\n    padding-left: 40px;\r\n    padding-right: 40px;\r\n  }\r\n`;\r\nexport const Title = styled.h2`\r\n  display: none;\r\n  @media (min-width: 768px) {\r\n    display: block;\r\n    font-size: 32px;\r\n    font-weight: 400;\r\n    line-height: 45px;\r\n    margin-bottom: 28px;\r\n  }\r\n`;\r\nexport const LinkTo = styled(Link)`\r\n  font-size: 18px;\r\n  line-height: 25px;\r\n  color: #160b03;\r\n  transition: all 150ms ease-out;\r\n  &:hover,\r\n  &:focus {\r\n    color: #9d9a97;\r\n  }\r\n  &:last-child {\r\n    color: #9d9a97;\r\n  }\r\n  @media (min-width: 768px) {\r\n    font-size: 22px;\r\n    line-height: 29px;\r\n  }\r\n`;\r\nexport const OrderWrapper = styled.div`\r\n  max-height: 234px;\r\n  overflow: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 18px;\r\n  @media (min-width: 768px) {\r\n    gap: 22px;\r\n    max-height: 472px;\r\n  }\r\n\r\n  /* Webkit (Chrome, Safari) scrollbar styling */\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    @media (min-width: 768px) {\r\n      width: 12px;\r\n    }\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #888;\r\n    border-radius: 6px;\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    background-color: #f1f1f1;\r\n  }\r\n\r\n  /* Firefox scrollbar styling */\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #888 #f1f1f1;\r\n\r\n  /* IE/Edge scrollbar styling */\r\n  -ms-overflow-style: none;\r\n  &::-ms-scrollbar-thumb {\r\n    background-color: #888;\r\n  }\r\n  &::-ms-scrollbar-track {\r\n    background-color: #f1f1f1;\r\n  }\r\n`;\r\nexport const OrderResultSection = styled.section`\r\n  padding: 23px 0;\r\n  width: 100%;\r\n  background: #f4efeb;\r\n  @media (min-width: 768px) {\r\n    padding: 48px 0;\r\n  }\r\n`;\r\nexport const OrderResultTitle = styled.h3`\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  line-height: 25px;\r\n  @media (min-width: 768px) {\r\n    font-size: 32px;\r\n    line-height: 45px;\r\n  }\r\n`;\r\nexport const OrderResultDelivery = styled.p`\r\n  font-size: 12px;\r\n  line-height: 16px;\r\n  color: #00000066;\r\n  width: 66px;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n    color: #9d9a97;\r\n    width: auto;\r\n  }\r\n`;\r\nexport const OrderResultList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n  @media (min-width: 768px) {\r\n    gap: 8px;\r\n  }\r\n`;\r\nexport const OrderResultListItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  &:nth-child(2) {\r\n    margin-bottom: 6px;\r\n    @media (min-width: 768px) {\r\n      margin-bottom: 7px;\r\n    }\r\n  }\r\n`;\r\nexport const OrderResultTotal = styled.p`\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const OrderResultTotalPrice = styled.p`\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 23px;\r\n  }\r\n`;\r\nexport const OrderResultDestTotal = styled.p`\r\n  font-family: Inter;\r\n  font-size: 16px;\r\n  line-height: 21px;\r\n  @media (min-width: 768px) {\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 29px;\r\n  }\r\n`;\r\n","import axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useMemo } from 'react';\r\nimport { useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nimport { useMedia } from 'hooks/useMedia';\r\nimport { getOrder } from 'redux/order/operations';\r\nimport { selectOrder, selectOrderItems } from 'redux/order/selectors';\r\n\r\nimport { OrderItem } from 'components/OrderItem/OrderItem';\r\nimport { OrderForm } from 'components/OrderForm/OrderForm';\r\n\r\nimport {\r\n  LinkTo,\r\n  NavWrapper,\r\n  OrderWrapper,\r\n  Section,\r\n  Wrapper,\r\n  Title,\r\n  OrderResultSection,\r\n  OrderResultTitle,\r\n  OrderResultDelivery,\r\n  OrderResultList,\r\n  OrderResultListItem,\r\n  OrderResultDestTotal,\r\n  OrderResultTotal,\r\n  OrderResultTotalPrice,\r\n  NavSection,\r\n} from './Order.styled';\r\nimport { formatPrice } from 'utils/formatPrice';\r\nimport { selectIsRefreshing } from 'redux/cart/selectors';\r\nimport { Loader } from 'components/Loader/Loader';\r\n\r\nexport const Order = () => {\r\n  const dispatch = useDispatch();\r\n  const { state } = useLocation();\r\n  const { isMobileScreen } = useMedia();\r\n  const [orderSuccess, setOrderSuccess] = useState(null);\r\n  const [formStatus, setFormStatus] = useState(null);\r\n  const [productAvailableQuantity, setProductAvailableQuantity] = useState({});\r\n\r\n  const order = useSelector(selectOrder) || [];\r\n  const isLoading = useSelector(selectIsRefreshing);\r\n  const products = useSelector(selectOrderItems);\r\n  const memoizedProducts = useMemo(() => products || [], [products]);\r\n\r\n  const { totalAmount, currencyCode, totalQuantity } = order;\r\n  const sessionId = state ? state?.sessionId : null;\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrder(sessionId));\r\n  }, [dispatch, sessionId]);\r\n\r\n  useEffect(() => {\r\n    const fetchProductQuantityForItem = async productId => {\r\n      try {\r\n        const productResponse = await axios.get(`/products/${productId}`);\r\n        const cartItem = memoizedProducts.find(\r\n          item => item.productId === productId\r\n        );\r\n        if (cartItem) {\r\n          const matchingSku = productResponse.data.skuSet.find(\r\n            skuSet => skuSet.id === cartItem.sku.id\r\n          );\r\n          if (matchingSku) {\r\n            return {\r\n              productId,\r\n              availableQuantity: matchingSku.availableQuantity,\r\n            };\r\n          } else {\r\n            return {\r\n              productId,\r\n              availableQuantity: 0,\r\n            };\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    const fetchProductQuantity = async () => {\r\n      try {\r\n        if (memoizedProducts) {\r\n          const productPromises = memoizedProducts.map(async item => {\r\n            return fetchProductQuantityForItem(item.productId);\r\n          });\r\n\r\n          const productArray = await Promise.all(productPromises);\r\n          const productQuantity = productArray.reduce((map, product) => {\r\n            map[product.productId] = product.availableQuantity;\r\n            return map;\r\n          }, {});\r\n\r\n          setProductAvailableQuantity(productQuantity);\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchProductQuantity();\r\n  }, [memoizedProducts, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <NavSection>\r\n        <NavWrapper>\r\n          <LinkTo to={'/'}>Головна</LinkTo>\r\n          <span>|</span>\r\n          <LinkTo to={'/cart'}>Кошик</LinkTo>\r\n          <span>|</span>\r\n          <LinkTo to={'/order'}>Оформлення</LinkTo>\r\n        </NavWrapper>\r\n      </NavSection>\r\n      {formStatus === 'success' ? (\r\n        <></>\r\n      ) : (\r\n        <>\r\n          <Section>\r\n            <Wrapper>\r\n              {isLoading ? (\r\n                <Loader />\r\n              ) : (\r\n                <>\r\n                  <Title>Ваше замовлення</Title>\r\n                  <OrderWrapper>\r\n                    {memoizedProducts.length === 0 ? (\r\n                      <p>Замовлення порожнє</p>\r\n                    ) : (\r\n                      memoizedProducts.map(item => (\r\n                        <OrderItem\r\n                          key={item.id}\r\n                          item={item}\r\n                          availableQuantity={\r\n                            productAvailableQuantity[item.productId]\r\n                          }\r\n                          setOrderSuccess={setOrderSuccess}\r\n                        />\r\n                      ))\r\n                    )}\r\n                  </OrderWrapper>\r\n                </>\r\n              )}\r\n            </Wrapper>\r\n          </Section>\r\n          <OrderResultSection>\r\n            <Wrapper>\r\n              {memoizedProducts.length === 0 || orderSuccess === false ? (\r\n                <OrderResultTitle style={{ textAlign: 'center' }}>\r\n                  Наразі неможливо оформити замовлення\r\n                </OrderResultTitle>\r\n              ) : isMobileScreen ? (\r\n                <>\r\n                  <OrderResultList>\r\n                    <OrderResultListItem>\r\n                      <OrderResultTotal>\r\n                        {totalQuantity} товари(-ів) на суму\r\n                      </OrderResultTotal>\r\n                      <OrderResultTotalPrice>\r\n                        {formatPrice(totalAmount)} {currencyCode}\r\n                      </OrderResultTotalPrice>\r\n                    </OrderResultListItem>\r\n                    <OrderResultListItem>\r\n                      <OrderResultDelivery>\r\n                        Вартість доставки\r\n                      </OrderResultDelivery>\r\n                      <OrderResultDelivery>\r\n                        За тарифами перевізника\r\n                      </OrderResultDelivery>\r\n                    </OrderResultListItem>\r\n                    <OrderResultListItem>\r\n                      <OrderResultTitle>Всього</OrderResultTitle>\r\n                      <OrderResultDestTotal>\r\n                        {formatPrice(totalAmount)} {currencyCode}\r\n                      </OrderResultDestTotal>\r\n                    </OrderResultListItem>\r\n                  </OrderResultList>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <OrderResultList>\r\n                    <OrderResultListItem>\r\n                      <OrderResultTotal>\r\n                        {totalQuantity} товари(-ів) на суму\r\n                      </OrderResultTotal>\r\n                      <OrderResultTotalPrice>\r\n                        {formatPrice(totalAmount)} {currencyCode}\r\n                      </OrderResultTotalPrice>\r\n                    </OrderResultListItem>\r\n                    <OrderResultListItem>\r\n                      <OrderResultDelivery>\r\n                        Вартість доставки\r\n                      </OrderResultDelivery>\r\n                      <OrderResultDelivery>\r\n                        За тарифами перевізника\r\n                      </OrderResultDelivery>\r\n                    </OrderResultListItem>\r\n                    <OrderResultListItem>\r\n                      <OrderResultTitle>Разом:</OrderResultTitle>\r\n                      <OrderResultDestTotal>\r\n                        {formatPrice(totalAmount)} {currencyCode}\r\n                      </OrderResultDestTotal>\r\n                    </OrderResultListItem>\r\n                  </OrderResultList>\r\n                </>\r\n              )}\r\n            </Wrapper>\r\n          </OrderResultSection>\r\n        </>\r\n      )}\r\n      {memoizedProducts.length === 0 || orderSuccess === false ? (\r\n        <></>\r\n      ) : (\r\n        <OrderForm\r\n          sessionId={sessionId}\r\n          orderSuccess={orderSuccess}\r\n          setFormStatus={setFormStatus}\r\n          formStatus={formStatus}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Order } from 'components/Order/Order';\r\n\r\nconst OrderPage = () => {\r\n  return (\r\n    <main>\r\n      <Order />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","import * as Yup from 'yup';\r\n\r\nexport const emailSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .required('Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .min(6, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .max(63, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .matches(\r\n      /^[a-zA-Z0-9_][a-zA-Z0-9_.-]*@[a-zA-Z0-9.-]+[a-zA-Z0-9-]*\\.[a-zA-Z]{2,4}$/,\r\n      'Будь ласка, введіть дійсну адресу електронної пошти.'\r\n    ),\r\n});\r\n\r\nexport const formSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .trim()\r\n    .required('Поле обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(70, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^(?!.*(\\s-|-\\s)|.*--|.*——|.*––|.*–\\s|.*\\s–|.*—\\s|.*\\s—)[а-яА-Яa-zA-Z\\s'’\\-–—ЇїІіЄєҐґ]*$/,\r\n      'Невірне імʼя'\r\n    ),\r\n  email: Yup.string()\r\n    .required('Поле обовʼязкове до заповнення')\r\n    .min(6, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .max(63, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .matches(\r\n      /^[a-zA-Z0-9_][a-zA-Z0-9_.-]*@[a-zA-Z0-9.-]+[a-zA-Z0-9-]*\\.[a-zA-Z]{2,4}$/,\r\n      'Будь ласка, введіть дійсну адресу електронної пошти.'\r\n    ),\r\n  message: Yup.string()\r\n    .trim()\r\n    .required('Поле обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(1000, 'Перевищена максимальна кількість'),\r\n});\r\n\r\nexport const orderFormSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .trim()\r\n    .required('Поле імʼя обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(70, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^(?!.*(\\s-|-\\s)|.*--|.*——|.*––|.*–\\s|.*\\s–|.*—\\s|.*\\s—)[а-яА-Яa-zA-Z\\s'’\\-–—ЇїІіЄєҐґ]*$/,\r\n      'Поле приймає тільки кирилицю та латиницю.'\r\n    ),\r\n  secondName: Yup.string()\r\n    .trim()\r\n    .required('Поле імʼя обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(70, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^(?!.*(\\s-|-\\s)|.*--|.*——|.*––|.*–\\s|.*\\s–|.*—\\s|.*\\s—)[а-яА-Яa-zA-Z\\s'’\\-–—ЇїІіЄєҐґ]*$/,\r\n      'Поле приймає тільки кирилицю та латиницю.'\r\n    ),\r\n  orderEmail: Yup.string()\r\n    .required('Поле пошта обовʼязкове до заповнення')\r\n    .min(6, 'Поле має містити як мінімум 6 символів')\r\n    .max(63, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^[a-zA-Z0-9_][a-zA-Z0-9_.-]*@[a-zA-Z0-9.-]+[a-zA-Z0-9-]*\\.[a-zA-Z]{2,4}$/,\r\n      'Будь ласка, введіть дійсну адресу електронної пошти.'\r\n    ),\r\n  phoneNumber: Yup.string()\r\n    .trim()\r\n    .required('Поле телефону обовʼязкове до заповнення')\r\n    .min(10, 'Поле має містити як мінімум 10 символів')\r\n    .max(17, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^\\+\\d{2}\\(\\d{3}\\)\\d{3}-\\d{2}-\\d{2}$/,\r\n      'Будь ласка, введіть дійсний номер телефону.'\r\n    ),\r\n  city: Yup.string().trim().required('Поле обовʼязкове до заповнення'),\r\n  warehouse: Yup.string().trim().required('Поле обовʼязкове до заповнення'),\r\n  agreement: Yup.boolean().oneOf([true], 'Поле обовʼязкове'),\r\n});\r\n"],"names":["selectOrderSuccess","state","_state$order","order","orderSuccessful","selectOrder","_state$order2","selectOrderItems","_state$order$order","items","selectIsRefreshing","_state$order3","isRefreshing","ItemWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","OrderImage","img","_templateObject3","OrderContentWrapper","_templateObject4","OrderTitle","h3","_templateObject5","OrderDescription","_templateObject6","OrderText","p","_templateObject7","OrderPrice","_templateObject8","OrderError","_templateObject9","OrderErrorText","_templateObject10","OrderItem","_ref","item","setOrderSuccess","availableQuantity","photoUrl","productTitle","sku","amount","currencyCode","quantity","color","characteristics","name","size","useEffect","_jsx","_Fragment","children","_jsxs","src","concat","noImage","slice","formatPrice","WrapTitle","WrapRadio","ElipsRadio","NameRadio","WrapForm","WrapInput","LabelStyle","label","InputStyle","input","$error","WrapList","List","ul","Item","li","_templateObject11","Text","_templateObject12","Message","_templateObject13","Icon","svg","_templateObject14","OrderFormSection","section","Wrapper","Title","ElipsTitle","Form","form","OrderBtn","button","SuccessMessage","SuccessIcon","SuccessText","OrderSuccessSection","OrderSuccessContainer","APIKEY","Delivery","register","setValue","errors","formStatus","_useState","useState","_useState2","_slicedToArray","searchCityName","setSearchCityName","_useState3","_useState4","searchCities","setSearchCities","_useState5","_useState6","dropdownCityVisible","setDropdownCityVisible","_useState7","_useState8","dropdownWarehouseVisible","setDropdownWarehouseVisible","_useState9","_useState10","searchWarehouses","setSearchWarehouses","_useState11","_useState12","warehouseSearchType","setWarehouseSearchType","_useState13","_useState14","warehouses","setWarehouses","_useState15","messege","error","_useState16","massegeCity","setMassegeCity","_useState17","_useState18","massegeWarehous","setMassegeWarehous","handleСityName","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestData","response","data","addresses","wrap","_context","prev","next","apiKey","modelName","calledMethod","methodProperties","Page","CityName","Limit","fetch","method","headers","Accept","body","JSON","stringify","sent","ok","Error","status","json","success","Addresses","t0","console","stop","apply","arguments","length","handleSearchTextChange","throttle","e","value","target","trim","handleWarehousesChange","_ref3","_callee2","_context2","CityRef","TypeOfWarehouseRef","WarehouseRef","handleSearchTextChangeWarehose","setTimeout","htmlFor","style","position","_objectSpread","type","id","autoComplete","placeholder","onChange","onClick","onBlur","href","Sprite","map","searchCity","city","deliveryCity","Present","DeliveryCity","nanoid","filter","warehouse","Description","toLowerCase","includes","handleWarehouseSelect","WrapRadioInput","WrapCheckboxInput","$errors","Input","props","css","InputMaskStyle","InputMask","RadioLabel","CheckboxLabel","ErrorMessage","OrderInput","_errors$name","_errors$name2","defaultChecked","disabled","errorMessage","message","showMatchesError","mask","autoClear","RadioForm","OrderPaymentForm","OrderCustomerForm","OrderForm","sessionId","setFormStatus","dispatch","useDispatch","useSelector","isLoading","_useForm","useForm","mode","resolver","yupResolver","orderFormSchema","defaultValues","agreement","handleSubmit","formState","reset","onSubmitSubscription","formData","placeAnOrder","parseInt","uuidv4","email","orderEmail","firstName","lastName","secondName","customerPhoneNumber","phoneNumber","address","_x","Loader","onSubmit","window","scrollTo","top","behavior","Section","NavSection","NavWrapper","h2","LinkTo","Link","OrderWrapper","OrderResultSection","OrderResultTitle","OrderResultDelivery","OrderResultList","OrderResultListItem","OrderResultTotal","OrderResultTotalPrice","OrderResultDestTotal","_templateObject15","Order","useLocation","isMobileScreen","useMedia","orderSuccess","productAvailableQuantity","setProductAvailableQuantity","products","memoizedProducts","useMemo","totalAmount","totalQuantity","getOrder","fetchProductQuantityForItem","productId","productResponse","cartItem","matchingSku","axios","get","find","skuSet","abrupt","fetchProductQuantity","_callee3","productPromises","productArray","productQuantity","_context3","_x2","Promise","all","reduce","product","to","textAlign","emailSchema","Yup","shape","required","min","max","matches","formSchema","oneOf"],"sourceRoot":""}