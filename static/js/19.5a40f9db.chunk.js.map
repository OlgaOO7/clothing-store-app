{"version":3,"file":"static/js/19.5a40f9db.chunk.js","mappings":"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","sources":["redux/order/selectors.js","components/OrderItem/OrderItem.styled.jsx","components/OrderItem/OrderItem.jsx","components/Delivery/Delivery.styled.jsx","components/OrderForm/OrderForm.styled.jsx","components/Delivery/Delivery.jsx","components/OrderInput/OrderInput.styled.jsx","components/OrderInput/OrderInput.jsx","components/OrderPaymentForm/OrderPaymentForm.styled.jsx","components/OrderPaymentForm/OrderPaymentForm.jsx","components/OrderCustomerForm/OrderCustomerForm.styled.jsx","components/OrderCustomerForm/OrderCustomerForm.jsx","components/OrderForm/OrderForm.jsx","components/Order/Order.styled.jsx","components/Order/Order.jsx","pages/OrderPage/OrderPage.jsx","utils/yupSchema.js"],"sourcesContent":["export const selectOrderSuccess = state => state.order?.orderSuccessful;\r\nexport const selectOrder = state => state.order?.order;\r\nexport const selectOrderItems = state => state.order.order?.items;\r\n","import styled from 'styled-components';\r\n\r\nexport const ItemWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  gap: 15px;\r\n  &:not(:last-child) {\r\n    padding-bottom: 21px;\r\n    border-bottom: 1px solid #e1e1e1;\r\n  }\r\n  @media (min-width: 768px) {\r\n    padding: 0;\r\n    &:not(:last-child) {\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nexport const OrderImage = styled.img`\r\n  width: 44px;\r\n  max-height: 50px;\r\n  margin-right: 12px;\r\n  @media (min-width: 768px) {\r\n    width: 161px;\r\n    max-height: 208px;\r\n    margin-right: 27px;\r\n  }\r\n`;\r\nexport const OrderContent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 128px;\r\n  @media (min-width: 768px) {\r\n    flex-direction: column;\r\n    width: auto;\r\n  }\r\n`;\r\nexport const OrderContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (min-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\nexport const OrderTitle = styled.h3`\r\n  font-family: Gill Sans;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  line-height: 18px;\r\n  height: max-content;\r\n  @media (min-width: 768px) {\r\n    font-family: Gill Sans;\r\n    font-size: 32px;\r\n    line-height: 45px;\r\n  }\r\n`;\r\nexport const OrderDescription = styled.div`\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 14px;\r\n  @media (min-width: 768px) {\r\n    display: flex;\r\n    gap: 10px;\r\n    font-size: 18px;\r\n    line-height: 25px;\r\n    align-items: center;\r\n  }\r\n`;\r\nexport const OrderText = styled.p`\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 25px;\r\n    color: #4c4b4b;\r\n  }\r\n`;\r\nexport const OrderPrice = styled.p`\r\n  font-family: Inter;\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 23px;\r\n  }\r\n`;\r\nexport const OrderColor = styled.div`\r\n  width: 18px;\r\n  height: 18px;\r\n  border-radius: 50%;\r\n  background: #d9d9d9;\r\n  border: 1px solid #d9d9d9;\r\n  background: ${p => p.$color && p.$color};\r\n`;\r\nexport const OrderError = styled.div`\r\n  background: rgba(236, 236, 236, 0.9);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nexport const OrderErrorText = styled.p`\r\n  font-size: 12px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 25px;\r\n  }\r\n`;\r\n","import { useEffect } from 'react';\r\n\r\nimport { useMedia } from 'hooks/useMedia';\r\nimport { formatPrice } from 'utils/formatPrice';\r\n\r\nimport noImage from '../../images/no-image.jpg';\r\n\r\nimport {\r\n  ItemWrapper,\r\n  Container,\r\n  OrderColor,\r\n  OrderContent,\r\n  OrderContentWrapper,\r\n  OrderDescription,\r\n  OrderImage,\r\n  OrderPrice,\r\n  OrderText,\r\n  OrderTitle,\r\n  OrderError,\r\n  OrderErrorText,\r\n} from './OrderItem.styled';\r\n\r\nexport const OrderItem = ({ item, setOrderSuccess, availableQuantity }) => {\r\n  const { isMobileScreen } = useMedia();\r\n\r\n  const { photoUrl, productTitle, sku, amount, currencyCode, quantity } = item;\r\n  const color = sku.characteristics[1].name;\r\n  const colorhex = sku.characteristics[1].value;\r\n  const size = sku.characteristics[0].name;\r\n\r\n  useEffect(() => {\r\n    if (quantity > availableQuantity) {\r\n      setOrderSuccess(false);\r\n    } else {\r\n      setOrderSuccess(true);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ItemWrapper>\r\n        {quantity > availableQuantity && (\r\n          <OrderError>\r\n            <OrderErrorText>\r\n              Вибачте, цей товар тимчасово недоступний або його кількість\r\n              перевищує наявність.\r\n            </OrderErrorText>\r\n          </OrderError>\r\n        )}\r\n        <Container>\r\n          <OrderImage src={`${photoUrl ? photoUrl : noImage}`}></OrderImage>\r\n          <OrderContent>\r\n            {isMobileScreen ? (\r\n              <>\r\n                <OrderContentWrapper>\r\n                  <OrderTitle>{productTitle.slice(0, 5)}...</OrderTitle>\r\n                  <OrderText>{color}</OrderText>\r\n                  <OrderText>{size}</OrderText>\r\n                </OrderContentWrapper>\r\n                <OrderDescription>x {quantity}</OrderDescription>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <OrderContentWrapper>\r\n                  <OrderTitle>{productTitle}</OrderTitle>\r\n                  <OrderDescription>\r\n                    Колір:<OrderColor $color={colorhex}></OrderColor>\r\n                  </OrderDescription>\r\n                  <OrderDescription>\r\n                    Розмір:\r\n                    <OrderText>{size}</OrderText>\r\n                  </OrderDescription>\r\n                  <OrderDescription>\r\n                    Кількість:<OrderText>{quantity}</OrderText>\r\n                  </OrderDescription>\r\n                </OrderContentWrapper>\r\n              </>\r\n            )}\r\n          </OrderContent>\r\n        </Container>\r\n        <OrderPrice>\r\n          {formatPrice(amount)} {currencyCode}\r\n        </OrderPrice>\r\n      </ItemWrapper>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const WrapTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 14px;\r\n  margin-bottom: 28px;\r\n  @media (min-width: 768px) {\r\n    gap: 24px;\r\n    margin-bottom: 37px;\r\n  }\r\n`;\r\n\r\nexport const WrapRadio = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-bottom: 16px;\r\n  @media (min-width: 768px) {\r\n    gap: 11px;\r\n    margin-bottom: 25px;\r\n  }\r\n`;\r\n\r\nexport const ElipsRadio = styled.div`\r\n  width: 12px;\r\n  height: 12px;\r\n  background: #d9d9d9;\r\n  border-radius: 6px;\r\n  border: none;\r\n`;\r\nexport const NameRadio = styled.p`\r\n  color: #000;\r\n  text-align: center;\r\n  font-family: Gill Sans;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 140%;\r\n  @media (min-width: 768px) {\r\n    line-height: normal;\r\n  }\r\n`;\r\n\r\nexport const WrapForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  @media (min-width: 768px) {\r\n    gap: 14px;\r\n  }\r\n`;\r\n\r\nexport const WrapInput = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const LabelStyle = styled.label`\r\n  color: #000;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  margin-bottom: 6px;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\n\r\nexport const InputStyle = styled.input`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 8.5px 16px;\r\n  border: 1px solid #000;\r\n  color: #000;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  border-color: ${p => p.$error && 'red'};\r\n  &:focus {\r\n    outline: none;\r\n    border: 2px solid #000;\r\n  }\r\n  &::placeholder {\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    color: ${p => p.$error && 'red'};\r\n  }\r\n  @media (min-width: 768px) {\r\n    max-width: 403px;\r\n    padding: 13px 16px;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const WrapList = styled.div`\r\n  position: absolute;\r\n  top: 62px;\r\n  background: #fff;\r\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 7px 10px 3px;\r\n  z-index: 1;\r\n  @media (min-width: 768px) {\r\n    top: 72px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  width: 304px;\r\n  padding: 10px 16px;\r\n  min-height: 100px;\r\n  max-height: 200px;\r\n  gap: 10px;\r\n  border: 1px solid #000;\r\n  @media (min-width: 768px) {\r\n    width: 403px;\r\n  }\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  font-family: Gill Sans;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 140%;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: normal;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-family: Gill Sans;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 140%;\r\n  cursor: pointer;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const Message = styled.p`\r\n  color: ${p => (p.$error ? 'red' : 'black')};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const OrderFormSection = styled.section`\r\n  width: 100%;\r\n  padding: 39px 0 61px;\r\n  @media (min-width: 768px) {\r\n    padding: 56px 0 430px;\r\n  }\r\n`;\r\nexport const Wrapper = styled.div`\r\n  padding-left: 28px;\r\n  padding-right: 28px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (min-width: 768px) {\r\n    max-width: 1360px;\r\n    padding-left: 40px;\r\n    padding-right: 40px;\r\n  }\r\n`;\r\nexport const Title = styled.h3`\r\n  color: #000;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  line-height: 18px;\r\n  text-transform: uppercase;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: 21px;\r\n  }\r\n`;\r\nexport const ElipsTitle = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 26px;\r\n  height: 26px;\r\n  background: #d9d9d9;\r\n  border-radius: 13px;\r\n  border: none;\r\n  color: #000;\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 16px;\r\n    font-size: 18px;\r\n    line-height: 23px;\r\n  }\r\n`;\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 29px;\r\n  @media (min-width: 768px) {\r\n    gap: 39px;\r\n  }\r\n`;\r\nexport const OrderBtn = styled.button`\r\n  max-width: 189px;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  line-height: 21px;\r\n  padding: 8.5px 0;\r\n  background: #000000;\r\n  color: #ffffff;\r\n  border: none;\r\n  @media (min-width: 768px) {\r\n    max-width: 362px;\r\n    padding: 10px 0;\r\n    font-size: 26px;\r\n    line-height: 36px;\r\n  }\r\n`;\r\nexport const SuccessMessage = styled.div`\r\n  width: 100%;\r\n  max-width: 898px;\r\n  padding: 13px 0;\r\n  background: #000000;\r\n  font-size: 16px;\r\n  line-height: 18px;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  margin-bottom: 18px;\r\n  @media (min-width: 768px) {\r\n    padding: 27.5px 0;\r\n    font-size: 28px;\r\n    line-height: 32px;\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\nexport const SuccessIcon = styled.svg`\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-bottom: 18px;\r\n  @media (min-width: 768px) {\r\n    width: 64px;\r\n    height: 64px;\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\nexport const SuccessText = styled.p`\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  text-align: center;\r\n  &:first-of-type {\r\n    margin-bottom: 24px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    font-size: 24px;\r\n    line-height: 31px;\r\n    &:first-of-type {\r\n      margin-bottom: 0px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { throttle } from 'lodash';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\nimport {\r\n  ElipsRadio,\r\n  InputStyle,\r\n  Item,\r\n  LabelStyle,\r\n  List,\r\n  Message,\r\n  NameRadio,\r\n  WrapForm,\r\n  WrapInput,\r\n  WrapList,\r\n  WrapRadio,\r\n  WrapTitle,\r\n  Text,\r\n} from './Delivery.styled';\r\nimport { Title, ElipsTitle } from 'components/OrderForm/OrderForm.styled';\r\n\r\nconst APIKEY = '4cfd344a4e40e9fab712995825eeaef4';\r\n\r\nexport const Delivery = ({ register, setValue, errors, formStatus }) => {\r\n  const [searchCityName, setSearchCityName] = useState('');\r\n  const [searchCities, setSearchCities] = useState([]);\r\n  const [dropdownCityVisible, setDropdownCityVisible] = useState(false);\r\n  const [dropdownWarehouseVisible, setDropdownWarehouseVisible] =\r\n    useState(false);\r\n\r\n  const [searchWarehouses, setSearchWarehouses] = useState('');\r\n  const [warehouseSearchType, setWarehouseSearchType] = useState(false);\r\n  const [warehouses, setWarehouses] = useState([]);\r\n  const [massegeCity, setMassegeCity] = useState({\r\n    messege: 'Loading...',\r\n    error: false,\r\n  });\r\n  const [massegeWarehous, setMassegeWarehous] = useState({\r\n    messege: 'Loading...',\r\n    error: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (formStatus === 'success') {\r\n      setSearchCityName('');\r\n      setSearchWarehouses('');\r\n    }\r\n  }, [formStatus]);\r\n\r\n  const handleСityName = async () => {\r\n    try {\r\n      const requestData = {\r\n        apiKey: APIKEY,\r\n        modelName: 'Address',\r\n        calledMethod: 'searchSettlements',\r\n        methodProperties: {\r\n          Page: '1',\r\n          CityName: searchCityName,\r\n          Limit: '120',\r\n        },\r\n      };\r\n\r\n      const response = await fetch('https://api.novaposhta.ua/v2.0/json/', {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json, text/plain, */*',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        const addresses = data.data[0].Addresses;\r\n\r\n        setSearchCities(addresses);\r\n      } else {\r\n        setSearchCities([]);\r\n        throw new Error(data.errors[0]);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMassegeCity({\r\n        messege: 'Місто не знайдено! Перевірте правильність написання',\r\n        error: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchCityName.length === 0) {\r\n      setWarehouseSearchType('');\r\n      setWarehouses([]);\r\n      setSearchWarehouses('');\r\n      setMassegeWarehous({\r\n        messege: 'Виберіть місто для перегляду відділень',\r\n        error: true,\r\n      });\r\n      setMassegeCity({\r\n        messege: 'Місто не знайдено! Перевірте правильність написання',\r\n        error: true,\r\n      });\r\n    } else {\r\n      handleСityName();\r\n      setMassegeWarehous({\r\n        messege: 'Loading...',\r\n        error: false,\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchCityName]);\r\n\r\n  const handleSearchTextChange = throttle(e => {\r\n    const value = e.target.value;\r\n    setSearchCityName(value.trim());\r\n\r\n    if (value.length > 0) {\r\n      setDropdownCityVisible(true);\r\n    } else {\r\n      setDropdownCityVisible(false);\r\n    }\r\n  }, 300);\r\n\r\n  const handleWarehousesChange = async () => {\r\n    try {\r\n      const requestData = {\r\n        apiKey: APIKEY,\r\n        modelName: 'Address',\r\n        calledMethod: 'getWarehouses',\r\n        methodProperties: {\r\n          CityRef: warehouseSearchType,\r\n          Limit: '500',\r\n          TypeOfWarehouseRef: '841339c7-591a-42e2-8233-7a0a00f0ed6f',\r\n        },\r\n      };\r\n\r\n      if (searchWarehouses) {\r\n        requestData.methodProperties.WarehouseRef = searchWarehouses;\r\n      }\r\n\r\n      const response = await fetch(\r\n        'https://api.novaposhta.ua/v2.0/json/Address',\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            Accept: 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(requestData),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setWarehouses(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        'Помилка запиту до API Нової Пошти для населених пунктів',\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleCitySelect = (city, deliveryCity) => {\r\n    setDropdownCityVisible(false);\r\n    setSearchWarehouses('');\r\n    setSearchCityName(`${city}`);\r\n    setWarehouseSearchType(deliveryCity);\r\n    setValue('city', city);\r\n\r\n    if (deliveryCity && city) {\r\n      handleWarehousesChange();\r\n    }\r\n  };\r\n\r\n  const handleSearchTextChangeWarehose = throttle(e => {\r\n    const value = e.target.value;\r\n    setSearchWarehouses(value);\r\n    setDropdownWarehouseVisible(true);\r\n\r\n    if (searchCityName.length === 0 || value.length === 0) {\r\n      setDropdownWarehouseVisible(false);\r\n      setWarehouses([]);\r\n      setMassegeWarehous({\r\n        messege: 'Виберіть місто для перегляду відділень',\r\n        error: true,\r\n      });\r\n    }\r\n  }, 300);\r\n\r\n  const handleWarehouseSelect = warehouse => {\r\n    setSearchWarehouses(`${warehouse}`);\r\n    setDropdownWarehouseVisible(false);\r\n    setValue('warehouse', warehouse);\r\n  };\r\n  useEffect(() => {\r\n    if (warehouseSearchType) {\r\n      // handleСityName();\r\n      handleWarehousesChange();\r\n    } else if (searchCities.length === 0) {\r\n      setTimeout(() => {\r\n        setMassegeWarehous({\r\n          messege: 'Виберіть назву міста!',\r\n          error: true,\r\n        });\r\n      }, 2000);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchWarehouses, searchCities.length]);\r\n\r\n  // const handleFormSubmit = async e => {\r\n  //   e.preventDefault();\r\n\r\n  //   setIsSubmitting(true);\r\n  //   if (!searchCityName || !searchWarehouses) {\r\n  //     setPlaceholder(true);\r\n\r\n  //     setIsSubmitting(false);\r\n  //     return;\r\n  //   } else if (searchWarehouses !== nameWarehous) {\r\n  //     setPlaceholder(true);\r\n  //     setSearchWarehouses('');\r\n  //     setIsSubmitting(false);\r\n  //     return;\r\n  //   }\r\n  //   const dataToSendWarehouse = `${searchCityName}, ${searchWarehouses}`;\r\n  //   console.log(dataToSendWarehouse);\r\n\r\n  //   // setIsSubmitting(false);\r\n  // };\r\n  return (\r\n    <>\r\n      <WrapTitle>\r\n        <ElipsTitle>2</ElipsTitle>\r\n        <Title>Інформація про доставку</Title>\r\n      </WrapTitle>\r\n      <WrapRadio>\r\n        <ElipsRadio />\r\n        <NameRadio>Доставка Новою поштою</NameRadio>\r\n      </WrapRadio>\r\n      <div>\r\n        <WrapForm>\r\n          <WrapInput>\r\n            <LabelStyle htmlFor=\"city\">Оберіть місто доставки *</LabelStyle>\r\n            <InputStyle\r\n              type=\"text\"\r\n              id=\"city\"\r\n              name=\"city\"\r\n              {...register('city')}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Оберіть місто доставки\"\r\n              $error={errors['city']}\r\n              value={searchCityName}\r\n              onChange={handleSearchTextChange}\r\n              onClick={() => {\r\n                !searchCityName === '' && setDropdownCityVisible(true);\r\n              }}\r\n              onBlur={() => {\r\n                setTimeout(() => {\r\n                  setDropdownCityVisible(false);\r\n                }, 200);\r\n              }}\r\n            />\r\n            {dropdownCityVisible && (\r\n              <WrapList>\r\n                <List>\r\n                  {searchCities.length === 0 ? (\r\n                    <Item>\r\n                      <Message $error={massegeCity.error}>\r\n                        {massegeCity.messege}\r\n                      </Message>\r\n                    </Item>\r\n                  ) : (\r\n                    searchCities.map(searchCity => (\r\n                      <Item\r\n                        key={nanoid()}\r\n                        onClick={() => {\r\n                          handleCitySelect(\r\n                            searchCity.Present,\r\n                            searchCity.DeliveryCity\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text>{searchCity.Present},</Text>\r\n                      </Item>\r\n                    ))\r\n                  )}\r\n                </List>\r\n              </WrapList>\r\n            )}\r\n          </WrapInput>\r\n          <WrapInput>\r\n            <LabelStyle htmlFor=\"warehouse\">Оберіть відділення *</LabelStyle>\r\n            <InputStyle\r\n              type=\"text\"\r\n              id=\"warehouse\"\r\n              name=\"warehouse\"\r\n              {...register('warehouse')}\r\n              value={searchWarehouses}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Оберіть відділення\"\r\n              $error={errors['warehouse']}\r\n              onChange={handleSearchTextChangeWarehose}\r\n              onClick={() => {\r\n                setDropdownWarehouseVisible(true);\r\n              }}\r\n              onBlur={() => {\r\n                setTimeout(() => {\r\n                  setDropdownWarehouseVisible(false);\r\n                }, 200);\r\n              }}\r\n            />\r\n            {dropdownWarehouseVisible && (\r\n              <WrapList>\r\n                <List>\r\n                  {warehouses.length === 0 ? (\r\n                    <Item>\r\n                      <Message $error={massegeWarehous.error}>\r\n                        {massegeWarehous.messege}\r\n                      </Message>\r\n                    </Item>\r\n                  ) : (\r\n                    warehouses\r\n                      .filter(warehouse =>\r\n                        warehouse.Description.toLowerCase().includes(\r\n                          searchWarehouses.toLowerCase()\r\n                        )\r\n                      )\r\n                      .map(warehouse => (\r\n                        <Item\r\n                          key={nanoid()}\r\n                          onClick={() =>\r\n                            handleWarehouseSelect(warehouse.Description)\r\n                          }\r\n                        >\r\n                          <Text>{warehouse.Description}</Text>\r\n                        </Item>\r\n                      ))\r\n                  )}\r\n                </List>\r\n              </WrapList>\r\n            )}\r\n          </WrapInput>\r\n        </WrapForm>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { InputMask } from 'primereact/inputmask';\r\n\r\nexport const WrapInput = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 6px;\r\n  @media (min-width: 768px) {\r\n    gap: 10px;\r\n  }\r\n`;\r\nexport const WrapRadioInput = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  @media (min-width: 768px) {\r\n    gap: 8px;\r\n  }\r\n`;\r\nexport const WrapCheckboxInput = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 3px;\r\n  @media (min-width: 768px) {\r\n    gap: 6px;\r\n  }\r\n`;\r\nexport const LabelStyle = styled.label`\r\n  color: #000;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\n\r\nexport const InputStyle = styled.input`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 7.5px 16px;\r\n  border: 1px solid #000;\r\n  color: #000;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  border-color: ${p => p.$errors && 'red'};\r\n  &:focus {\r\n    outline: none;\r\n    border: 2px solid #000;\r\n  }\r\n  &::placeholder {\r\n    color: ${p => p.$errors && 'red'};\r\n  }\r\n  @media (min-width: 768px) {\r\n    max-width: 403px;\r\n    padding: 12px 16px;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const InputMaskStyle = styled(InputMask)`\r\nbox-sizing: border-box;\r\ndisplay: flex;\r\nwidth: 100%;\r\npadding: 8.5px 16px;\r\nborder: 1px solid #000;\r\ncolor: #000;\r\nfont-size: 14px;\r\nline-height: 140%;\r\nborder-color: ${p => p.$errors && 'red'};\r\n&:focus {\r\n  outline: none;\r\n  border: 2px solid #000;\r\n}\r\n&::placeholder {\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: ${p => p.$errors && 'red'};\r\n}\r\n@media (min-width: 768px) {\r\n  max-width: 403px;\r\n  padding: 13px 16px;\r\n  &::placeholder {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const RadioLabel = styled.label`\r\n  display: flex;\r\n  gap: 10px;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: ${p => p.$errors && 'red'};\r\n  @media (min-width: 768px) {\r\n    gap: 12px;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const CheckboxLabel = styled.label`\r\n  display: flex;\r\n  gap: 10px;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: #00000066;\r\n  color: ${p => p.$errors && 'red'};\r\n  @media (min-width: 768px) {\r\n    gap: 12px;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const ErrorMessage = styled.p`\r\n  color: red;\r\n  font-size: 12px;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n","import {\r\n  CheckboxLabel,\r\n  ErrorMessage,\r\n  InputMaskStyle,\r\n  InputStyle,\r\n  LabelStyle,\r\n  RadioLabel,\r\n  WrapCheckboxInput,\r\n  WrapInput,\r\n  WrapRadioInput,\r\n} from './OrderInput.styled';\r\n\r\nexport const OrderInput = ({\r\n  label,\r\n  type,\r\n  name,\r\n  register,\r\n  placeholder,\r\n  defaultChecked,\r\n  disabled,\r\n  errors,\r\n}) => {\r\n  const errorMessage = errors[name]?.message;\r\n\r\n  const showMatchesError = errors[name]?.type === 'matches';\r\n  return (\r\n    <>\r\n      {type === 'radio' ? (\r\n        <WrapRadioInput>\r\n          <RadioLabel htmlFor={name} $errors={errors[name]}>\r\n            <input\r\n              type={type}\r\n              id={name}\r\n              {...register(name)}\r\n              defaultChecked={defaultChecked}\r\n              disabled={disabled}\r\n            />\r\n            {label}\r\n          </RadioLabel>\r\n        </WrapRadioInput>\r\n      ) : type === 'checkbox' ? (\r\n        <WrapCheckboxInput>\r\n          <CheckboxLabel htmlFor={name} $errors={errors[name]}>\r\n            <input\r\n              type={type}\r\n              id={name}\r\n              {...register(name)}\r\n              defaultChecked={defaultChecked}\r\n              disabled={disabled}\r\n            />\r\n            {label}\r\n          </CheckboxLabel>\r\n        </WrapCheckboxInput>\r\n      ) : name === 'phoneNumber' ? (\r\n        <WrapInput>\r\n          <LabelStyle htmlFor={name}>{label}</LabelStyle>\r\n          <InputMaskStyle\r\n            {...register(name)}\r\n            mask=\"+38(099)999-99-99\"\r\n            id={name}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            autoComplete=\"true\"\r\n            $errors={errors[name]}\r\n            autoClear={false}\r\n          />\r\n        </WrapInput>\r\n      ) : (\r\n        <WrapInput>\r\n          <LabelStyle htmlFor={name}>{label}</LabelStyle>\r\n          <InputStyle\r\n            id={name}\r\n            {...register(name)}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            $errors={errors[name]}\r\n            autoComplete=\"true\"\r\n          ></InputStyle>\r\n          {showMatchesError && errorMessage && (\r\n            <ErrorMessage>{errorMessage}</ErrorMessage>\r\n          )}\r\n        </WrapInput>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const WrapTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 14px;\r\n  margin-bottom: 28px;\r\n  @media (min-width: 768px) {\r\n    gap: 24px;\r\n    margin-bottom: 37px;\r\n  }\r\n`;\r\nexport const RadioForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  &:not(:last-child) {\r\n    margin-bottom: 14px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    &:not(:last-child) {\r\n      margin-bottom: 20px;\r\n    }\r\n    gap: 8px;\r\n  }\r\n`;\r\n","import { OrderInput } from 'components/OrderInput/OrderInput';\r\n\r\nimport { RadioForm, WrapTitle } from './OrderPaymentForm.styled';\r\nimport { Title, ElipsTitle } from 'components/OrderForm/OrderForm.styled';\r\n\r\nexport const OrderPaymentForm = ({ register, errors }) => {\r\n  return (\r\n    <>\r\n      <WrapTitle>\r\n        <ElipsTitle>3</ElipsTitle>\r\n        <Title>Оплата</Title>\r\n      </WrapTitle>\r\n      <RadioForm>\r\n        <OrderInput\r\n          label={'Оплата за реквізитами'}\r\n          type=\"radio\"\r\n          name=\"payment online\"\r\n          register={register}\r\n          errors={errors}\r\n          disabled\r\n        />\r\n        <OrderInput\r\n          label={'Оплата при отриманні'}\r\n          type=\"radio\"\r\n          name=\"payment\"\r\n          register={register}\r\n          errors={errors}\r\n          defaultChecked\r\n        />\r\n      </RadioForm>\r\n      <RadioForm>\r\n        <OrderInput\r\n          label={\r\n            'Я погоджуюсь з договором оферти і політикою конфіденційності *'\r\n          }\r\n          type=\"checkbox\"\r\n          name=\"agreement\"\r\n          errors={errors}\r\n          register={register}\r\n        />\r\n        <OrderInput\r\n          label={'Зателефонуйте мені для уточнення деталей замовлення'}\r\n          type=\"checkbox\"\r\n          name=\"phone call\"\r\n          errors={errors}\r\n          register={register}\r\n        />\r\n      </RadioForm>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  @media (min-width: 768px) {\r\n    gap: 9px;\r\n  }\r\n`;\r\nexport const WrapTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 14px;\r\n  margin-bottom: 28px;\r\n  @media (min-width: 768px) {\r\n    gap: 24px;\r\n    margin-bottom: 37px;\r\n  }\r\n`;\r\n","import { OrderInput } from 'components/OrderInput/OrderInput';\r\n\r\nimport { Container, WrapTitle } from './OrderCustomerForm.styled';\r\nimport { Title, ElipsTitle } from 'components/OrderForm/OrderForm.styled';\r\n\r\nexport const OrderCustomerForm = ({ register, errors }) => {\r\n  return (\r\n    <>\r\n      <WrapTitle>\r\n        <ElipsTitle>1</ElipsTitle>\r\n        <Title>Особисті дані</Title>\r\n      </WrapTitle>\r\n      <Container>\r\n        <OrderInput\r\n          label={'Прізвище *'}\r\n          type=\"text\"\r\n          name=\"secondName\"\r\n          register={register}\r\n          placeholder={'Прізвище'}\r\n          errors={errors}\r\n        />\r\n        <OrderInput\r\n          label={'Ім’я *'}\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          register={register}\r\n          placeholder={'Ім’я'}\r\n          errors={errors}\r\n        />\r\n        <OrderInput\r\n          label={'Номер телефону *'}\r\n          name=\"phoneNumber\"\r\n          type=\"tel\"\r\n          register={register}\r\n          placeholder={'+38(0__)___-__-__'}\r\n          errors={errors}\r\n        />\r\n        <OrderInput\r\n          label={'E-Mail *'}\r\n          type=\"email\"\r\n          name=\"orderEmail\"\r\n          register={register}\r\n          placeholder={'E-mail'}\r\n          errors={errors}\r\n        />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { orderFormSchema } from 'utils/yupSchema';\r\nimport { placeAnOrder } from 'redux/order/operations';\r\nimport { selectOrderSuccess } from 'redux/order/selectors';\r\n\r\nimport { Delivery } from 'components/Delivery/Delivery';\r\nimport { OrderPaymentForm } from 'components/OrderPaymentForm/OrderPaymentForm';\r\nimport { OrderCustomerForm } from 'components/OrderCustomerForm/OrderCustomerForm';\r\n\r\nimport Sprite from '../../images/sprite.svg';\r\nimport {\r\n  OrderFormSection,\r\n  Wrapper,\r\n  OrderBtn,\r\n  Form,\r\n  SuccessMessage,\r\n  SuccessIcon,\r\n  SuccessText,\r\n} from './OrderForm.styled';\r\n\r\nexport const OrderForm = ({ sessionId, setFormStatus, formStatus }) => {\r\n  const dispatch = useDispatch();\r\n  const orderSuccessful = useSelector(selectOrderSuccess);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n    resolver: yupResolver(orderFormSchema),\r\n    defaultValues: {\r\n      agreement: false,\r\n      'payment online': false,\r\n    },\r\n  });\r\n\r\n  const onSubmitSubscription = async formData => {\r\n    try {\r\n      dispatch(\r\n        placeAnOrder({\r\n          sessionId: sessionId,\r\n          id: parseInt(uuidv4(), 16),\r\n          email: formData.orderEmail,\r\n          firstName: formData.firstName,\r\n          lastName: formData.secondName,\r\n          customerPhoneNumber: formData.phoneNumber,\r\n          address: formData.city + '' + formData.warehouse,\r\n        })\r\n      );\r\n      setFormStatus('success');\r\n      reset();\r\n    } catch (error) {\r\n      console.error(error);\r\n      setFormStatus('error');\r\n      setTimeout(() => {\r\n        setFormStatus(null);\r\n      }, 5000);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <OrderFormSection>\r\n      <Wrapper>\r\n        {formStatus === 'success' ? (\r\n          <>\r\n            <SuccessIcon>\r\n              <use href={`${Sprite}#icon-success-order`}></use>\r\n            </SuccessIcon>\r\n            <SuccessMessage>\r\n              Ваше замовлення №{orderSuccessful?.id} оформлено\r\n            </SuccessMessage>\r\n            <SuccessText>\r\n              Очікуйте лист з деталями замовлення на вашу електронну адресу.\r\n            </SuccessText>\r\n            <SuccessText>Дякуємо, що обраєте Zatyshna.</SuccessText>\r\n          </>\r\n        ) : formStatus === 'error' ? (\r\n          <SuccessMessage>\r\n            Вибачте, наразі неможливо оформити замовлення.\r\n          </SuccessMessage>\r\n        ) : (\r\n          <Form onSubmit={handleSubmit(onSubmitSubscription)}>\r\n            <div>\r\n              <OrderCustomerForm register={register} errors={errors} />\r\n            </div>\r\n            <div>\r\n              <Delivery\r\n                register={register}\r\n                setValue={setValue}\r\n                errors={errors}\r\n                formStatus={formStatus}\r\n              />\r\n            </div>\r\n            <div>\r\n              <OrderPaymentForm register={register} errors={errors} />\r\n            </div>\r\n            <OrderBtn\r\n              type=\"submit\"\r\n              onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\r\n            >\r\n              Оформити замовлення\r\n            </OrderBtn>\r\n          </Form>\r\n        )}\r\n      </Wrapper>\r\n    </OrderFormSection>\r\n  );\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n  width: 100%;\r\n  padding: 0 0 36px;\r\n  @media (min-width: 768px) {\r\n    padding: 0 0 38px;\r\n  }\r\n`;\r\n\r\nexport const NavWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  gap: 18px;\r\n  padding: 105px 28px 41px;\r\n  margin: 0;\r\n  @media (min-width: 768px) {\r\n    gap: 24px;\r\n    max-width: 1360px;\r\n    padding: 155px 40px 80px;\r\n  }\r\n`;\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 28px;\r\n  padding-right: 28px;\r\n  margin: 0 auto;\r\n  @media (min-width: 768px) {\r\n    max-width: 1360px;\r\n    padding-left: 40px;\r\n    padding-right: 40px;\r\n  }\r\n`;\r\nexport const Title = styled.h2`\r\n  display: none;\r\n  @media (min-width: 768px) {\r\n    display: block;\r\n    font-family: Gill Sans;\r\n    font-size: 32px;\r\n    font-weight: 400;\r\n    line-height: 45px;\r\n    margin-bottom: 41px;\r\n  }\r\n`;\r\nexport const LinkTo = styled(Link)`\r\n  font-family: Gill Sans;\r\n  font-size: 18px;\r\n  line-height: 25px;\r\n  color: #000000;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 22px;\r\n    line-height: 29px;\r\n  }\r\n`;\r\nexport const OrderWrapper = styled.div`\r\n  max-height: 234px;\r\n  overflow: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 9px;\r\n  @media (min-width: 768px) {\r\n    gap: 56px;\r\n    max-height: 472px;\r\n  }\r\n\r\n  /* Webkit (Chrome, Safari) scrollbar styling */\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    @media (min-width: 768px) {\r\n      width: 12px;\r\n    }\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: #888;\r\n    border-radius: 6px;\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    background-color: #f1f1f1;\r\n  }\r\n\r\n  /* Firefox scrollbar styling */\r\n  scrollbar-width: thin;\r\n  scrollbar-color: #888 #f1f1f1;\r\n\r\n  /* IE/Edge scrollbar styling */\r\n  -ms-overflow-style: none;\r\n  &::-ms-scrollbar-thumb {\r\n    background-color: #888;\r\n  }\r\n  &::-ms-scrollbar-track {\r\n    background-color: #f1f1f1;\r\n  }\r\n`;\r\nexport const OrderResultSection = styled.section`\r\n  padding: 14px 0 29px;\r\n  width: 100%;\r\n  background: #f2f2f2;\r\n  @media (min-width: 768px) {\r\n    padding: 38px 0;\r\n    background: transparent;\r\n    border-top: 1px solid #acacac;\r\n    border-bottom: 1px solid #acacac;\r\n  }\r\n`;\r\nexport const OrderResultTitle = styled.h3`\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  line-height: 25px;\r\n  margin-bottom: 7px;\r\n  @media (min-width: 768px) {\r\n    margin: 0;\r\n    font-size: 32px;\r\n    line-height: 45px;\r\n    color: #030516;\r\n  }\r\n`;\r\nexport const OrderResultDeliveryFirst = styled.p`\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n  color: #00000066;\r\n  width: 64px;\r\n  @media (min-width: 768px) {\r\n    color: #030516;\r\n    width: auto;\r\n  }\r\n`;\r\nexport const OrderResultDeliverySec = styled.p`\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n  color: #00000066;\r\n  width: 87px;\r\n  text-align: end;\r\n  @media (min-width: 768px) {\r\n    color: #030516;\r\n    width: auto;\r\n  }\r\n`;\r\nexport const OrderResultList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n  @media (min-width: 768px) {\r\n    gap: 6px;\r\n  }\r\n`;\r\nexport const OrderResultListItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  &:nth-child(2) {\r\n    margin-bottom: 6px;\r\n  }\r\n`;\r\nexport const OrderResultTotal = styled.p`\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 25px;\r\n  }\r\n`;\r\nexport const OrderResultDestTotal = styled.p`\r\n  @media (min-width: 768px) {\r\n    display: block;\r\n    font-family: Inter;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 29px;\r\n  }\r\n`;\r\n","import axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useMemo } from 'react';\r\nimport { useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\n\r\nimport { useMedia } from 'hooks/useMedia';\r\nimport { getOrder } from 'redux/order/operations';\r\nimport { selectOrder, selectOrderItems } from 'redux/order/selectors';\r\n\r\nimport { OrderItem } from 'components/OrderItem/OrderItem';\r\nimport { OrderForm } from 'components/OrderForm/OrderForm';\r\n\r\nimport {\r\n  LinkTo,\r\n  NavWrapper,\r\n  OrderWrapper,\r\n  Section,\r\n  Wrapper,\r\n  Title,\r\n  OrderResultSection,\r\n  OrderResultTitle,\r\n  OrderResultDeliveryFirst,\r\n  OrderResultDeliverySec,\r\n  OrderResultList,\r\n  OrderResultListItem,\r\n  OrderResultDestTotal,\r\n  OrderResultTotal,\r\n} from './Order.styled';\r\nimport { formatPrice } from 'utils/formatPrice';\r\n\r\nexport const Order = () => {\r\n  const dispatch = useDispatch();\r\n  const { state } = useLocation();\r\n  const { isMobileScreen } = useMedia();\r\n  const [orderSuccess, setOrderSuccess] = useState(null);\r\n  const [formStatus, setFormStatus] = useState(null);\r\n  const [productAvailableQuantity, setProductAvailableQuantity] = useState({});\r\n\r\n  const order = useSelector(selectOrder) || [];\r\n  const products = useSelector(selectOrderItems);\r\n  const memoizedProducts = useMemo(() => products || [], [products]);\r\n\r\n  const { totalAmount, currencyCode, totalQuantity } = order;\r\n  const sessionId = state ? state?.sessionId : null;\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrder(sessionId));\r\n  }, [dispatch, sessionId]);\r\n\r\n  useEffect(() => {\r\n    const fetchProductQuantityForItem = async productId => {\r\n      try {\r\n        const productResponse = await axios.get(`/products/${productId}`);\r\n        const cartItem = memoizedProducts.find(\r\n          item => item.productId === productId\r\n        );\r\n        if (cartItem) {\r\n          const matchingSku = productResponse.data.skuSet.find(\r\n            skuSet => skuSet.id === cartItem.sku.id\r\n          );\r\n          if (matchingSku) {\r\n            return {\r\n              productId,\r\n              availableQuantity: matchingSku.availableQuantity,\r\n            };\r\n          } else {\r\n            return {\r\n              productId,\r\n              availableQuantity: 0,\r\n            };\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    const fetchProductQuantity = async () => {\r\n      try {\r\n        if (memoizedProducts) {\r\n          const productPromises = memoizedProducts.map(async item => {\r\n            return fetchProductQuantityForItem(item.productId);\r\n          });\r\n\r\n          const productArray = await Promise.all(productPromises);\r\n          const productQuantity = productArray.reduce((map, product) => {\r\n            map[product.productId] = product.availableQuantity;\r\n            return map;\r\n          }, {});\r\n\r\n          setProductAvailableQuantity(productQuantity);\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchProductQuantity();\r\n  }, [memoizedProducts, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {}\r\n      <NavWrapper>\r\n        <LinkTo to={'/'}>Головна</LinkTo>\r\n        {!isMobileScreen ? (\r\n          <>\r\n            <span>|</span>\r\n            <LinkTo to={'/cart'}>Кошик</LinkTo>\r\n            <span>|</span>\r\n            <LinkTo to={'/order'}>Оформлення замовлення</LinkTo>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <span>|</span>\r\n            <LinkTo to={'/order'}>Оформлення замовлення</LinkTo>\r\n          </>\r\n        )}\r\n      </NavWrapper>\r\n      {formStatus === 'success' ? (\r\n        <></>\r\n      ) : (\r\n        <>\r\n          <Section>\r\n            <Wrapper>\r\n              <Title>Ваше замовлення</Title>\r\n              <OrderWrapper>\r\n                {memoizedProducts.length === 0 ? (\r\n                  <p>Замовлення порожнє</p>\r\n                ) : (\r\n                  memoizedProducts.map(item => (\r\n                    <OrderItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      availableQuantity={\r\n                        productAvailableQuantity[item.productId]\r\n                      }\r\n                      setOrderSuccess={setOrderSuccess}\r\n                    />\r\n                  ))\r\n                )}\r\n              </OrderWrapper>\r\n            </Wrapper>\r\n          </Section>\r\n          <OrderResultSection>\r\n            <Wrapper>\r\n              {memoizedProducts.length === 0 || orderSuccess === false ? (\r\n                <OrderResultTitle style={{ textAlign: 'center' }}>\r\n                  Наразі неможливо оформити замовлення\r\n                </OrderResultTitle>\r\n              ) : isMobileScreen ? (\r\n                <>\r\n                  <OrderResultTitle>Всього</OrderResultTitle>\r\n                  <OrderResultList>\r\n                    <OrderResultListItem>\r\n                      <OrderResultTotal>\r\n                        {totalQuantity} товари(-ів) на суму\r\n                      </OrderResultTotal>\r\n                      <OrderResultTotal>\r\n                        {formatPrice(totalAmount)} {currencyCode}\r\n                      </OrderResultTotal>\r\n                    </OrderResultListItem>\r\n                    <OrderResultListItem>\r\n                      <OrderResultDeliveryFirst>\r\n                        Вартість доставки\r\n                      </OrderResultDeliveryFirst>\r\n                      <OrderResultDeliverySec>\r\n                        За тарифами перевізника\r\n                      </OrderResultDeliverySec>\r\n                    </OrderResultListItem>\r\n                  </OrderResultList>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <OrderResultList>\r\n                    <OrderResultListItem>\r\n                      <OrderResultTotal>\r\n                        {totalQuantity} товари(-ів) на суму\r\n                      </OrderResultTotal>\r\n                      <OrderResultTotal>\r\n                        {formatPrice(totalAmount)} {currencyCode}\r\n                      </OrderResultTotal>\r\n                    </OrderResultListItem>\r\n                    <OrderResultListItem>\r\n                      <OrderResultDeliveryFirst>\r\n                        Вартість доставки\r\n                      </OrderResultDeliveryFirst>\r\n                      <OrderResultDeliverySec>\r\n                        За тарифами перевізника\r\n                      </OrderResultDeliverySec>\r\n                    </OrderResultListItem>\r\n                    <OrderResultListItem>\r\n                      <OrderResultTitle>Разом:</OrderResultTitle>\r\n                      <OrderResultDestTotal>\r\n                        {formatPrice(totalAmount)} {currencyCode}\r\n                      </OrderResultDestTotal>\r\n                    </OrderResultListItem>\r\n                  </OrderResultList>\r\n                </>\r\n              )}\r\n            </Wrapper>\r\n          </OrderResultSection>\r\n        </>\r\n      )}\r\n      {memoizedProducts.length === 0 || orderSuccess === false ? (\r\n        <></>\r\n      ) : (\r\n        <OrderForm\r\n          sessionId={sessionId}\r\n          orderSuccess={orderSuccess}\r\n          setFormStatus={setFormStatus}\r\n          formStatus={formStatus}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { Order } from 'components/Order/Order';\r\n\r\nconst OrderPage = () => {\r\n  return (\r\n    <main>\r\n      <Order />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","import * as Yup from 'yup';\r\n\r\nexport const emailSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .required('Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .min(6, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .max(63, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .matches(\r\n      /^[a-zA-Z0-9_][a-zA-Z0-9_.-]*@[a-zA-Z0-9.-]+[a-zA-Z0-9-]*\\.[a-zA-Z]{2,4}$/,\r\n      'Будь ласка, введіть дійсну адресу електронної пошти.'\r\n    ),\r\n});\r\n\r\nexport const formSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .trim()\r\n    .required('Поле обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(70, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^(?!.*(\\s-|-\\s)|.*--|.*——|.*––|.*–\\s|.*\\s–|.*—\\s|.*\\s—)[а-яА-Яa-zA-Z\\s'’\\-–—ЇїІіЄєҐґ]*$/,\r\n      'Невірне імʼя'\r\n    ),\r\n  email: Yup.string()\r\n    .required('Поле обовʼязкове до заповнення')\r\n    .min(6, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .max(63, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .matches(\r\n      /^[a-zA-Z0-9_][a-zA-Z0-9_.-]*@[a-zA-Z0-9.-]+[a-zA-Z0-9-]*\\.[a-zA-Z]{2,4}$/,\r\n      'Будь ласка, введіть дійсну адресу електронної пошти.'\r\n    ),\r\n  message: Yup.string()\r\n    .trim()\r\n    .required('Поле обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(1000, 'Перевищена максимальна кількість'),\r\n});\r\n\r\nexport const orderFormSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .trim()\r\n    .required('Поле імʼя обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(70, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^(?!.*(\\s-|-\\s)|.*--|.*——|.*––|.*–\\s|.*\\s–|.*—\\s|.*\\s—)[а-яА-Яa-zA-Z\\s'’\\-–—ЇїІіЄєҐґ]*$/,\r\n      'Поле приймає тільки кирилицю та латиницю.'\r\n    ),\r\n  secondName: Yup.string()\r\n    .trim()\r\n    .required('Поле імʼя обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(70, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^(?!.*(\\s-|-\\s)|.*--|.*——|.*––|.*–\\s|.*\\s–|.*—\\s|.*\\s—)[а-яА-Яa-zA-Z\\s'’\\-–—ЇїІіЄєҐґ]*$/,\r\n      'Поле приймає тільки кирилицю та латиницю.'\r\n    ),\r\n  orderEmail: Yup.string()\r\n    .required('Поле пошта обовʼязкове до заповнення')\r\n    .min(6, 'Поле має містити як мінімум 6 символів')\r\n    .max(63, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^[a-zA-Z0-9_][a-zA-Z0-9_.-]*@[a-zA-Z0-9.-]+[a-zA-Z0-9-]*\\.[a-zA-Z]{2,4}$/,\r\n      'Будь ласка, введіть дійсну адресу електронної пошти.'\r\n    ),\r\n  phoneNumber: Yup.string()\r\n    .trim()\r\n    .required('Поле телефону обовʼязкове до заповнення')\r\n    .min(10, 'Поле має містити як мінімум 10 символів')\r\n    .max(17, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^\\+\\d{2}\\(\\d{3}\\)\\d{3}-\\d{2}-\\d{2}$/,\r\n      'Будь ласка, введіть дійсний номер телефону.'\r\n    ),\r\n  city: Yup.string().trim().required('Поле обовʼязкове до заповнення'),\r\n  warehouse: Yup.string().trim().required('Поле обовʼязкове до заповнення'),\r\n  agreement: Yup.boolean().oneOf([true], 'Поле обовʼязкове'),\r\n});\r\n"],"names":["selectOrderSuccess","state","_state$order","order","orderSuccessful","selectOrder","_state$order2","selectOrderItems","_state$order$order","items","ItemWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","OrderImage","img","_templateObject3","OrderContent","_templateObject4","OrderContentWrapper","_templateObject5","OrderTitle","h3","_templateObject6","OrderDescription","_templateObject7","OrderText","p","_templateObject8","OrderPrice","_templateObject9","OrderColor","_templateObject10","$color","OrderError","_templateObject11","OrderErrorText","_templateObject12","OrderItem","_ref","item","setOrderSuccess","availableQuantity","isMobileScreen","useMedia","photoUrl","productTitle","sku","amount","currencyCode","quantity","color","characteristics","name","colorhex","value","size","useEffect","_jsx","_Fragment","children","_jsxs","src","concat","noImage","slice","formatPrice","WrapTitle","WrapRadio","ElipsRadio","NameRadio","WrapForm","WrapInput","LabelStyle","label","InputStyle","input","$error","WrapList","List","ul","Item","li","Text","Message","_templateObject13","OrderFormSection","section","Wrapper","Title","ElipsTitle","Form","form","OrderBtn","button","SuccessMessage","SuccessIcon","svg","SuccessText","APIKEY","Delivery","register","setValue","errors","formStatus","_useState","useState","_useState2","_slicedToArray","searchCityName","setSearchCityName","_useState3","_useState4","searchCities","setSearchCities","_useState5","_useState6","dropdownCityVisible","setDropdownCityVisible","_useState7","_useState8","dropdownWarehouseVisible","setDropdownWarehouseVisible","_useState9","_useState10","searchWarehouses","setSearchWarehouses","_useState11","_useState12","warehouseSearchType","setWarehouseSearchType","_useState13","_useState14","warehouses","setWarehouses","_useState15","messege","error","_useState16","massegeCity","setMassegeCity","_useState17","_useState18","massegeWarehous","setMassegeWarehous","handleСityName","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestData","response","data","addresses","wrap","_context","prev","next","apiKey","modelName","calledMethod","methodProperties","Page","CityName","Limit","fetch","method","headers","Accept","body","JSON","stringify","sent","ok","Error","status","json","success","Addresses","t0","console","stop","apply","arguments","length","handleSearchTextChange","throttle","e","target","trim","handleWarehousesChange","_ref3","_callee2","_context2","CityRef","TypeOfWarehouseRef","WarehouseRef","handleSearchTextChangeWarehose","setTimeout","htmlFor","_objectSpread","type","id","autoComplete","placeholder","onChange","onClick","onBlur","map","searchCity","city","deliveryCity","Present","DeliveryCity","nanoid","filter","warehouse","Description","toLowerCase","includes","handleWarehouseSelect","WrapRadioInput","WrapCheckboxInput","$errors","InputMaskStyle","InputMask","RadioLabel","CheckboxLabel","ErrorMessage","OrderInput","_errors$name","_errors$name2","defaultChecked","disabled","errorMessage","message","showMatchesError","mask","autoClear","RadioForm","OrderPaymentForm","OrderCustomerForm","OrderForm","sessionId","setFormStatus","dispatch","useDispatch","useSelector","_useForm","useForm","mode","resolver","yupResolver","orderFormSchema","defaultValues","agreement","handleSubmit","formState","reset","onSubmitSubscription","formData","placeAnOrder","parseInt","uuidv4","email","orderEmail","firstName","lastName","secondName","customerPhoneNumber","phoneNumber","address","_x","href","Sprite","onSubmit","window","scrollTo","top","behavior","Section","NavWrapper","h2","LinkTo","Link","OrderWrapper","OrderResultSection","OrderResultTitle","OrderResultDeliveryFirst","OrderResultDeliverySec","OrderResultList","OrderResultListItem","OrderResultTotal","OrderResultDestTotal","_templateObject14","Order","useLocation","orderSuccess","productAvailableQuantity","setProductAvailableQuantity","products","memoizedProducts","useMemo","totalAmount","totalQuantity","getOrder","fetchProductQuantityForItem","productId","productResponse","cartItem","matchingSku","axios","get","find","skuSet","abrupt","fetchProductQuantity","_callee3","productPromises","productArray","productQuantity","_context3","_x2","Promise","all","reduce","product","to","style","textAlign","emailSchema","Yup","shape","required","min","max","matches","formSchema","oneOf"],"sourceRoot":""}