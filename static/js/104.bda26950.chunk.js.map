{"version":3,"file":"static/js/104.bda26950.chunk.js","mappings":"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","sources":["components/Order/Order.styled.jsx","components/OrderItem/OrderItem.styled.jsx","components/OrderItem/OrderItem.jsx","components/OrderForm/OrderForm.styled.jsx","components/Delivery/Delivery.styled.jsx","components/Delivery/Delivery.jsx","components/OrderPaymentForm/OrderPaymentForm.styled.jsx","components/OrderInput/OrderInput.styled.jsx","components/OrderInput/OrderInput.jsx","components/OrderPaymentForm/OrderPaymentForm.jsx","components/OrderCustomerForm/OrderCustomerForm.styled.jsx","components/OrderCustomerForm/OrderCustomerForm.jsx","components/OrderForm/OrderForm.jsx","components/Order/Order.jsx","pages/OrderPage/OrderPage.jsx","utils/yupSchema.js"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n  width: 100%;\r\n  padding: 0 0 36px;\r\n  @media (min-width: 768px) {\r\n    padding: 0 0 38px;\r\n  }\r\n`;\r\n\r\nexport const NavWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  gap: 18px;\r\n  padding: 105px 28px 41px;\r\n  margin: 0;\r\n  @media (min-width: 768px) {\r\n    gap: 24px;\r\n    max-width: 1360px;\r\n    padding: 155px 40px 80px;\r\n  }\r\n`;\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 28px;\r\n  padding-right: 28px;\r\n  margin: 0 auto;\r\n  @media (min-width: 768px) {\r\n    max-width: 1360px;\r\n    padding-left: 40px;\r\n    padding-right: 40px;\r\n  }\r\n`;\r\nexport const Title = styled.h2`\r\n  display: none;\r\n  @media (min-width: 768px) {\r\n    display: block;\r\n    font-family: Gill Sans;\r\n    font-size: 32px;\r\n    font-weight: 400;\r\n    line-height: 45px;\r\n    margin-bottom: 41px;\r\n  }\r\n`;\r\nexport const LinkTo = styled(Link)`\r\n  font-family: Gill Sans;\r\n  font-size: 18px;\r\n  line-height: 25px;\r\n  color: #000000;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 22px;\r\n    line-height: 29px;\r\n  }\r\n`;\r\nexport const OrderWrapper = styled.div`\r\n  max-height: 234px;\r\n  overflow: scroll;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 9px;\r\n  @media (min-width: 768px) {\r\n    gap: 56px;\r\n    max-height: 472px;\r\n  }\r\n`;\r\nexport const OrderResultSection = styled.section`\r\n  padding: 14px 0 29px;\r\n  width: 100%;\r\n  background: #f2f2f2;\r\n  @media (min-width: 768px) {\r\n    padding: 38px 0;\r\n    background: transparent;\r\n    border-top: 1px solid #acacac;\r\n    border-bottom: 1px solid #acacac;\r\n  }\r\n`;\r\nexport const OrderResultTitle = styled.h3`\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  line-height: 25px;\r\n  margin-bottom: 7px;\r\n  @media (min-width: 768px) {\r\n    margin: 0;\r\n    font-size: 32px;\r\n    line-height: 45px;\r\n    color: #030516;\r\n  }\r\n`;\r\nexport const OrderResultDeliveryFirst = styled.p`\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n  color: #00000066;\r\n  width: 64px;\r\n  @media (min-width: 768px) {\r\n    color: #030516;\r\n    width: auto;\r\n  }\r\n`;\r\nexport const OrderResultDeliverySec = styled.p`\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n  color: #00000066;\r\n  width: 87px;\r\n  text-align: end;\r\n  @media (min-width: 768px) {\r\n    color: #030516;\r\n    width: auto;\r\n  }\r\n`;\r\nexport const OrderResultList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n  @media (min-width: 768px) {\r\n    gap: 6px;\r\n  }\r\n`;\r\nexport const OrderResultListItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  &:nth-child(2) {\r\n    margin-bottom: 6px;\r\n  }\r\n`;\r\nexport const OrderResultTotal = styled.p`\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 25px;\r\n  }\r\n`;\r\nexport const OrderResultDestTotal = styled.p`\r\n  @media (min-width: 768px) {\r\n    display: block;\r\n    font-family: Inter;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 29px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const ItemWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  &:not(:last-child) {\r\n    padding-bottom: 21px;\r\n    border-bottom: 1px solid #e1e1e1;\r\n  }\r\n  @media (min-width: 768px) {\r\n    padding: 0;\r\n    &:not(:last-child) {\r\n      border: none;\r\n    }\r\n  }\r\n`;\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nexport const OrderImage = styled.img`\r\n  width: 44px;\r\n  max-height: 50px;\r\n  margin-right: 12px;\r\n  @media (min-width: 768px) {\r\n    width: 161px;\r\n    max-height: 208px;\r\n    margin-right: 27px;\r\n  }\r\n`;\r\nexport const OrderContent = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 128px;\r\n  @media (min-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\nexport const OrderContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media (min-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\nexport const OrderTitle = styled.h3`\r\n  font-family: Gill Sans;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  line-height: 18px;\r\n  height: max-content;\r\n  @media (min-width: 768px) {\r\n    font-family: Gill Sans;\r\n    font-size: 32px;\r\n    line-height: 45px;\r\n  }\r\n`;\r\nexport const OrderDescription = styled.div`\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 14px;\r\n  @media (min-width: 768px) {\r\n    display: flex;\r\n    gap: 10px;\r\n    font-size: 18px;\r\n    line-height: 25px;\r\n    align-items: center;\r\n  }\r\n`;\r\nexport const OrderText = styled.p`\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 25px;\r\n    color: #4c4b4b;\r\n  }\r\n`;\r\nexport const OrderPrice = styled.p`\r\n  font-family: Inter;\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 23px;\r\n  }\r\n`;\r\nexport const OrderColor = styled.div`\r\n  width: 18px;\r\n  height: 18px;\r\n  border-radius: 50%;\r\n  background: #d9d9d9;\r\n  border: 1px solid #d9d9d9;\r\n  background: ${p => p.$color && p.$color};\r\n`;\r\nexport const OrderError = styled.div`\r\n  background: rgba(236, 236, 236, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nexport const OrderErrorText = styled.p`\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 25px;\r\n  }\r\n`;\r\n","import {\r\n  ItemWrapper,\r\n  Container,\r\n  OrderColor,\r\n  OrderContent,\r\n  OrderContentWrapper,\r\n  OrderDescription,\r\n  OrderImage,\r\n  OrderPrice,\r\n  OrderText,\r\n  OrderTitle,\r\n  OrderError,\r\n  OrderErrorText,\r\n} from './OrderItem.styled';\r\nimport noImage from '../../images/no-image.jpg';\r\nimport { useMedia } from 'hooks/useMedia';\r\nimport { useEffect } from 'react';\r\n\r\nexport const OrderItem = ({ item, setOrderSuccess }) => {\r\n  const { photoUrl, productTitle, sku, amount, currencyCode, quantity } = item;\r\n  const { isMobileScreen } = useMedia();\r\n  const color = sku.characteristics[1].name;\r\n  const colorhex = sku.characteristics[1].value;\r\n  const size = sku.characteristics[0].name;\r\n  const { availableQuantity } = sku;\r\n\r\n  useEffect(() => {\r\n    if (quantity > availableQuantity) {\r\n      setOrderSuccess(false);\r\n    } else {\r\n      setOrderSuccess(true);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ItemWrapper>\r\n        {quantity > availableQuantity && (\r\n          <OrderError>\r\n            <OrderErrorText>Вибачте, цей товар недоступний</OrderErrorText>\r\n          </OrderError>\r\n        )}\r\n        <Container>\r\n          <OrderImage src={`${photoUrl ? photoUrl : noImage}`}></OrderImage>\r\n          <OrderContent>\r\n            {isMobileScreen ? (\r\n              <>\r\n                <OrderContentWrapper>\r\n                  <OrderTitle>{productTitle.slice(0, 5)}...</OrderTitle>\r\n                  <OrderText>{color}</OrderText>\r\n                  <OrderText>{size}</OrderText>\r\n                </OrderContentWrapper>\r\n                <OrderDescription>x {quantity}</OrderDescription>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <OrderContentWrapper>\r\n                  <OrderTitle>{productTitle.slice(0, 5)}...</OrderTitle>\r\n                  <OrderDescription>\r\n                    Колір:<OrderColor $color={colorhex}></OrderColor>\r\n                  </OrderDescription>\r\n                  <OrderDescription>\r\n                    Розмір:\r\n                    <OrderText>{size}</OrderText>\r\n                  </OrderDescription>\r\n                  <OrderDescription>\r\n                    Кількість:<OrderText>{quantity}</OrderText>\r\n                  </OrderDescription>\r\n                </OrderContentWrapper>\r\n              </>\r\n            )}\r\n          </OrderContent>\r\n        </Container>\r\n        <OrderPrice>\r\n          {amount} {currencyCode}\r\n        </OrderPrice>\r\n      </ItemWrapper>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const OrderFormSection = styled.section`\r\n  width: 100%;\r\n  padding: 39px 0 61px;\r\n  @media (min-width: 768px) {\r\n    padding: 56px 0 430px;\r\n  }\r\n`;\r\nexport const Wrapper = styled.div`\r\n  padding-left: 28px;\r\n  padding-right: 28px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (min-width: 768px) {\r\n    max-width: 1360px;\r\n    padding-left: 40px;\r\n    padding-right: 40px;\r\n  }\r\n`;\r\nexport const Title = styled.h3`\r\n  color: #000;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  line-height: 18px;\r\n  text-transform: uppercase;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: 21px;\r\n  }\r\n`;\r\nexport const ElipsTitle = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 26px;\r\n  height: 26px;\r\n  background: #d9d9d9;\r\n  border-radius: 13px;\r\n  border: none;\r\n  color: #000;\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 16px;\r\n    font-size: 18px;\r\n    line-height: 23px;\r\n  }\r\n`;\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 29px;\r\n  @media (min-width: 768px) {\r\n    gap: 39px;\r\n  }\r\n`;\r\nexport const OrderBtn = styled.button`\r\n  max-width: 189px;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  line-height: 21px;\r\n  padding: 8.5px 0;\r\n  background: #000000;\r\n  color: #ffffff;\r\n  border: none;\r\n  @media (min-width: 768px) {\r\n    max-width: 362px;\r\n    padding: 10px 0;\r\n    font-size: 26px;\r\n    line-height: 36px;\r\n  }\r\n`;\r\nexport const SuccessMessage = styled.div`\r\n  width: 100%;\r\n  max-width: 898px;\r\n  padding: 13px 0;\r\n  background: #000000;\r\n  font-size: 16px;\r\n  line-height: 18px;\r\n  color: #ffffff;\r\n  text-align: center;\r\n  margin-bottom: 18px;\r\n  @media (min-width: 768px) {\r\n    padding: 27.5px 0;\r\n    font-size: 28px;\r\n    line-height: 32px;\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\nexport const SuccessIcon = styled.svg`\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-bottom: 18px;\r\n  @media (min-width: 768px) {\r\n    width: 64px;\r\n    height: 64px;\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\nexport const SuccessText = styled.p`\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  text-align: center;\r\n  &:first-of-type {\r\n    margin-bottom: 24px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    font-size: 24px;\r\n    line-height: 31px;\r\n    &:first-of-type {\r\n      margin-bottom: 0px;\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const WrapTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 14px;\r\n  margin-bottom: 28px;\r\n  @media (min-width: 768px) {\r\n    gap: 24px;\r\n    margin-bottom: 37px;\r\n  }\r\n`;\r\n\r\nexport const WrapRadio = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-bottom: 16px;\r\n  @media (min-width: 768px) {\r\n    gap: 11px;\r\n    margin-bottom: 25px;\r\n  }\r\n`;\r\n\r\nexport const ElipsRadio = styled.div`\r\n  width: 12px;\r\n  height: 12px;\r\n  background: #d9d9d9;\r\n  border-radius: 6px;\r\n  border: none;\r\n`;\r\nexport const NameRadio = styled.p`\r\n  color: #000;\r\n  text-align: center;\r\n  font-family: Gill Sans;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 140%;\r\n  @media (min-width: 768px) {\r\n    line-height: normal;\r\n  }\r\n`;\r\n\r\nexport const WrapForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  @media (min-width: 768px) {\r\n    gap: 14px;\r\n  }\r\n`;\r\n\r\nexport const WrapInput = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const LabelStyle = styled.label`\r\n  color: #000;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  margin-bottom: 6px;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\n\r\nexport const InputStyle = styled.input`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 8.5px 16px;\r\n  border: 1px solid #000;\r\n  color: #000;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  border-color: ${p => p.$error && 'red'};\r\n  &:focus {\r\n    outline: none;\r\n    border: 2px solid #000;\r\n  }\r\n  &::placeholder {\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    color: ${p => p.$error && 'red'};\r\n  }\r\n  @media (min-width: 768px) {\r\n    max-width: 403px;\r\n    padding: 13px 16px;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const WrapList = styled.div`\r\n  position: absolute;\r\n  top: 62px;\r\n  background: #fff;\r\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 7px 10px 3px;\r\n  z-index: 1;\r\n  @media (min-width: 768px) {\r\n    top: 72px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  width: 304px;\r\n  padding: 10px 16px;\r\n  min-height: 100px;\r\n  max-height: 200px;\r\n  gap: 10px;\r\n  border: 1px solid #000;\r\n  @media (min-width: 768px) {\r\n    width: 403px;\r\n  }\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  font-family: Gill Sans;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 140%;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: normal;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-family: Gill Sans;\r\n  font-size: 14px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 140%;\r\n  cursor: pointer;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: normal;\r\n  }\r\n`;\r\nexport const Message = styled.p`\r\n  color: ${p => (p.$error ? 'red' : 'black')};\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { throttle } from 'lodash';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\nimport {\r\n  ElipsRadio,\r\n  InputStyle,\r\n  Item,\r\n  LabelStyle,\r\n  List,\r\n  Message,\r\n  NameRadio,\r\n  WrapForm,\r\n  WrapInput,\r\n  WrapList,\r\n  WrapRadio,\r\n  WrapTitle,\r\n  Text,\r\n} from './Delivery.styled';\r\nimport { Title, ElipsTitle } from 'components/OrderForm/OrderForm.styled';\r\n\r\nconst APIKEY = '4cfd344a4e40e9fab712995825eeaef4';\r\n\r\nexport const Delivery = ({ register, setValue, errors, formStatus }) => {\r\n  const [searchCityName, setSearchCityName] = useState('');\r\n  const [searchCities, setSearchCities] = useState([]);\r\n  const [dropdownCityVisible, setDropdownCityVisible] = useState(false);\r\n  const [dropdownWarehouseVisible, setDropdownWarehouseVisible] =\r\n    useState(false);\r\n\r\n  const [searchWarehouses, setSearchWarehouses] = useState('');\r\n  const [warehouseSearchType, setWarehouseSearchType] = useState(false);\r\n  const [warehouses, setWarehouses] = useState([]);\r\n  const [massegeCity, setMassegeCity] = useState({\r\n    messege: 'Loading...',\r\n    error: false,\r\n  });\r\n  const [massegeWarehous, setMassegeWarehous] = useState({\r\n    messege: 'Loading...',\r\n    error: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (formStatus === 'success') {\r\n      setSearchCityName('');\r\n      setSearchWarehouses('');\r\n    }\r\n  }, [formStatus]);\r\n\r\n  const handleСityName = async () => {\r\n    try {\r\n      const requestData = {\r\n        apiKey: APIKEY,\r\n        modelName: 'Address',\r\n        calledMethod: 'searchSettlements',\r\n        methodProperties: {\r\n          Page: '1',\r\n          CityName: searchCityName,\r\n          Limit: '120',\r\n        },\r\n      };\r\n\r\n      const response = await fetch('https://api.novaposhta.ua/v2.0/json/', {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json, text/plain, */*',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        const addresses = data.data[0].Addresses;\r\n\r\n        setSearchCities(addresses);\r\n      } else {\r\n        setSearchCities([]);\r\n        throw new Error(data.errors[0]);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMassegeCity({\r\n        messege: 'Місто не знайдено! Перевірте правильність написання',\r\n        error: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchCityName.length === 0) {\r\n      setWarehouseSearchType('');\r\n      setWarehouses([]);\r\n      setSearchWarehouses('');\r\n      setMassegeWarehous({\r\n        messege: 'Виберіть місто для перегляду відділень',\r\n        error: true,\r\n      });\r\n      setMassegeCity({\r\n        messege: 'Місто не знайдено! Перевірте правильність написання',\r\n        error: true,\r\n      });\r\n    } else {\r\n      handleСityName();\r\n      setMassegeWarehous({\r\n        messege: 'Loading...',\r\n        error: false,\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchCityName]);\r\n\r\n  const handleSearchTextChange = throttle(e => {\r\n    const value = e.target.value;\r\n    setSearchCityName(value.trim());\r\n\r\n    if (value.length > 0) {\r\n      setDropdownCityVisible(true);\r\n    } else {\r\n      setDropdownCityVisible(false);\r\n    }\r\n  }, 300);\r\n\r\n  const handleWarehousesChange = async () => {\r\n    try {\r\n      const requestData = {\r\n        apiKey: APIKEY,\r\n        modelName: 'Address',\r\n        calledMethod: 'getWarehouses',\r\n        methodProperties: {\r\n          CityRef: warehouseSearchType,\r\n          Limit: '500',\r\n          TypeOfWarehouseRef: '841339c7-591a-42e2-8233-7a0a00f0ed6f',\r\n        },\r\n      };\r\n\r\n      if (searchWarehouses) {\r\n        requestData.methodProperties.WarehouseRef = searchWarehouses;\r\n      }\r\n\r\n      const response = await fetch(\r\n        'https://api.novaposhta.ua/v2.0/json/Address',\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            Accept: 'application/json, text/plain, */*',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(requestData),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setWarehouses(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        'Помилка запиту до API Нової Пошти для населених пунктів',\r\n        error\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleCitySelect = (city, deliveryCity) => {\r\n    setDropdownCityVisible(false);\r\n    setSearchWarehouses('');\r\n    setSearchCityName(`${city}`);\r\n    setWarehouseSearchType(deliveryCity);\r\n    setValue('city', city);\r\n\r\n    if (deliveryCity && city) {\r\n      handleWarehousesChange();\r\n    }\r\n  };\r\n\r\n  const handleSearchTextChangeWarehose = throttle(e => {\r\n    const value = e.target.value;\r\n    setSearchWarehouses(value);\r\n    setDropdownWarehouseVisible(true);\r\n\r\n    if (searchCityName.length === 0 || value.length === 0) {\r\n      setDropdownWarehouseVisible(false);\r\n      setWarehouses([]);\r\n      setMassegeWarehous({\r\n        messege: 'Виберіть місто для перегляду відділень',\r\n        error: true,\r\n      });\r\n    }\r\n  }, 300);\r\n\r\n  const handleWarehouseSelect = warehouse => {\r\n    setSearchWarehouses(`${warehouse}`);\r\n    setDropdownWarehouseVisible(false);\r\n    setValue('warehouse', warehouse);\r\n  };\r\n  useEffect(() => {\r\n    if (warehouseSearchType) {\r\n      // handleСityName();\r\n      handleWarehousesChange();\r\n    } else if (searchCities.length === 0) {\r\n      setTimeout(() => {\r\n        setMassegeWarehous({\r\n          messege: 'Виберіть назву міста!',\r\n          error: true,\r\n        });\r\n      }, 2000);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchWarehouses, searchCities.length]);\r\n\r\n  // const handleFormSubmit = async e => {\r\n  //   e.preventDefault();\r\n\r\n  //   setIsSubmitting(true);\r\n  //   if (!searchCityName || !searchWarehouses) {\r\n  //     setPlaceholder(true);\r\n\r\n  //     setIsSubmitting(false);\r\n  //     return;\r\n  //   } else if (searchWarehouses !== nameWarehous) {\r\n  //     setPlaceholder(true);\r\n  //     setSearchWarehouses('');\r\n  //     setIsSubmitting(false);\r\n  //     return;\r\n  //   }\r\n  //   const dataToSendWarehouse = `${searchCityName}, ${searchWarehouses}`;\r\n  //   console.log(dataToSendWarehouse);\r\n\r\n  //   // setIsSubmitting(false);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <WrapTitle>\r\n        <ElipsTitle>2</ElipsTitle>\r\n        <Title>Інформація про доставку</Title>\r\n      </WrapTitle>\r\n      <WrapRadio>\r\n        <ElipsRadio />\r\n        <NameRadio>Доставка Новою поштою</NameRadio>\r\n      </WrapRadio>\r\n      <div>\r\n        <WrapForm>\r\n          <WrapInput>\r\n            <LabelStyle htmlFor=\"city\">Оберіть місто доставки *</LabelStyle>\r\n            <InputStyle\r\n              type=\"text\"\r\n              id=\"city\"\r\n              name=\"city\"\r\n              {...register('city')}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Оберіть місто доставки\"\r\n              $error={errors['city']}\r\n              value={searchCityName}\r\n              onChange={handleSearchTextChange}\r\n              onClick={() => {\r\n                !searchCityName === '' && setDropdownCityVisible(true);\r\n              }}\r\n              onBlur={() => {\r\n                setTimeout(() => {\r\n                  setDropdownCityVisible(false);\r\n                }, 200);\r\n              }}\r\n            />\r\n            {dropdownCityVisible && (\r\n              <WrapList>\r\n                <List>\r\n                  {searchCities.length === 0 ? (\r\n                    <Item>\r\n                      <Message $error={massegeCity.error}>\r\n                        {massegeCity.messege}\r\n                      </Message>\r\n                    </Item>\r\n                  ) : (\r\n                    searchCities.map(searchCity => (\r\n                      <Item\r\n                        key={nanoid()}\r\n                        onClick={() => {\r\n                          handleCitySelect(\r\n                            searchCity.Present,\r\n                            searchCity.DeliveryCity\r\n                          );\r\n                        }}\r\n                      >\r\n                        <Text>{searchCity.Present},</Text>\r\n                      </Item>\r\n                    ))\r\n                  )}\r\n                </List>\r\n              </WrapList>\r\n            )}\r\n          </WrapInput>\r\n          <WrapInput>\r\n            <LabelStyle htmlFor=\"warehouse\">Оберіть відділення *</LabelStyle>\r\n            <InputStyle\r\n              type=\"text\"\r\n              id=\"warehouse\"\r\n              name=\"warehouse\"\r\n              {...register('warehouse')}\r\n              value={searchWarehouses}\r\n              autoComplete=\"off\"\r\n              placeholder=\"Оберіть відділення\"\r\n              $error={errors['warehouse']}\r\n              onChange={handleSearchTextChangeWarehose}\r\n              onClick={() => {\r\n                setDropdownWarehouseVisible(true);\r\n              }}\r\n              onBlur={() => {\r\n                setTimeout(() => {\r\n                  setDropdownWarehouseVisible(false);\r\n                }, 200);\r\n              }}\r\n            />\r\n            {dropdownWarehouseVisible && (\r\n              <WrapList>\r\n                <List>\r\n                  {warehouses.length === 0 ? (\r\n                    <Item>\r\n                      <Message $error={massegeWarehous.error}>\r\n                        {massegeWarehous.messege}\r\n                      </Message>\r\n                    </Item>\r\n                  ) : (\r\n                    warehouses\r\n                      .filter(warehouse =>\r\n                        warehouse.Description.toLowerCase().includes(\r\n                          searchWarehouses.toLowerCase()\r\n                        )\r\n                      )\r\n                      .map(warehouse => (\r\n                        <Item\r\n                          key={nanoid()}\r\n                          onClick={() =>\r\n                            handleWarehouseSelect(warehouse.Description)\r\n                          }\r\n                        >\r\n                          <Text>{warehouse.Description}</Text>\r\n                        </Item>\r\n                      ))\r\n                  )}\r\n                </List>\r\n              </WrapList>\r\n            )}\r\n          </WrapInput>\r\n        </WrapForm>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const WrapTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 14px;\r\n  margin-bottom: 28px;\r\n  @media (min-width: 768px) {\r\n    gap: 24px;\r\n    margin-bottom: 37px;\r\n  }\r\n`;\r\nexport const RadioForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  &:not(:last-child) {\r\n    margin-bottom: 14px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    &:not(:last-child) {\r\n      margin-bottom: 20px;\r\n    }\r\n    gap: 8px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { InputMask } from 'primereact/inputmask';\r\n\r\nexport const WrapInput = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 6px;\r\n  @media (min-width: 768px) {\r\n    gap: 10px;\r\n  }\r\n`;\r\nexport const WrapRadioInput = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  @media (min-width: 768px) {\r\n    gap: 8px;\r\n  }\r\n`;\r\nexport const WrapCheckboxInput = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 3px;\r\n  @media (min-width: 768px) {\r\n    gap: 6px;\r\n  }\r\n`;\r\nexport const LabelStyle = styled.label`\r\n  color: #000;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  @media (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\n\r\nexport const InputStyle = styled.input`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 8.5px 16px;\r\n  border: 1px solid #000;\r\n  color: #000;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  border-color: ${p => p.$errors && 'red'};\r\n  &:focus {\r\n    outline: none;\r\n    border: 2px solid #000;\r\n  }\r\n  &::placeholder {\r\n    color: ${p => p.$errors && 'red'};\r\n  }\r\n  @media (min-width: 768px) {\r\n    max-width: 403px;\r\n    padding: 13px 16px;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const InputMaskStyle = styled(InputMask)`\r\nbox-sizing: border-box;\r\ndisplay: flex;\r\nwidth: 100%;\r\npadding: 8.5px 16px;\r\nborder: 1px solid #000;\r\ncolor: #000;\r\nfont-size: 14px;\r\nline-height: 140%;\r\nborder-color: ${p => p.$errors && 'red'};\r\n&:focus {\r\n  outline: none;\r\n  border: 2px solid #000;\r\n}\r\n&::placeholder {\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: ${p => p.$errors && 'red'};\r\n}\r\n@media (min-width: 768px) {\r\n  max-width: 403px;\r\n  padding: 13px 16px;\r\n  &::placeholder {\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const RadioLabel = styled.label`\r\n  display: flex;\r\n  gap: 10px;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: ${p => p.$errors && 'red'};\r\n  @media (min-width: 768px) {\r\n    gap: 12px;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\nexport const CheckboxLabel = styled.label`\r\n  display: flex;\r\n  gap: 10px;\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  color: #00000066;\r\n  color: ${p => p.$errors && 'red'};\r\n  @media (min-width: 768px) {\r\n    gap: 12px;\r\n    font-size: 16px;\r\n    line-height: 22px;\r\n  }\r\n`;\r\n","import {\r\n  CheckboxLabel,\r\n  InputMaskStyle,\r\n  InputStyle,\r\n  LabelStyle,\r\n  RadioLabel,\r\n  WrapCheckboxInput,\r\n  WrapInput,\r\n  WrapRadioInput,\r\n} from './OrderInput.styled';\r\n\r\nexport const OrderInput = ({\r\n  label,\r\n  type,\r\n  name,\r\n  register,\r\n  placeholder,\r\n  defaultChecked,\r\n  disabled,\r\n  errors,\r\n}) => {\r\n  return (\r\n    <>\r\n      {type === 'radio' ? (\r\n        <WrapRadioInput>\r\n          <RadioLabel htmlFor={name} $errors={errors[name]}>\r\n            <input\r\n              type={type}\r\n              id={name}\r\n              {...register(name)}\r\n              defaultChecked={defaultChecked}\r\n              disabled={disabled}\r\n            />\r\n            {label}\r\n          </RadioLabel>\r\n        </WrapRadioInput>\r\n      ) : type === 'checkbox' ? (\r\n        <WrapCheckboxInput>\r\n          <CheckboxLabel htmlFor={name} $errors={errors[name]}>\r\n            <input\r\n              type={type}\r\n              id={name}\r\n              {...register(name)}\r\n              defaultChecked={defaultChecked}\r\n              disabled={disabled}\r\n            />\r\n            {label}\r\n          </CheckboxLabel>\r\n        </WrapCheckboxInput>\r\n      ) : name === 'phoneNumber' ? (\r\n        <WrapInput>\r\n          <LabelStyle htmlFor={name}>{label}</LabelStyle>\r\n          <InputMaskStyle\r\n            {...register(name)}\r\n            mask=\"+38(099)999-99-99\"\r\n            id={name}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            autoComplete=\"true\"\r\n            $errors={errors[name]}\r\n            autoClear={false}\r\n          />\r\n        </WrapInput>\r\n      ) : (\r\n        <WrapInput>\r\n          <LabelStyle htmlFor={name}>{label}</LabelStyle>\r\n          <InputStyle\r\n            id={name}\r\n            {...register(name)}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            $errors={errors[name]}\r\n            autoComplete=\"true\"\r\n          ></InputStyle>\r\n        </WrapInput>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { RadioForm, WrapTitle } from './OrderPaymentForm.styled';\r\nimport { Title, ElipsTitle } from 'components/OrderForm/OrderForm.styled';\r\n\r\nimport { OrderInput } from 'components/OrderInput/OrderInput';\r\n\r\nexport const OrderPaymentForm = ({ register, errors }) => {\r\n  return (\r\n    <>\r\n      <WrapTitle>\r\n        <ElipsTitle>3</ElipsTitle>\r\n        <Title>Оплата</Title>\r\n      </WrapTitle>\r\n      <RadioForm>\r\n        <OrderInput\r\n          label={'Оплата за реквізитами'}\r\n          type=\"radio\"\r\n          name=\"payment online\"\r\n          register={register}\r\n          errors={errors}\r\n          disabled\r\n        />\r\n        <OrderInput\r\n          label={'Оплата при отриманні'}\r\n          type=\"radio\"\r\n          name=\"payment\"\r\n          register={register}\r\n          errors={errors}\r\n          defaultChecked\r\n        />\r\n      </RadioForm>\r\n      <RadioForm>\r\n        <OrderInput\r\n          label={\r\n            'Я погоджуюсь з договором оферти і політикою конфіденційності *'\r\n          }\r\n          type=\"checkbox\"\r\n          name=\"agreement\"\r\n          errors={errors}\r\n          register={register}\r\n        />\r\n        <OrderInput\r\n          label={'Зателефонуйте мені для уточнення деталей замовлення'}\r\n          type=\"checkbox\"\r\n          name=\"phone call\"\r\n          errors={errors}\r\n          register={register}\r\n        />\r\n      </RadioForm>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  @media (min-width: 768px) {\r\n    gap: 9px;\r\n  }\r\n`;\r\nexport const WrapTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 14px;\r\n  margin-bottom: 28px;\r\n  @media (min-width: 768px) {\r\n    gap: 24px;\r\n    margin-bottom: 37px;\r\n  }\r\n`;\r\n","import { Container, WrapTitle } from './OrderCustomerForm.styled';\r\nimport { Title, ElipsTitle } from 'components/OrderForm/OrderForm.styled';\r\n\r\nimport { OrderInput } from 'components/OrderInput/OrderInput';\r\n\r\nexport const OrderCustomerForm = ({ register, errors }) => {\r\n  return (\r\n    <>\r\n      <WrapTitle>\r\n        <ElipsTitle>1</ElipsTitle>\r\n        <Title>Особисті дані</Title>\r\n      </WrapTitle>\r\n      <Container>\r\n        <OrderInput\r\n          label={'Прізвище *'}\r\n          type=\"text\"\r\n          name=\"secondName\"\r\n          register={register}\r\n          placeholder={'Прізвище'}\r\n          errors={errors}\r\n        />\r\n        <OrderInput\r\n          label={'Ім’я *'}\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          register={register}\r\n          placeholder={'Ім’я'}\r\n          errors={errors}\r\n        />\r\n        <OrderInput\r\n          label={'Номер телефону *'}\r\n          name=\"phoneNumber\"\r\n          type=\"tel\"\r\n          register={register}\r\n          placeholder={'+38(0__)___-__-__'}\r\n          errors={errors}\r\n        />\r\n        <OrderInput\r\n          label={'E-Mail*'}\r\n          type=\"email\"\r\n          name=\"orderEmail\"\r\n          register={register}\r\n          placeholder={'E-mail'}\r\n          errors={errors}\r\n        />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  OrderFormSection,\r\n  Wrapper,\r\n  OrderBtn,\r\n  Form,\r\n  SuccessMessage,\r\n  SuccessIcon,\r\n  SuccessText,\r\n} from './OrderForm.styled';\r\nimport { Delivery } from 'components/Delivery/Delivery';\r\nimport { OrderPaymentForm } from 'components/OrderPaymentForm/OrderPaymentForm';\r\nimport { OrderCustomerForm } from 'components/OrderCustomerForm/OrderCustomerForm';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { orderFormSchema } from 'utils/yupSchema';\r\nimport { useState } from 'react';\r\nimport Sprite from '../../images/sprite.svg';\r\n\r\nexport const OrderForm = ({ orderSuccess }) => {\r\n  const [formStatus, setFormStatus] = useState(null);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n    resolver: yupResolver(orderFormSchema),\r\n    defaultValues: {\r\n      agreement: false,\r\n      'payment online': false,\r\n    },\r\n  });\r\n\r\n  const onSubmitSubscription = async formData => {\r\n    try {\r\n      if (!orderSuccess) {\r\n        setFormStatus('error');\r\n        setTimeout(() => {\r\n          setFormStatus(null);\r\n        }, 8000);\r\n        return;\r\n      } else {\r\n        console.log(formData);\r\n        setFormStatus('success');\r\n        setTimeout(() => {\r\n          setFormStatus(null);\r\n        }, 5000);\r\n        reset();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setFormStatus('error');\r\n      setTimeout(() => {\r\n        setFormStatus(null);\r\n      }, 5000);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <OrderFormSection>\r\n      <Wrapper>\r\n        {formStatus === 'success' ? (\r\n          <>\r\n            <SuccessIcon>\r\n              <use href={`${Sprite}#icon-success-order`}></use>\r\n            </SuccessIcon>\r\n            <SuccessMessage>Ваше замовлення №12856384 оформлено</SuccessMessage>\r\n            <SuccessText>\r\n              Очікуйте лист з деталями замовлення на вашу електронну адресу.\r\n            </SuccessText>\r\n            <SuccessText>Дякуємо, що обраєте Zatyshna.</SuccessText>\r\n          </>\r\n        ) : formStatus === 'error' ? (\r\n          <SuccessMessage>\r\n            Вибачте, наразі неможливо оформити замовлення.\r\n          </SuccessMessage>\r\n        ) : (\r\n          <Form onSubmit={handleSubmit(onSubmitSubscription)}>\r\n            <div>\r\n              <OrderCustomerForm register={register} errors={errors} />\r\n            </div>\r\n            <div>\r\n              <Delivery\r\n                register={register}\r\n                setValue={setValue}\r\n                errors={errors}\r\n                formStatus={formStatus}\r\n              />\r\n            </div>\r\n            <div>\r\n              <OrderPaymentForm register={register} errors={errors} />\r\n            </div>\r\n            <OrderBtn type=\"submit\">Оформити замовлення</OrderBtn>\r\n          </Form>\r\n        )}\r\n      </Wrapper>\r\n    </OrderFormSection>\r\n  );\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  LinkTo,\r\n  NavWrapper,\r\n  OrderWrapper,\r\n  Section,\r\n  Wrapper,\r\n  Title,\r\n  OrderResultSection,\r\n  OrderResultTitle,\r\n  OrderResultDeliveryFirst,\r\n  OrderResultDeliverySec,\r\n  OrderResultList,\r\n  OrderResultListItem,\r\n  OrderResultDestTotal,\r\n  OrderResultTotal,\r\n} from './Order.styled';\r\nimport { useEffect } from 'react';\r\nimport { OrderItem } from 'components/OrderItem/OrderItem';\r\nimport { useMedia } from 'hooks/useMedia';\r\nimport { OrderForm } from 'components/OrderForm/OrderForm';\r\nimport { useLocation } from 'react-router';\r\nimport { getOrder } from 'redux/cart/operations';\r\nimport { selectOrder, selectOrderItems } from 'redux/cart/selectors';\r\nimport { useState } from 'react';\r\n\r\nexport const Order = () => {\r\n  const dispatch = useDispatch();\r\n  const { state } = useLocation();\r\n  const { isMobileScreen } = useMedia();\r\n\r\n  const order = useSelector(selectOrder) || [];\r\n  const products = useSelector(selectOrderItems) || [];\r\n  const [orderSuccess, setOrderSuccess] = useState(null);\r\n\r\n  const { totalAmount, currencyCode, totalQuantity } = order;\r\n  const sessionId = state ? state?.sessionId : null;\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrder(sessionId));\r\n  }, [dispatch, sessionId]);\r\n\r\n  return (\r\n    <>\r\n      <NavWrapper>\r\n        <LinkTo to={'/'}>Головна</LinkTo>\r\n        {!isMobileScreen ? (\r\n          <>\r\n            <span>|</span>\r\n            <LinkTo to={'/cart'}>Кошик</LinkTo>\r\n            <span>|</span>\r\n            <LinkTo to={'/order'}>Оформлення замовлення</LinkTo>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <span>|</span>\r\n            <LinkTo to={'/order'}>Оформлення замовлення</LinkTo>\r\n          </>\r\n        )}\r\n      </NavWrapper>\r\n      <Section>\r\n        <Wrapper>\r\n          <Title>Ваше замовлення</Title>\r\n          <OrderWrapper>\r\n            {products.map(item => (\r\n              <OrderItem\r\n                key={item.id}\r\n                item={item}\r\n                setOrderSuccess={setOrderSuccess}\r\n              />\r\n            ))}\r\n          </OrderWrapper>\r\n        </Wrapper>\r\n      </Section>\r\n      <OrderResultSection>\r\n        <Wrapper>\r\n          {isMobileScreen ? (\r\n            <>\r\n              <OrderResultTitle>Всього</OrderResultTitle>\r\n              <OrderResultList>\r\n                <OrderResultListItem>\r\n                  <OrderResultTotal>\r\n                    {totalQuantity} товари(-ів) на суму\r\n                  </OrderResultTotal>\r\n                  <OrderResultTotal>\r\n                    {totalAmount} {currencyCode}\r\n                  </OrderResultTotal>\r\n                </OrderResultListItem>\r\n                <OrderResultListItem>\r\n                  <OrderResultDeliveryFirst>\r\n                    Вартість доставки\r\n                  </OrderResultDeliveryFirst>\r\n                  <OrderResultDeliverySec>\r\n                    За тарифами перевізника\r\n                  </OrderResultDeliverySec>\r\n                </OrderResultListItem>\r\n              </OrderResultList>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <OrderResultList>\r\n                <OrderResultListItem>\r\n                  <OrderResultTotal>\r\n                    {totalQuantity} товари(-ів) на суму\r\n                  </OrderResultTotal>\r\n                  <OrderResultTotal>\r\n                    {totalAmount} {currencyCode}\r\n                  </OrderResultTotal>\r\n                </OrderResultListItem>\r\n                <OrderResultListItem>\r\n                  <OrderResultDeliveryFirst>\r\n                    Вартість доставки\r\n                  </OrderResultDeliveryFirst>\r\n                  <OrderResultDeliverySec>\r\n                    За тарифами перевізника\r\n                  </OrderResultDeliverySec>\r\n                </OrderResultListItem>\r\n                <OrderResultListItem>\r\n                  <OrderResultTitle>Разом:</OrderResultTitle>\r\n                  <OrderResultDestTotal>\r\n                    {totalAmount} {currencyCode}\r\n                  </OrderResultDestTotal>\r\n                </OrderResultListItem>\r\n              </OrderResultList>\r\n            </>\r\n          )}\r\n        </Wrapper>\r\n      </OrderResultSection>\r\n      <OrderForm orderSuccess={orderSuccess} />\r\n    </>\r\n  );\r\n};\r\n","import { Order } from 'components/Order/Order';\r\n\r\nconst OrderPage = () => {\r\n  return (\r\n    <main>\r\n      <Order />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","import * as Yup from 'yup';\r\n\r\nexport const emailSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .required('Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .min(6, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .max(63, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .matches(\r\n      /^[a-zA-Z0-9_][a-zA-Z0-9_.-]*@[a-zA-Z0-9.-]+[a-zA-Z0-9-]*\\.[a-zA-Z]{2,4}$/,\r\n      'Будь ласка, введіть дійсну адресу електронної пошти.'\r\n    ),\r\n});\r\n\r\nexport const formSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .trim()\r\n    .required('Поле обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(70, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^(?!.*(\\s-|-\\s)|.*--|.*——|.*––|.*–\\s|.*\\s–|.*—\\s|.*\\s—)[а-яА-Яa-zA-Z\\s'’\\-–—ЇїІіЄєҐґ]*$/,\r\n      'Невірне імʼя'\r\n    ),\r\n  email: Yup.string()\r\n    .required('Поле обовʼязкове до заповнення')\r\n    .min(6, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .max(63, 'Будь ласка, введіть дійсну адресу електронної пошти.')\r\n    .matches(\r\n      /^[a-zA-Z0-9_][a-zA-Z0-9_.-]*@[a-zA-Z0-9.-]+[a-zA-Z0-9-]*\\.[a-zA-Z]{2,4}$/,\r\n      'Будь ласка, введіть дійсну адресу електронної пошти.'\r\n    ),\r\n  message: Yup.string()\r\n    .trim()\r\n    .required('Поле обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(1000, 'Перевищена максимальна кількість'),\r\n});\r\n\r\nexport const orderFormSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .trim()\r\n    .required('Поле імʼя обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(70, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^(?!.*(\\s-|-\\s)|.*--|.*——|.*––|.*–\\s|.*\\s–|.*—\\s|.*\\s—)[а-яА-Яa-zA-Z\\s'’\\-–—ЇїІіЄєҐґ]*$/,\r\n      'Невірне імʼя'\r\n    ),\r\n  secondName: Yup.string()\r\n    .trim()\r\n    .required('Поле імʼя обовʼязкове до заповнення')\r\n    .min(3, 'Поле має містити як мінімум 3 символи')\r\n    .max(70, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^(?!.*(\\s-|-\\s)|.*--|.*——|.*––|.*–\\s|.*\\s–|.*—\\s|.*\\s—)[а-яА-Яa-zA-Z\\s'’\\-–—ЇїІіЄєҐґ]*$/,\r\n      'Невірне імʼя'\r\n    ),\r\n  orderEmail: Yup.string()\r\n    .required('Поле пошта обовʼязкове до заповнення')\r\n    .min(6, 'Поле має містити як мінімум 6 символів')\r\n    .max(63, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^[a-zA-Z0-9_][a-zA-Z0-9_.-]*@[a-zA-Z0-9.-]+[a-zA-Z0-9-]*\\.[a-zA-Z]{2,4}$/,\r\n      'Будь ласка, введіть дійсну адресу електронної пошти.'\r\n    ),\r\n  phoneNumber: Yup.string()\r\n    .trim()\r\n    .required('Поле телефону обовʼязкове до заповнення')\r\n    .min(10, 'Поле має містити як мінімум 10 символів')\r\n    .max(17, 'Перевищена максимальна кількість')\r\n    .matches(\r\n      /^\\+\\d{2}\\(\\d{3}\\)\\d{3}-\\d{2}-\\d{2}$/,\r\n      'Будь ласка, введіть дійсний номер телефону.'\r\n    ),\r\n  city: Yup.string().trim().required('Поле обовʼязкове до заповнення'),\r\n  warehouse: Yup.string().trim().required('Поле обовʼязкове до заповнення'),\r\n  agreement: Yup.boolean().oneOf([true], 'Поле обовʼязкове'),\r\n});\r\n"],"names":["Section","styled","section","_templateObject","_taggedTemplateLiteral","NavWrapper","div","_templateObject2","Wrapper","_templateObject3","Title","h2","_templateObject4","LinkTo","Link","_templateObject5","OrderWrapper","_templateObject6","OrderResultSection","_templateObject7","OrderResultTitle","h3","_templateObject8","OrderResultDeliveryFirst","p","_templateObject9","OrderResultDeliverySec","_templateObject10","OrderResultList","ul","_templateObject11","OrderResultListItem","li","_templateObject12","OrderResultTotal","_templateObject13","OrderResultDestTotal","_templateObject14","ItemWrapper","Container","OrderImage","img","OrderContent","OrderContentWrapper","OrderTitle","OrderDescription","OrderText","OrderPrice","OrderColor","$color","OrderError","OrderErrorText","OrderItem","_ref","item","setOrderSuccess","photoUrl","productTitle","sku","amount","currencyCode","quantity","isMobileScreen","useMedia","color","characteristics","name","colorhex","value","size","availableQuantity","useEffect","_jsx","_Fragment","children","_jsxs","src","concat","noImage","slice","OrderFormSection","ElipsTitle","Form","form","OrderBtn","button","SuccessMessage","SuccessIcon","svg","SuccessText","WrapTitle","WrapRadio","ElipsRadio","NameRadio","WrapForm","WrapInput","LabelStyle","label","InputStyle","input","$error","WrapList","List","Item","Text","Message","APIKEY","Delivery","register","setValue","errors","formStatus","_useState","useState","_useState2","_slicedToArray","searchCityName","setSearchCityName","_useState3","_useState4","searchCities","setSearchCities","_useState5","_useState6","dropdownCityVisible","setDropdownCityVisible","_useState7","_useState8","dropdownWarehouseVisible","setDropdownWarehouseVisible","_useState9","_useState10","searchWarehouses","setSearchWarehouses","_useState11","_useState12","warehouseSearchType","setWarehouseSearchType","_useState13","_useState14","warehouses","setWarehouses","_useState15","messege","error","_useState16","massegeCity","setMassegeCity","_useState17","_useState18","massegeWarehous","setMassegeWarehous","handleСityName","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestData","response","data","addresses","wrap","_context","prev","next","apiKey","modelName","calledMethod","methodProperties","Page","CityName","Limit","fetch","method","headers","Accept","body","JSON","stringify","sent","ok","Error","status","json","success","Addresses","t0","console","stop","apply","arguments","length","handleSearchTextChange","throttle","e","target","trim","handleWarehousesChange","_ref3","_callee2","_context2","CityRef","TypeOfWarehouseRef","WarehouseRef","handleSearchTextChangeWarehose","setTimeout","htmlFor","_objectSpread","type","id","autoComplete","placeholder","onChange","onClick","onBlur","map","searchCity","city","deliveryCity","Present","DeliveryCity","nanoid","filter","warehouse","Description","toLowerCase","includes","handleWarehouseSelect","RadioForm","WrapRadioInput","WrapCheckboxInput","$errors","InputMaskStyle","InputMask","RadioLabel","CheckboxLabel","OrderInput","defaultChecked","disabled","mask","autoClear","OrderPaymentForm","OrderCustomerForm","OrderForm","orderSuccess","setFormStatus","_useForm","useForm","mode","resolver","yupResolver","orderFormSchema","defaultValues","agreement","handleSubmit","formState","reset","onSubmitSubscription","formData","abrupt","log","finish","_x","href","Sprite","onSubmit","Order","dispatch","useDispatch","state","useLocation","order","useSelector","selectOrder","products","selectOrderItems","totalAmount","totalQuantity","sessionId","getOrder","to","emailSchema","Yup","shape","email","required","min","max","matches","formSchema","message","firstName","secondName","orderEmail","phoneNumber","oneOf"],"sourceRoot":""}